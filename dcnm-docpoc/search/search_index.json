{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#cisco-dcnm-collection","title":"Cisco DCNM Collection","text":"<p>The Ansible Cisco Nexus\u00ae Dashboard Fabric Controller (NDFC) (formerly Cisco Data Center Network Manager (DCNM)) collection includes modules to help automate common day 2 operations for VXLAN EVPN fabrics.</p>"},{"location":"#included-content","title":"Included content","text":""},{"location":"#httpapi-plugins","title":"Httpapi plugins","text":"Name Description cisco.dcnm.dcnm Ansible DCNM HTTPAPI Plugin."},{"location":"#modules","title":"Modules","text":"Name Description cisco.dcnm.dcnm_fabric Manage creation and configuration of NDFC fabrics. cisco.dcnm.dcnm_image_policy Image policy management for Nexus Dashboard Fabric Controller cisco.dcnm.dcnm_image_upgrade Image management for Nexus switches cisco.dcnm.dcnm_image_upload DCNM Ansible Module for managing images. cisco.dcnm.dcnm_interface DCNM Ansible Module for managing interfaces. cisco.dcnm.dcnm_inventory Add and remove Switches from a DCNM managed VXLAN fabric. cisco.dcnm.dcnm_links DCNM ansible module for managing Links. cisco.dcnm.dcnm_maintenance_mode Manage Maintenance Mode Configuration of NX-OS Switches. cisco.dcnm.dcnm_network Add and remove Networks from a DCNM managed VXLAN fabric. cisco.dcnm.dcnm_policy DCNM Ansible Module for managing policies. cisco.dcnm.dcnm_resource_manager DCNM ansible module for managing resources. cisco.dcnm.dcnm_rest Send REST API requests to DCNM controller. cisco.dcnm.dcnm_service_node Create/Modify/Delete service node based on type and attached interfaces from a DCNM managed VXLAN fabric. cisco.dcnm.dcnm_service_policy DCNM ansible module for managing service policies. cisco.dcnm.dcnm_service_route_peering DCNM Ansible Module for managing Service Route Peerings. cisco.dcnm.dcnm_template DCNM Ansible Module for managing templates. cisco.dcnm.dcnm_vpc_pair DCNM Ansible Module for managing VPC switch pairs required for VPC interfaces. cisco.dcnm.dcnm_vrf Add and remove VRFs from a DCNM managed VXLAN fabric. <p>Click the <code>Content</code> button to see the list of content included in this collection.</p>"},{"location":"#installing-this-collection","title":"Installing this collection","text":"<p>You can install the Cisco DCNM collection with the Ansible Galaxy CLI:</p> <pre><code>ansible-galaxy collection install cisco.dcnm\n</code></pre> <p>You can also include it in a <code>requirements.yml</code> file and install it with <code>ansible-galaxy collection install -r requirements.yml</code>, using the format:</p> <pre><code>---\ncollections:\n  - name: cisco.dcnm\n    version: 3.5.1\n</code></pre>"},{"location":"#using-this-collection","title":"Using this collection","text":""},{"location":"#using-modules-from-the-cisco-dcnm-collection-in-your-playbooks","title":"Using modules from the Cisco DCNM collection in your playbooks","text":"<p>You can call modules by their Fully Qualified Collection Namespace (FQCN), such as <code>cisco.dcnm.dcnm_inventory</code>. The following example task adds a switch to an existing fabric, using the FQCN:</p> <pre><code>---\n\n- hosts: dcnm_controllers\n  gather_facts: false\n  connection: ansible.netcommon.httpapi\n\n  vars:\n    password: !vault |\n        $ANSIBLE_VAULT;1.1;AES256\n        32393431346235343736383635656339363132666463316231653862373335356366663561316665\n        3730346133626437383337366664616264656534313536640a303639313666373261633064343361\n        33396463306231313937303766343165333332613636393263343734613136636232636162363639\n        3233353437366362330a623962613031626633396630653530626636383333633065653965383864\n        3165\n\n  tasks:\n    - name: Add switch n9kv-spine1 to fabric vxlan-fabric.\n      cisco.dcnm.dcnm_inventory:\n        fabric: vxlan-fabric\n        state: overridden\n        config:\n        - seed_ip: n9kv-spine1\n          auth_proto: MD5 # choose from [MD5, SHA, MD5_DES, MD5_AES, SHA_DES, SHA_AES]\n          user_name: admin\n          password: \"{{ password }}\"\n          max_hops: 0\n          role: spine # default is Leaf - choose from [leaf, spine, border, border_spine, border_gateway, border_gateway_spine\n                           # super_spine, border_super_spine, border_gateway_super_spine]\n          preserve_config: false # boolean, default is  true\n      vars:\n          ansible_command_timeout: 1000\n          ansible_connect_timeout: 1000\n      no_log: true\n</code></pre> <p>Alternately, you can call modules by their short name if you list the <code>cisco.dcnm</code> collection in the playbook's <code>collections</code>, as follows:</p> <pre><code>---\n- hosts: dcnm_controllers\n  gather_facts: false\n  connection: httpapi\n\n  collections:\n    - cisco.dcnm\n\n  tasks:\n    - name: Merge a Switch\n      dcnm_inventory:\n        ...parameters...\n</code></pre> <p>Sample hosts file using the dcnm httpapi connection plugin in either the INI or YAML format.</p> <ul> <li>Ansible INI Format</li> </ul> <pre><code>[dcnm_controllers]\n192.168.2.10\n\n[dcnm_controllers:vars]\nansible_user=dcnm_username\nansible_ssh_pass=dcnm_password\nansible_network_os=cisco.dcnm.dcnm\nansible_httpapi_validate_certs=False\nansible_httpapi_use_ssl=True\nansible_httpapi_login_domain=local\n</code></pre> <ul> <li>Ansible YAML Format</li> </ul> <pre><code>all:\n  vars:\n    ansible_user: \"dcnm_username\"\n    ansible_password: \"dcnm_password\"\n    ansible_python_interpreter: python\n    ansible_httpapi_validate_certs: False\n    ansible_httpapi_use_ssl: True\n    ansible_httpapi_login_domain: local\n  children:\n    dcnm_controllers:\n      hosts:\n        192.168.2.10:\n           ansible_network_os: cisco.dcnm.dcnm\n</code></pre>"},{"location":"#see-also","title":"See Also:","text":"<ul> <li>Ansible Using collections for more details.</li> </ul>"},{"location":"#contributing-to-this-collection","title":"Contributing to this collection","text":"<p>Ongoing development efforts and contributions to this collection are solely focused on enhancements to current dcnm modules, additional dcnm modules and enhancements to the connection plugin.</p> <p>We welcome community contributions to this collection. If you find problems, please open an issue or create a PR against the Cisco DCNM collection repository.</p>"},{"location":"#changelogs","title":"Changelogs","text":"<ul> <li>Changelog</li> </ul>"},{"location":"#more-information","title":"More information","text":"<ul> <li>DCNM installation and configuration guides</li> <li>NDFC installation and configuration guides</li> <li>Ansible User guide</li> <li>Ansible Developer guide</li> </ul>"},{"location":"#licensing","title":"Licensing","text":"<p>Copyright (c) 2020-2022 Cisco and/or its affiliates.</p> <p>Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at</p> <pre><code>http://www.apache.org/licenses/LICENSE-2.0\n</code></pre> <p>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.</p>"},{"location":"installation/ansible-galaxy/","title":"ansible-galaxy","text":""},{"location":"installation/ansible-galaxy/#installing-the-latest-version","title":"Installing the latest version","text":"<p>You can install the Cisco DCNM collection with the Ansible Galaxy CLI.</p> Installing with ansible-galaxy<pre><code>ansible-galaxy collection install cisco.dcnm\n</code></pre>"},{"location":"installation/ansible-galaxy/#installing-a-specific-version","title":"Installing a specific version","text":"<p>To install a specific version, you can include it in a <code>requirements.yml</code> file and install with the following.</p> Installing a specific version<pre><code>ansible-galaxy collection install -r requirements.yml\n</code></pre> <p>Where <code>requirements.yml</code> contains.</p> requirements.yml<pre><code>---\ncollections:\n  - name: cisco.dcnm\n    version: 3.5.1\n</code></pre>"},{"location":"installation/ansible-version-compatibility/","title":"Ansible version compatibility","text":"<p>This collection has been tested against following Ansible versions</p> <p>&gt;=2.15.0.</p> <p>For collections that support Ansible 2.9, please ensure you update your <code>network_os</code> to use the fully qualified collection name (for example, <code>cisco.ios.ios</code>). Plugins and modules within a collection may be tested with only specific Ansible versions. A collection may contain metadata that identifies these versions. PEP440 is the schema used to describe the versions of Ansible.</p>"},{"location":"installation/dcnm-and-ndfc-version-compatibility/","title":"DCNM and NDFC version compatibility","text":"<p>This collection is intended for use with the following release versions.</p> <ul> <li><code>DCNM Release 11.4(1)</code> or later</li> <li><code>NDFC Release 12.0</code> or later.</li> </ul>"},{"location":"installation/supported-connections/","title":"Supported Connections","text":""},{"location":"installation/supported-connections/#supported-connections","title":"Supported connections","text":"<p>The Cisco DCNM collection supports <code>httpapi</code> connections.</p>"},{"location":"modules/dcnm_bootflash/","title":"dcnm_bootflash","text":"Details <ul> <li>author<ul> <li>Allen Robel (@quantumonion)</li> </ul> </li> <li>description<ul> <li>Delete, query bootflash files.</li> </ul> </li> <li>short_description<ul> <li>Bootflash management for Nexus switches.</li> </ul> </li> <li>version_added<ul> <li>3.6.0</li> </ul> </li> </ul>"},{"location":"modules/dcnm_bootflash/#options","title":"options","text":"Details"},{"location":"modules/dcnm_bootflash/#config","title":"config","text":"Details <ul> <li>description<ul> <li>Configuration parameters for the module.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> </ul>"},{"location":"modules/dcnm_bootflash/#switches","title":"switches","text":"Details <ul> <li>description<ul> <li>List of dictionaries containing switches on which query or delete operations are executed.</li> </ul> </li> <li>elements<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_bootflash/#ip_address","title":"ip_address","text":"Details <ul> <li>description<ul> <li>The ip address of a switch.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_bootflash/#targets","title":"targets","text":"Details <ul> <li>default<ul> <li>[]</li> </ul> </li> <li>description<ul> <li>List of dictionaries containing options for files to be deleted or queried.</li> </ul> </li> <li>elements<ul> <li>dict</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> </ul>"},{"location":"modules/dcnm_bootflash/#filepath","title":"filepath","text":"Details <ul> <li>description<ul> <li>The path to the file to be deleted or queried.  Only files in the root directory of the partition are currently supported.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_bootflash/#supervisor","title":"supervisor","text":"Details <ul> <li>choices<ul> <li>active</li> <li>standby</li> </ul> </li> <li>default<ul> <li>active</li> </ul> </li> <li>description<ul> <li>Either active or standby. The supervisor containing the filepath.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_bootflash/#targets_1","title":"targets","text":"Details <ul> <li>default<ul> <li>[]</li> </ul> </li> <li>description<ul> <li>List of dictionaries containing options for files to be deleted or queried.</li> </ul> </li> <li>elements<ul> <li>dict</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> </ul>"},{"location":"modules/dcnm_bootflash/#filepath_1","title":"filepath","text":"Details <ul> <li>description<ul> <li>The path to the file to be deleted or queried.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_bootflash/#supervisor_1","title":"supervisor","text":"Details <ul> <li>choices<ul> <li>active</li> <li>standby</li> </ul> </li> <li>default<ul> <li>active</li> </ul> </li> <li>description<ul> <li>Either active or standby. The supervisor containing the filepath.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> <li>type<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_bootflash/#state","title":"state","text":"Details <ul> <li>choices<ul> <li>deleted</li> <li>query</li> </ul> </li> <li>default<ul> <li>query</li> </ul> </li> <li>description<ul> <li>The state of the feature or object after module completion</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_bootflash/#examples","title":"Examples","text":"Details <pre><code>---\n# This module supports the following states:\n#\n# deleted:\n#   Delete files from the bootflash of one or more switches.\n#\n#   If an image is in use by a device, the module will fail.  Use\n#   dcnm_image_upgrade module, state deleted, to detach image policies\n#   containing images to be deleted.\n#\n# query:\n#\n#   Return information for one or more files.\n#\n# Delete two files from each of three switches.\n\n- name: Delete two files from each of two switches\n  cisco.dcnm.dcnm_bootflash:\n    state: deleted\n    config:\n      targets:\n        - filepath: bootflash:/foo.txt\n          supervisor: active\n        - filepath: bootflash:/bar.txt\n          supervisor: standby\n      switches:\n        - ip_address: 192.168.1.1\n        - ip_address: 192.168.1.2\n        - ip_address: 192.168.1.3\n\n# Delete two files from switch 192.168.1.1 and switch 192.168.1.2:\n#   - foo.txt on the active supervisor's bootflash: device.\n#   - bar.txt on the standby supervisor's bootflash: device.\n# Delete potentially multiple files from switch 192.168.1.3:\n#   - All txt files on the standby supervisor's bootflash: device\n#     that match the pattern 202401??.txt, e.g. 20240123.txt.\n# Delete potentially multiple files from switch 192.168.1.4:\n#   - All txt files on all flash devices on active supervisor.\n\n- name: Delete files\n  cisco.dcnm.dcnm_bootflash:\n    state: deleted\n    config:\n      targets:\n        - filepath: bootflash:/foo.txt\n          supervisor: active\n        - filepath: bootflash:/bar.txt\n          supervisor: standby\n      switches:\n        - ip_address: 192.168.1.1\n        - ip_address: 192.168.1.2\n        - ip_address: 192.168.1.3\n          targets:\n            - filepath: bootflash:/202401??.txt\n              supervisor: standby\n        - ip_address: 192.168.1.4\n          targets:\n            - filepath: \"*:/*.txt\"\n              supervisor: active\n  register: result\n- name: print result\n  ansible.builtin.debug:\n    var: result\n\n# Query the controller for information about one file on three switches.\n# Since the default for supervisor is \"active\", the module will query the\n# active supervisor's bootflash: device.\n\n- name: Query file on three switches\n  cisco.dcnm.dcnm_bootflash:\n    state: query\n    config:\n      targets:\n        - filepath: bootflash:/foo.txt\n    switches:\n      - ip_address: 192.168.1.1\n      - ip_address: 192.168.1.2\n      - ip_address: 192.168.1.3\n  register: result\n- name: print result\n  ansible.builtin.debug:\n    var: result\n</code></pre>"},{"location":"modules/dcnm_fabric/","title":"dcnm_fabric","text":"Details <ul> <li>author<ul> <li>Allen Robel (@quantumonion)</li> </ul> </li> <li>description<ul> <li>Create, delete, update NDFC fabrics.</li> </ul> </li> <li>short_description<ul> <li>Manage creation and configuration of NDFC fabrics.</li> </ul> </li> <li>version_added<ul> <li>3.5.0</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#options","title":"options","text":"Details"},{"location":"modules/dcnm_fabric/#config","title":"config","text":"Details <ul> <li>description<ul> <li>A list of fabric configuration dictionaries</li> </ul> </li> <li>elements<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#deploy","title":"DEPLOY","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Save and deploy the fabric configuration.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#fabric_name","title":"FABRIC_NAME","text":"Details <ul> <li>description<ul> <li>The name of the fabric.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#fabric_type","title":"FABRIC_TYPE","text":"Details <ul> <li>choices<ul> <li>IPFM</li> <li>ISN</li> <li>LAN_CLASSIC</li> <li>VXLAN_EVPN</li> <li>VXLAN_EVPN_MSD</li> </ul> </li> <li>description<ul> <li>The type of fabric.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#ipfm_fabric_parameters","title":"IPFM_FABRIC_PARAMETERS","text":"Details <ul> <li>description<ul> <li>IPFM (IP Fabric for Media) fabric specific parameters. </li> <li>The following parameters are specific to IPFM fabrics. </li> <li>Fabric for a fully automated deployment of IP Fabric for Media Network with Nexus 9000 switches. </li> <li>The indentation of these parameters is meant only to logically group them. </li> <li>They should be at the same YAML level as FABRIC_TYPE and FABRIC_NAME.</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#aaa_remote_ip_enabled","title":"AAA_REMOTE_IP_ENABLED","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable only, when IP Authorization is enabled in the AAA Server</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#aaa_server_conf","title":"AAA_SERVER_CONF","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>AAA Configurations</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#asm_group_ranges","title":"ASM_GROUP_RANGES","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>ASM group ranges with prefixes (len:4-32) example: 239.1.1.0/25, max 20 ranges. Enabling SPT-Threshold Infinity to prevent switchover to source-tree.</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#bootstrap_conf","title":"BOOTSTRAP_CONF","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Additional CLIs required during device bootup/login e.g. AAA/Radius</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#bootstrap_enable","title":"BOOTSTRAP_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Automatic IP Assignment For POAP</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#bootstrap_multisubnet","title":"BOOTSTRAP_MULTISUBNET","text":"Details <ul> <li>default<ul> <li>Scope_Start_IP, Scope_End_IP, Scope_Default_Gateway, Scope_Subnet_Prefix</li> </ul> </li> <li>description<ul> <li>'lines with</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#cdp_enable","title":"CDP_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable CDP on management interface</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#dhcp_enable","title":"DHCP_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Automatic IP Assignment For POAP From Local DHCP Server</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#dhcp_end","title":"DHCP_END","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>End Address For Switch Out-of-Band POAP</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#dhcp_ipv6_enable","title":"DHCP_IPV6_ENABLE","text":"Details <ul> <li>choices<ul> <li>DHCPv4</li> </ul> </li> <li>default<ul> <li>DHCPv4</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#dhcp_start","title":"DHCP_START","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Start Address For Switch Out-of-Band POAP</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#dns_server_ip_list","title":"DNS_SERVER_IP_LIST","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Comma separated list of IP Addresses (v4/v6)</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#dns_server_vrf","title":"DNS_SERVER_VRF","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>One VRF for all DNS servers or a comma separated list of VRFs, one per DNS server</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enable_aaa","title":"ENABLE_AAA","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Include AAA configs from Manageability tab during device bootup</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enable_asm","title":"ENABLE_ASM","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable groups with receivers sending (*,G) joins</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enable_nbm_passive","title":"ENABLE_NBM_PASSIVE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable NBM mode to pim-passive for default VRF</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#extra_conf_intra_links","title":"EXTRA_CONF_INTRA_LINKS","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Additional CLIs For All Intra-Fabric Links</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#extra_conf_leaf","title":"EXTRA_CONF_LEAF","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Additional CLIs For All Leafs and Tier2 Leafs As Captured From Show Running Configuration</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#extra_conf_spine","title":"EXTRA_CONF_SPINE","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Additional CLIs For All Spines As Captured From Show Running Configuration</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#fabric_interface_type","title":"FABRIC_INTERFACE_TYPE","text":"Details <ul> <li>choices<ul> <li>p2p</li> </ul> </li> <li>default<ul> <li>p2p</li> </ul> </li> <li>description<ul> <li>Only Numbered(Point-to-Point) is supported</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#fabric_mtu","title":"FABRIC_MTU","text":"Details <ul> <li>default<ul> <li>9216</li> </ul> </li> <li>description<ul> <li>. Must be an even number</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#fabric_name_1","title":"FABRIC_NAME","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Name of the fabric (Max Size 64)</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#feature_ptp","title":"FEATURE_PTP","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#isis_auth_enable","title":"ISIS_AUTH_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#isis_auth_key","title":"ISIS_AUTH_KEY","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Cisco Type 7 Encrypted</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#isis_auth_keychain_key_id","title":"ISIS_AUTH_KEYCHAIN_KEY_ID","text":"Details <ul> <li>default<ul> <li>127</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#isis_auth_keychain_name","title":"ISIS_AUTH_KEYCHAIN_NAME","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#isis_level","title":"ISIS_LEVEL","text":"Details <ul> <li>choices<ul> <li>level-1</li> <li>level-2</li> </ul> </li> <li>default<ul> <li>level-2</li> </ul> </li> <li>description<ul> <li>Supported IS types: level-1, level-2</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#isis_p2p_enable","title":"ISIS_P2P_ENABLE","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>This will enable network point-to-point on fabric interfaces which are numbered</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#l2_host_intf_mtu","title":"L2_HOST_INTF_MTU","text":"Details <ul> <li>default<ul> <li>9216</li> </ul> </li> <li>description<ul> <li>. Must be an even number</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#link_state_routing","title":"LINK_STATE_ROUTING","text":"Details <ul> <li>choices<ul> <li>ospf</li> <li>is-is</li> </ul> </li> <li>default<ul> <li>ospf</li> </ul> </li> <li>description<ul> <li>Used for Spine-Leaf Connectivity</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#link_state_routing_tag","title":"LINK_STATE_ROUTING_TAG","text":"Details <ul> <li>default<ul> <li>1</li> </ul> </li> <li>description<ul> <li>Routing process tag for the fabric</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#loopback0_ip_range","title":"LOOPBACK0_IP_RANGE","text":"Details <ul> <li>default<ul> <li>10.2.0.0/22</li> </ul> </li> <li>description<ul> <li>Routing Loopback IP Address Range</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#mgmt_gw","title":"MGMT_GW","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Default Gateway For Management VRF On The Switch</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#mgmt_prefix","title":"MGMT_PREFIX","text":"Details <ul> <li>default<ul> <li>24</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#ntp_server_ip_list","title":"NTP_SERVER_IP_LIST","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Comma separated list of IP Addresses (v4/v6)</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#ntp_server_vrf","title":"NTP_SERVER_VRF","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>One VRF for all NTP servers or a comma separated list of VRFs, one per NTP server</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#nxapi_vrf","title":"NXAPI_VRF","text":"Details <ul> <li>choices<ul> <li>management</li> <li>default</li> </ul> </li> <li>default<ul> <li>management</li> </ul> </li> <li>description<ul> <li>VRF used for NX-API communication</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#ospf_area_id","title":"OSPF_AREA_ID","text":"Details <ul> <li>default<ul> <li>0.0.0.0</li> </ul> </li> <li>description<ul> <li>OSPF Area Id in IP address format</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#ospf_auth_enable","title":"OSPF_AUTH_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#ospf_auth_key","title":"OSPF_AUTH_KEY","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>3DES Encrypted</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#ospf_auth_key_id","title":"OSPF_AUTH_KEY_ID","text":"Details <ul> <li>default<ul> <li>127</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#pim_hello_auth_enable","title":"PIM_HELLO_AUTH_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#pim_hello_auth_key","title":"PIM_HELLO_AUTH_KEY","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>3DES Encrypted</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#pm_enable","title":"PM_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#power_redundancy_mode","title":"POWER_REDUNDANCY_MODE","text":"Details <ul> <li>choices<ul> <li>ps-redundant</li> <li>combined</li> <li>insrc-redundant</li> </ul> </li> <li>default<ul> <li>ps-redundant</li> </ul> </li> <li>description<ul> <li>Default power supply mode for the fabric</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#ptp_domain_id","title":"PTP_DOMAIN_ID","text":"Details <ul> <li>default<ul> <li>0</li> </ul> </li> <li>description<ul> <li>'Multiple Independent PTP Clocking Subdomains on a Single Network '</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#ptp_lb_id","title":"PTP_LB_ID","text":"Details <ul> <li>default<ul> <li>0</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#ptp_profile","title":"PTP_PROFILE","text":"Details <ul> <li>choices<ul> <li>IEEE-1588v2</li> <li>SMPTE-2059-2</li> <li>AES67-2015</li> </ul> </li> <li>default<ul> <li>SMPTE-2059-2</li> </ul> </li> <li>description<ul> <li>Enabled on ISL links only</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#routing_lb_id","title":"ROUTING_LB_ID","text":"Details <ul> <li>default<ul> <li>0</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#rp_ip_range","title":"RP_IP_RANGE","text":"Details <ul> <li>default<ul> <li>10.254.254.0/24</li> </ul> </li> <li>description<ul> <li>RP Loopback IP Address Range</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#rp_lb_id","title":"RP_LB_ID","text":"Details <ul> <li>default<ul> <li>254</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#snmp_server_host_trap","title":"SNMP_SERVER_HOST_TRAP","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Configure NDFC as a receiver for SNMP traps</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#static_underlay_ip_alloc","title":"STATIC_UNDERLAY_IP_ALLOC","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Checking this will disable Dynamic Fabric IP Address Allocations</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#subnet_range","title":"SUBNET_RANGE","text":"Details <ul> <li>default<ul> <li>10.4.0.0/16</li> </ul> </li> <li>description<ul> <li>Address range to assign Numbered IPs</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#subnet_target_mask","title":"SUBNET_TARGET_MASK","text":"Details <ul> <li>choices<ul> <li>30</li> <li>31</li> </ul> </li> <li>default<ul> <li>30</li> </ul> </li> <li>description<ul> <li>Mask for Fabric Subnet IP Range</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#syslog_server_ip_list","title":"SYSLOG_SERVER_IP_LIST","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Comma separated list of IP Addresses (v4/v6)</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#syslog_server_vrf","title":"SYSLOG_SERVER_VRF","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>One VRF for all Syslog servers or a comma separated list of VRFs, one per Syslog server</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#syslog_sev","title":"SYSLOG_SEV","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>'Comma separated list of Syslog severity values, one per Syslog server '</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#isn_fabric_parameters","title":"ISN_FABRIC_PARAMETERS","text":"Details <ul> <li>description<ul> <li>ISN (Inter-site Network) fabric specific parameters. </li> <li>Also known as Multi-Site External Network. </li> <li>The following parameters are specific to ISN fabrics. </li> <li>Network infrastructure attached to Border Gateways to interconnect VXLAN EVPN fabrics for Multi-Site and Multi-Cloud deployments. </li> <li>The indentation of these parameters is meant only to logically group them. </li> <li>They should be at the same YAML level as FABRIC_TYPE and FABRIC_NAME.</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#aaa_remote_ip_enabled_1","title":"AAA_REMOTE_IP_ENABLED","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable only, when IP Authorization is enabled in the AAA Server</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#aaa_server_conf_1","title":"AAA_SERVER_CONF","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>AAA Configurations</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#bgp_as","title":"BGP_AS","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>1-4294967295 | 1-65535.0-65535 It is a good practice to have a unique ASN for each Fabric.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#bootstrap_conf_1","title":"BOOTSTRAP_CONF","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Additional CLIs required during device bootup/login e.g. AAA/Radius</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#bootstrap_conf_xe","title":"BOOTSTRAP_CONF_XE","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Additional CLIs required during device bootup/login e.g. AAA/Radius</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#bootstrap_enable_1","title":"BOOTSTRAP_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Automatic IP Assignment For POAP</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#bootstrap_multisubnet_1","title":"BOOTSTRAP_MULTISUBNET","text":"Details <ul> <li>default<ul> <li>Scope_Start_IP, Scope_End_IP, Scope_Default_Gateway, Scope_Subnet_Prefix</li> </ul> </li> <li>description<ul> <li>'lines with</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#cdp_enable_1","title":"CDP_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable CDP on management interface</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#dhcp_enable_1","title":"DHCP_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Automatic IP Assignment For POAP From Local DHCP Server</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#dhcp_end_1","title":"DHCP_END","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>End Address For Switch POAP</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#dhcp_ipv6_enable_1","title":"DHCP_IPV6_ENABLE","text":"Details <ul> <li>choices<ul> <li>DHCPv4</li> <li>DHCPv6</li> </ul> </li> <li>default<ul> <li>DHCPv4</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#dhcp_start_1","title":"DHCP_START","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Start Address For Switch POAP</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#domain_name","title":"DOMAIN_NAME","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Domain name for DHCP server PnP block</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enable_aaa_1","title":"ENABLE_AAA","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Include AAA configs from Advanced tab during device bootup</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enable_netflow","title":"ENABLE_NETFLOW","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable Netflow on VTEPs</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enable_nxapi","title":"ENABLE_NXAPI","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable HTTPS NX-API</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enable_nxapi_http","title":"ENABLE_NXAPI_HTTP","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enable_rt_intf_stats","title":"ENABLE_RT_INTF_STATS","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Valid for NX-OS only</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#fabric_freeform","title":"FABRIC_FREEFORM","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Additional supported CLIs for all same OS (e.g. all NxOS or IOS-XE, etc) switches</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#fabric_name_2","title":"FABRIC_NAME","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Please provide the fabric name to create it (Max Size 64)</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#feature_ptp_1","title":"FEATURE_PTP","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#inband_enable","title":"INBAND_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable POAP over Inband Interface (Pre-req: Inband Mgmt Knob should be Enabled)</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#inband_mgmt","title":"INBAND_MGMT","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Import switches with inband connectivity</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#intf_stat_load_interval","title":"INTF_STAT_LOAD_INTERVAL","text":"Details <ul> <li>default<ul> <li>10</li> </ul> </li> <li>description<ul> <li>'Time in seconds '</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#is_read_only","title":"IS_READ_ONLY","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>If enabled, fabric is only monitored. No configuration will be deployed</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#mgmt_gw_1","title":"MGMT_GW","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Default Gateway For Management VRF On The Switch</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#mgmt_prefix_1","title":"MGMT_PREFIX","text":"Details <ul> <li>default<ul> <li>24</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#mgmt_v6prefix","title":"MGMT_V6PREFIX","text":"Details <ul> <li>default<ul> <li>64</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#mpls_handoff","title":"MPLS_HANDOFF","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#mpls_lb_id","title":"MPLS_LB_ID","text":"Details <ul> <li>default<ul> <li>101</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#mpls_loopback_ip_range","title":"MPLS_LOOPBACK_IP_RANGE","text":"Details <ul> <li>default<ul> <li>10.102.0.0/25</li> </ul> </li> <li>description<ul> <li>MPLS Loopback IP Address Range</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#netflow_exporter_list","title":"NETFLOW_EXPORTER_LIST","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>One or Multiple Netflow Exporters</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#netflow_monitor_list","title":"NETFLOW_MONITOR_LIST","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>One or Multiple Netflow Monitors</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#netflow_record_list","title":"NETFLOW_RECORD_LIST","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>One or Multiple Netflow Records</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#netflow_sampler_list","title":"NETFLOW_SAMPLER_LIST","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>One or multiple netflow samplers. Applicable to N7K only</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#nxapi_https_port","title":"NXAPI_HTTPS_PORT","text":"Details <ul> <li>default<ul> <li>443</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#nxapi_http_port","title":"NXAPI_HTTP_PORT","text":"Details <ul> <li>default<ul> <li>80</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#pm_enable_1","title":"PM_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#pnp_enable","title":"PNP_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable Plug n Play (Automatic IP Assignment) for Cat9K switches</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#power_redundancy_mode_1","title":"POWER_REDUNDANCY_MODE","text":"Details <ul> <li>choices<ul> <li>ps-redundant</li> <li>combined</li> <li>insrc-redundant</li> </ul> </li> <li>default<ul> <li>ps-redundant</li> </ul> </li> <li>description<ul> <li>Default Power Supply Mode For Bootstrapped NX-OS Switches</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#ptp_domain_id_1","title":"PTP_DOMAIN_ID","text":"Details <ul> <li>default<ul> <li>0</li> </ul> </li> <li>description<ul> <li>'Multiple Independent PTP Clocking Subdomains on a Single Network '</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#ptp_lb_id_1","title":"PTP_LB_ID","text":"Details <ul> <li>default<ul> <li>0</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#snmp_server_host_trap_1","title":"SNMP_SERVER_HOST_TRAP","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Configure NDFC as a receiver for SNMP traps</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#subinterface_range","title":"SUBINTERFACE_RANGE","text":"Details <ul> <li>default<ul> <li>2-511</li> </ul> </li> <li>description<ul> <li>'Per Border Dot1q Range For VRF Lite Connectivity '</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enablerealtimebackup","title":"enableRealTimeBackup","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Backup hourly only if there is any config deployment since last backup</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enablescheduledbackup","title":"enableScheduledBackup","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Backup at the specified time</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#scheduledtime","title":"scheduledTime","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Time (UTC) in 24hr format. (00:00 to 23:59)</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#lan_classic_fabric_parameters","title":"LAN_CLASSIC_FABRIC_PARAMETERS","text":"Details <ul> <li>description<ul> <li>LAN Classic fabric specific parameters. </li> <li>The following parameters are specific to Classic LAN fabrics. </li> <li>Fabric to manage a legacy Classic LAN deployment with Nexus switches. </li> <li>The indentation of these parameters is meant only to logically group them. </li> <li>They should be at the same YAML level as FABRIC_TYPE and FABRIC_NAME.</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#aaa_remote_ip_enabled_2","title":"AAA_REMOTE_IP_ENABLED","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable only, when IP Authorization is enabled in the AAA Server</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#aaa_server_conf_2","title":"AAA_SERVER_CONF","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>AAA Configurations</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#bootstrap_conf_2","title":"BOOTSTRAP_CONF","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Additional CLIs required during device bootup/login e.g. AAA/Radius</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#bootstrap_enable_2","title":"BOOTSTRAP_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Automatic IP Assignment For POAP</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#bootstrap_multisubnet_2","title":"BOOTSTRAP_MULTISUBNET","text":"Details <ul> <li>default<ul> <li>Scope_Start_IP, Scope_End_IP, Scope_Default_Gateway, Scope_Subnet_Prefix</li> </ul> </li> <li>description<ul> <li>'lines with</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#cdp_enable_2","title":"CDP_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable CDP on management interface</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#dhcp_enable_2","title":"DHCP_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Automatic IP Assignment For POAP From Local DHCP Server</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#dhcp_end_2","title":"DHCP_END","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>End Address For Switch POAP</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#dhcp_ipv6_enable_2","title":"DHCP_IPV6_ENABLE","text":"Details <ul> <li>choices<ul> <li>DHCPv4</li> <li>DHCPv6</li> </ul> </li> <li>default<ul> <li>DHCPv4</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#dhcp_start_2","title":"DHCP_START","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Start Address For Switch POAP</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enable_aaa_2","title":"ENABLE_AAA","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Include AAA configs from Advanced tab during device bootup</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enable_netflow_1","title":"ENABLE_NETFLOW","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable Netflow on VTEPs</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enable_nxapi_1","title":"ENABLE_NXAPI","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable HTTPS NX-API</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enable_nxapi_http_1","title":"ENABLE_NXAPI_HTTP","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#fabric_freeform_1","title":"FABRIC_FREEFORM","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Additional supported CLIs for all same OS (e.g. all NxOS etc) switches</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#fabric_name_3","title":"FABRIC_NAME","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Please provide the fabric name to create it (Max Size 64)</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#feature_ptp_2","title":"FEATURE_PTP","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#inband_enable_1","title":"INBAND_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable POAP over Inband Interface (Pre-req: Inband Mgmt Knob should be Enabled)</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#inband_mgmt_1","title":"INBAND_MGMT","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Import switches with inband connectivity</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#is_read_only_1","title":"IS_READ_ONLY","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>If enabled, fabric is only monitored. No configuration will be deployed</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#mgmt_gw_2","title":"MGMT_GW","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Default Gateway For Management VRF On The Switch</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#mgmt_prefix_2","title":"MGMT_PREFIX","text":"Details <ul> <li>default<ul> <li>24</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#mgmt_v6prefix_1","title":"MGMT_V6PREFIX","text":"Details <ul> <li>default<ul> <li>64</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#mpls_handoff_1","title":"MPLS_HANDOFF","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#mpls_lb_id_1","title":"MPLS_LB_ID","text":"Details <ul> <li>default<ul> <li>101</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#mpls_loopback_ip_range_1","title":"MPLS_LOOPBACK_IP_RANGE","text":"Details <ul> <li>default<ul> <li>10.102.0.0/25</li> </ul> </li> <li>description<ul> <li>MPLS Loopback IP Address Range</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#netflow_exporter_list_1","title":"NETFLOW_EXPORTER_LIST","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>One or Multiple Netflow Exporters</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#netflow_monitor_list_1","title":"NETFLOW_MONITOR_LIST","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>One or Multiple Netflow Monitors</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#netflow_record_list_1","title":"NETFLOW_RECORD_LIST","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>One or Multiple Netflow Records</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#netflow_sampler_list_1","title":"NETFLOW_SAMPLER_LIST","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>One or multiple netflow Samplers. Applicable to N7K only</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#nxapi_https_port_1","title":"NXAPI_HTTPS_PORT","text":"Details <ul> <li>default<ul> <li>443</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#nxapi_http_port_1","title":"NXAPI_HTTP_PORT","text":"Details <ul> <li>default<ul> <li>80</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#pm_enable_2","title":"PM_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#power_redundancy_mode_2","title":"POWER_REDUNDANCY_MODE","text":"Details <ul> <li>choices<ul> <li>ps-redundant</li> <li>combined</li> <li>insrc-redundant</li> </ul> </li> <li>default<ul> <li>ps-redundant</li> </ul> </li> <li>description<ul> <li>Default Power Supply Mode For Bootstrapped NX-OS Switches</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#ptp_domain_id_2","title":"PTP_DOMAIN_ID","text":"Details <ul> <li>default<ul> <li>0</li> </ul> </li> <li>description<ul> <li>'Multiple Independent PTP Clocking Subdomains on a Single Network '</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#ptp_lb_id_2","title":"PTP_LB_ID","text":"Details <ul> <li>default<ul> <li>0</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#snmp_server_host_trap_2","title":"SNMP_SERVER_HOST_TRAP","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Configure NDFC as a receiver for SNMP traps</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#subinterface_range_1","title":"SUBINTERFACE_RANGE","text":"Details <ul> <li>default<ul> <li>2-511</li> </ul> </li> <li>description<ul> <li>'Per Border Dot1q Range For VRF Lite Connectivity '</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enablerealtimebackup_1","title":"enableRealTimeBackup","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Backup hourly only if there is any config deployment since last backup</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enablescheduledbackup_1","title":"enableScheduledBackup","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Backup at the specified time</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#scheduledtime_1","title":"scheduledTime","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Time (UTC) in 24hr format. (00:00 to 23:59)</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#vxlan_evpn_fabric_msd_parameters","title":"VXLAN_EVPN_FABRIC_MSD_PARAMETERS","text":"Details <ul> <li>description<ul> <li>VXLAN EVPN Multi-Site fabric specific parameters. </li> <li>Domain that can contain multiple VXLAN EVPN Fabrics with Layer-2/Layer-3 Overlay Extensions and other Fabric Types. </li> <li>The indentation of these parameters is meant only to logically group them. </li> <li>They should be at the same YAML level as FABRIC_TYPE and FABRIC_NAME.</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#anycast_gw_mac","title":"ANYCAST_GW_MAC","text":"Details <ul> <li>default<ul> <li>2020.0000.00aa</li> </ul> </li> <li>description<ul> <li>Shared MAC address for all leaves</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#bgp_rp_asn","title":"BGP_RP_ASN","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>1-4294967295 | 1-65535.0-65535, e.g. 65000, 65001</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#bgw_routing_tag","title":"BGW_ROUTING_TAG","text":"Details <ul> <li>default<ul> <li>54321</li> </ul> </li> <li>description<ul> <li>Routing tag associated with IP address of loopback and DCI interfaces</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#border_gwy_connections","title":"BORDER_GWY_CONNECTIONS","text":"Details <ul> <li>choices<ul> <li>Manual</li> <li>Centralized_To_Route_Server</li> <li>Direct_To_BGWS</li> </ul> </li> <li>default<ul> <li>Manual</li> </ul> </li> <li>description<ul> <li>Manual, Auto Overlay EVPN Peering to Route Servers, Auto Overlay EVPN Direct Peering to Border Gateways</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#cloudsec_algorithm","title":"CLOUDSEC_ALGORITHM","text":"Details <ul> <li>default<ul> <li>AES_128_CMAC</li> </ul> </li> <li>description<ul> <li>AES_128_CMAC or AES_256_CMAC</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#cloudsec_autoconfig","title":"CLOUDSEC_AUTOCONFIG","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Auto Config CloudSec on Border Gateways</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#cloudsec_enforcement","title":"CLOUDSEC_ENFORCEMENT","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>If set to strict, data across site must be encrypted.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#cloudsec_key_string","title":"CLOUDSEC_KEY_STRING","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Cisco Type 7 Encrypted Octet String</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#cloudsec_report_timer","title":"CLOUDSEC_REPORT_TIMER","text":"Details <ul> <li>default<ul> <li>5</li> </ul> </li> <li>description<ul> <li>CloudSec Operational Status periodic report timer in minutes</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#dci_subnet_range","title":"DCI_SUBNET_RANGE","text":"Details <ul> <li>default<ul> <li>10.10.1.0/24</li> </ul> </li> <li>description<ul> <li>Address range to assign P2P DCI Links</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#dci_subnet_target_mask","title":"DCI_SUBNET_TARGET_MASK","text":"Details <ul> <li>default<ul> <li>30</li> </ul> </li> <li>description<ul> <li>'Target Mask for Subnet Range '</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#delay_restore","title":"DELAY_RESTORE","text":"Details <ul> <li>default<ul> <li>300</li> </ul> </li> <li>description<ul> <li>Multi-Site underlay and overlay control plane convergence time  in seconds</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enable_bgp_bfd","title":"ENABLE_BGP_BFD","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>For auto-created Multi-Site Underlay IFCs</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enable_bgp_log_neighbor_change","title":"ENABLE_BGP_LOG_NEIGHBOR_CHANGE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>For auto-created Multi-Site Underlay IFCs</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enable_bgp_send_comm","title":"ENABLE_BGP_SEND_COMM","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>For auto-created Multi-Site Underlay IFCs</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enable_pvlan","title":"ENABLE_PVLAN","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable PVLAN on MSD and its child fabrics</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enable_rs_redist_direct","title":"ENABLE_RS_REDIST_DIRECT","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>For auto-created Multi-Site overlay IFCs in Route Servers. Applicable only when Multi-Site Overlay IFC Deployment Method is Centralized_To_Route_Server.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#fabric_name_4","title":"FABRIC_NAME","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Please provide the fabric name to create it (Max Size 64)</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#l2_segment_id_range","title":"L2_SEGMENT_ID_RANGE","text":"Details <ul> <li>default<ul> <li>30000-49000</li> </ul> </li> <li>description<ul> <li>'Overlay Network Identifier Range '</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#l3_partition_id_range","title":"L3_PARTITION_ID_RANGE","text":"Details <ul> <li>default<ul> <li>50000-59000</li> </ul> </li> <li>description<ul> <li>'Overlay VRF Identifier Range '</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#loopback100_ip_range","title":"LOOPBACK100_IP_RANGE","text":"Details <ul> <li>default<ul> <li>10.10.0.0/24</li> </ul> </li> <li>description<ul> <li>Typically Loopback100 IP Address Range</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#ms_ifc_bgp_auth_key_type","title":"MS_IFC_BGP_AUTH_KEY_TYPE","text":"Details <ul> <li>choices<ul> <li>3</li> <li>7</li> </ul> </li> <li>default<ul> <li>3</li> </ul> </li> <li>description<ul> <li>BGP Key Encryption Type: 3 - 3DES, 7 - Cisco</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#ms_ifc_bgp_password","title":"MS_IFC_BGP_PASSWORD","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Encrypted eBGP Password Hex String</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#ms_ifc_bgp_password_enable","title":"MS_IFC_BGP_PASSWORD_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>eBGP password for Multi-Site underlay/overlay IFCs</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#ms_loopback_id","title":"MS_LOOPBACK_ID","text":"Details <ul> <li>default<ul> <li>100</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#ms_underlay_autoconfig","title":"MS_UNDERLAY_AUTOCONFIG","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#rp_server_ip","title":"RP_SERVER_IP","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Multi-Site Route-Server peer list (typically loopback IP address on Route-Server for Multi-Site EVPN peering with BGWs), e.g. 128.89.0.1, 128.89.0.2</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#rs_routing_tag","title":"RS_ROUTING_TAG","text":"Details <ul> <li>default<ul> <li>54321</li> </ul> </li> <li>description<ul> <li>Routing tag associated with Route Server IP for redistribute direct. This is the IP used in eBGP EVPN peering.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#tor_auto_deploy","title":"TOR_AUTO_DEPLOY","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enables Overlay VLANs on uplink between ToRs and Leafs</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#default_network","title":"default_network","text":"Details <ul> <li>choices<ul> <li>Default_Network_Universal</li> <li>Service_Network_Universal</li> </ul> </li> <li>default<ul> <li>Default_Network_Universal</li> </ul> </li> <li>description<ul> <li>Default Overlay Network Template For Leafs</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#default_pvlan_sec_network","title":"default_pvlan_sec_network","text":"Details <ul> <li>choices<ul> <li>Pvlan_Secondary_Network</li> </ul> </li> <li>default<ul> <li>Pvlan_Secondary_Network</li> </ul> </li> <li>description<ul> <li>Default PVLAN Secondary Network Template</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#default_vrf","title":"default_vrf","text":"Details <ul> <li>choices<ul> <li>Default_VRF_Universal</li> </ul> </li> <li>default<ul> <li>Default_VRF_Universal</li> </ul> </li> <li>description<ul> <li>Default Overlay VRF Template For Leafs</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enablescheduledbackup_2","title":"enableScheduledBackup","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Backup at the specified time. Note: Fabric Backup/Restore functionality is being deprecated for MSD fabrics. Recommendation is to use NDFC Backup &amp; Restore</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#network_extension_template","title":"network_extension_template","text":"Details <ul> <li>choices<ul> <li>Default_Network_Extension_Universal</li> </ul> </li> <li>default<ul> <li>Default_Network_Extension_Universal</li> </ul> </li> <li>description<ul> <li>Default Overlay Network Template For Borders</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#scheduledtime_2","title":"scheduledTime","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Time (UTC) in 24hr format. (00:00 to 23:59)</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#vrf_extension_template","title":"vrf_extension_template","text":"Details <ul> <li>choices<ul> <li>Default_VRF_Extension_Universal</li> </ul> </li> <li>default<ul> <li>Default_VRF_Extension_Universal</li> </ul> </li> <li>description<ul> <li>Default Overlay VRF Template For Borders</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#vxlan_evpn_fabric_parameters","title":"VXLAN_EVPN_FABRIC_PARAMETERS","text":"Details <ul> <li>description<ul> <li>Data Center VXLAN EVPN fabric specific parameters. </li> <li>Fabric for a VXLAN EVPN deployment with Nexus 9000 and 3000 switches. </li> <li>The following parameters are specific to VXLAN EVPN fabrics. </li> <li>The indentation of these parameters is meant only to logically group them. </li> <li>They should be at the same YAML level as FABRIC_TYPE and FABRIC_NAME.</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#aaa_remote_ip_enabled_3","title":"AAA_REMOTE_IP_ENABLED","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable only, when IP Authorization is enabled in the AAA Server</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#aaa_server_conf_3","title":"AAA_SERVER_CONF","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>AAA Configurations</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#advertise_pip_bgp","title":"ADVERTISE_PIP_BGP","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>For Primary VTEP IP Advertisement As Next-Hop Of Prefix Routes</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#advertise_pip_on_border","title":"ADVERTISE_PIP_ON_BORDER","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Enable advertise-pip on vPC borders and border gateways only. Applicable only when vPC advertise-pip is not enabled</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#anycast_bgw_advertise_pip","title":"ANYCAST_BGW_ADVERTISE_PIP","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>To advertise Anycast Border Gateway PIP as VTEP. Effective on MSD fabric Recalculate Config</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#anycast_gw_mac_1","title":"ANYCAST_GW_MAC","text":"Details <ul> <li>default<ul> <li>2020.0000.00aa</li> </ul> </li> <li>description<ul> <li>Shared MAC address for all leafs (xxxx.xxxx.xxxx)</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#anycast_lb_id","title":"ANYCAST_LB_ID","text":"Details <ul> <li>default<ul> <li>10</li> </ul> </li> <li>description<ul> <li>'Used for vPC Peering in VXLANv6 Fabrics '</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#anycast_rp_ip_range","title":"ANYCAST_RP_IP_RANGE","text":"Details <ul> <li>default<ul> <li>10.254.254.0/24</li> </ul> </li> <li>description<ul> <li>Anycast or Phantom RP IP Address Range</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#auto_symmetric_default_vrf","title":"AUTO_SYMMETRIC_DEFAULT_VRF","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Whether to auto generate Default VRF interface and BGP peering configuration on managed neighbor devices. If set, auto created VRF Lite IFC links will have Auto Deploy Default VRF for Peer enabled.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#auto_symmetric_vrf_lite","title":"AUTO_SYMMETRIC_VRF_LITE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Whether to auto generate VRF LITE sub-interface and BGP peering configuration on managed neighbor devices. If set, auto created VRF Lite IFC links will have Auto Deploy for Peer enabled.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#auto_unique_vrf_lite_ip_prefix","title":"AUTO_UNIQUE_VRF_LITE_IP_PREFIX","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>When enabled, IP prefix allocated to the VRF LITE IFC is not reused on VRF extension over VRF LITE IFC. Instead, unique IP Subnet is allocated for each VRF extension over VRF LITE IFC.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#auto_vrflite_ifc_default_vrf","title":"AUTO_VRFLITE_IFC_DEFAULT_VRF","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Whether to auto generate Default VRF interface and BGP peering configuration on VRF LITE IFC auto deployment. If set, auto created VRF Lite IFC links will have Auto Deploy Default VRF enabled.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#banner","title":"BANNER","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Message of the Day (motd) banner. Delimiter char (very first char is delimiter char) followed by message ending with delimiter</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#bfd_auth_enable","title":"BFD_AUTH_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Valid for P2P Interfaces only</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#bfd_auth_key","title":"BFD_AUTH_KEY","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Encrypted SHA1 secret value</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#bfd_auth_key_id","title":"BFD_AUTH_KEY_ID","text":"Details <ul> <li>default<ul> <li>100</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#bfd_enable","title":"BFD_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Valid for IPv4 Underlay only</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#bfd_ibgp_enable","title":"BFD_IBGP_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#bfd_isis_enable","title":"BFD_ISIS_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#bfd_ospf_enable","title":"BFD_OSPF_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#bfd_pim_enable","title":"BFD_PIM_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#bgp_as_1","title":"BGP_AS","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>1-4294967295 | 1-65535.0-65535 It is a good practice to have a unique ASN for each Fabric.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#bgp_auth_enable","title":"BGP_AUTH_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#bgp_auth_key","title":"BGP_AUTH_KEY","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Encrypted BGP Authentication Key based on type</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#bgp_auth_key_type","title":"BGP_AUTH_KEY_TYPE","text":"Details <ul> <li>choices<ul> <li>3</li> <li>7</li> </ul> </li> <li>default<ul> <li>3</li> </ul> </li> <li>description<ul> <li>BGP Key Encryption Type: 3 - 3DES, 7 - Cisco</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#bgp_lb_id","title":"BGP_LB_ID","text":"Details <ul> <li>default<ul> <li>0</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#bootstrap_conf_3","title":"BOOTSTRAP_CONF","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Additional CLIs required during device bootup/login e.g. AAA/Radius</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#bootstrap_enable_3","title":"BOOTSTRAP_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Automatic IP Assignment For POAP</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#bootstrap_multisubnet_3","title":"BOOTSTRAP_MULTISUBNET","text":"Details <ul> <li>default<ul> <li>Scope_Start_IP, Scope_End_IP, Scope_Default_Gateway, Scope_Subnet_Prefix</li> </ul> </li> <li>description<ul> <li>'lines with</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#brownfield_network_name_format","title":"BROWNFIELD_NETWORK_NAME_FORMAT","text":"Details <ul> <li>default<ul> <li>Auto_Net_VNI$$VNI$$_VLAN$$VLAN_ID$$</li> </ul> </li> <li>description<ul> <li>Generated network name should be &lt; 64 characters</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#brownfield_skip_overlay_network_attachments","title":"BROWNFIELD_SKIP_OVERLAY_NETWORK_ATTACHMENTS","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable to skip overlay network interface attachments for Brownfield and Host Port Resync cases</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#cdp_enable_3","title":"CDP_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable CDP on management interface</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#copp_policy","title":"COPP_POLICY","text":"Details <ul> <li>choices<ul> <li>dense</li> <li>lenient</li> <li>moderate</li> <li>strict</li> <li>manual</li> </ul> </li> <li>default<ul> <li>strict</li> </ul> </li> <li>description<ul> <li>Fabric Wide CoPP Policy. Customized CoPP policy should be provided when manual is selected</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#dci_subnet_range_1","title":"DCI_SUBNET_RANGE","text":"Details <ul> <li>default<ul> <li>10.33.0.0/16</li> </ul> </li> <li>description<ul> <li>Address range to assign P2P Interfabric Connections</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#dci_subnet_target_mask_1","title":"DCI_SUBNET_TARGET_MASK","text":"Details <ul> <li>default<ul> <li>30</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#default_queuing_policy_cloudscale","title":"DEFAULT_QUEUING_POLICY_CLOUDSCALE","text":"Details <ul> <li>choices<ul> <li>queuing_policy_default_4q_cloudscale</li> <li>queuing_policy_default_8q_cloudscale</li> </ul> </li> <li>default<ul> <li>queuing_policy_default_8q_cloudscale</li> </ul> </li> <li>description<ul> <li>Queuing Policy for all 92xx, -EX, -FX, -FX2, -FX3, -GX series switches in the fabric</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#default_queuing_policy_other","title":"DEFAULT_QUEUING_POLICY_OTHER","text":"Details <ul> <li>choices<ul> <li>queuing_policy_default_other</li> </ul> </li> <li>default<ul> <li>queuing_policy_default_other</li> </ul> </li> <li>description<ul> <li>Queuing Policy for all other switches in the fabric</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#default_queuing_policy_r_series","title":"DEFAULT_QUEUING_POLICY_R_SERIES","text":"Details <ul> <li>choices<ul> <li>queuing_policy_default_r_series</li> </ul> </li> <li>default<ul> <li>queuing_policy_default_r_series</li> </ul> </li> <li>description<ul> <li>Queuing Policy for all R-Series switches in the fabric</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#default_vrf_redis_bgp_rmap","title":"DEFAULT_VRF_REDIS_BGP_RMAP","text":"Details <ul> <li>default<ul> <li>extcon-rmap-filter</li> </ul> </li> <li>description<ul> <li>Route Map used to redistribute BGP routes to IGP in default vrf in auto created VRF Lite IFC links</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#dhcp_enable_3","title":"DHCP_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Automatic IP Assignment For POAP From Local DHCP Server</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#dhcp_end_3","title":"DHCP_END","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>End Address For Switch POAP</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#dhcp_ipv6_enable_3","title":"DHCP_IPV6_ENABLE","text":"Details <ul> <li>choices<ul> <li>DHCPv4</li> <li>DHCPv6</li> </ul> </li> <li>default<ul> <li>DHCPv4</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#dhcp_start_3","title":"DHCP_START","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Start Address For Switch POAP</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#dns_server_ip_list_1","title":"DNS_SERVER_IP_LIST","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Comma separated list of IP Addresses(v4/v6)</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#dns_server_vrf_1","title":"DNS_SERVER_VRF","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>One VRF for all DNS servers or a comma separated list of VRFs, one per DNS server</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enable_aaa_3","title":"ENABLE_AAA","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Include AAA configs from Manageability tab during device bootup</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enable_default_queuing_policy","title":"ENABLE_DEFAULT_QUEUING_POLICY","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enable_fabric_vpc_domain_id","title":"ENABLE_FABRIC_VPC_DOMAIN_ID","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>(Not Recommended)</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enable_macsec","title":"ENABLE_MACSEC","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable MACsec in the fabric</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enable_netflow_2","title":"ENABLE_NETFLOW","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable Netflow on VTEPs</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enable_ngoam","title":"ENABLE_NGOAM","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Enable the Next Generation (NG) OAM feature for all switches in the fabric to aid in trouble-shooting VXLAN EVPN fabrics</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enable_nxapi_2","title":"ENABLE_NXAPI","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Enable HTTPS NX-API</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enable_nxapi_http_2","title":"ENABLE_NXAPI_HTTP","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enable_pbr","title":"ENABLE_PBR","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>When ESR option is ePBR, enable ePBR will enable pbr, sla sender and epbr features on the switch</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enable_pvlan_1","title":"ENABLE_PVLAN","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable PVLAN on switches except spines and super spines</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enable_tenant_dhcp","title":"ENABLE_TENANT_DHCP","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enable_trm","title":"ENABLE_TRM","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>For Overlay Multicast Support In VXLAN Fabrics</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enable_vpc_peer_link_native_vlan","title":"ENABLE_VPC_PEER_LINK_NATIVE_VLAN","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#esr_option","title":"ESR_OPTION","text":"Details <ul> <li>default<ul> <li>PBR</li> </ul> </li> <li>description<ul> <li>Policy-Based Routing (PBR) or Enhanced PBR (ePBR)</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#extra_conf_intra_links_1","title":"EXTRA_CONF_INTRA_LINKS","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Additional CLIs For All Intra-Fabric Links</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#extra_conf_leaf_1","title":"EXTRA_CONF_LEAF","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Additional CLIs For All Leafs As Captured From Show Running Configuration</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#extra_conf_spine_1","title":"EXTRA_CONF_SPINE","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Additional CLIs For All Spines As Captured From Show Running Configuration</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#extra_conf_tor","title":"EXTRA_CONF_TOR","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Additional CLIs For All ToRs As Captured From Show Running Configuration</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#fabric_interface_type_1","title":"FABRIC_INTERFACE_TYPE","text":"Details <ul> <li>choices<ul> <li>p2p</li> <li>unnumbered</li> </ul> </li> <li>default<ul> <li>p2p</li> </ul> </li> <li>description<ul> <li>Numbered(Point-to-Point) or Unnumbered</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#fabric_mtu_1","title":"FABRIC_MTU","text":"Details <ul> <li>default<ul> <li>9216</li> </ul> </li> <li>description<ul> <li>. Must be an even number</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#fabric_name_5","title":"FABRIC_NAME","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Please provide the fabric name to create it (Max Size 32)</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#fabric_vpc_domain_id","title":"FABRIC_VPC_DOMAIN_ID","text":"Details <ul> <li>default<ul> <li>1</li> </ul> </li> <li>description<ul> <li>vPC Domain Id to be used on all vPC pairs</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#fabric_vpc_qos","title":"FABRIC_VPC_QOS","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Qos on spines for guaranteed delivery of vPC Fabric Peering communication</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#fabric_vpc_qos_policy_name","title":"FABRIC_VPC_QOS_POLICY_NAME","text":"Details <ul> <li>default<ul> <li>spine_qos_for_fabric_vpc_peering</li> </ul> </li> <li>description<ul> <li>Qos Policy name should be same on all spines</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#feature_ptp_3","title":"FEATURE_PTP","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#grfield_debug_flag","title":"GRFIELD_DEBUG_FLAG","text":"Details <ul> <li>choices<ul> <li>Enable</li> <li>Disable</li> </ul> </li> <li>default<ul> <li>Disable</li> </ul> </li> <li>description<ul> <li>Enable to clean switch configuration without reload when PreserveConfig=no</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#hd_time","title":"HD_TIME","text":"Details <ul> <li>default<ul> <li>180</li> </ul> </li> <li>description<ul> <li>NVE Source Inteface HoldDown Time  in seconds</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#host_intf_admin_state","title":"HOST_INTF_ADMIN_STATE","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#ibgp_peer_template","title":"IBGP_PEER_TEMPLATE","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Speficies the iBGP Peer-Template config used for RR and spines with border role.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#ibgp_peer_template_leaf","title":"IBGP_PEER_TEMPLATE_LEAF","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Specifies the config used for leaf, border or border gateway. If this field is empty, the peer template defined in iBGP Peer-Template Config is used on all BGP enabled devices (RRs,leafs, border or border gateway roles.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#inband_dhcp_servers","title":"INBAND_DHCP_SERVERS","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Comma separated list of IPv4 Addresses (Max 3)</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#inband_mgmt_2","title":"INBAND_MGMT","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Manage switches with only Inband connectivity</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#isis_auth_enable_1","title":"ISIS_AUTH_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#isis_auth_key_1","title":"ISIS_AUTH_KEY","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Cisco Type 7 Encrypted</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#isis_auth_keychain_key_id_1","title":"ISIS_AUTH_KEYCHAIN_KEY_ID","text":"Details <ul> <li>default<ul> <li>127</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#isis_auth_keychain_name_1","title":"ISIS_AUTH_KEYCHAIN_NAME","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#isis_level_1","title":"ISIS_LEVEL","text":"Details <ul> <li>choices<ul> <li>level-1</li> <li>level-2</li> </ul> </li> <li>default<ul> <li>level-2</li> </ul> </li> <li>description<ul> <li>Supported IS types: level-1, level-2</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#isis_overload_elapse_time","title":"ISIS_OVERLOAD_ELAPSE_TIME","text":"Details <ul> <li>default<ul> <li>60</li> </ul> </li> <li>description<ul> <li>Clear the overload bit after an elapsed time in seconds</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#isis_overload_enable","title":"ISIS_OVERLOAD_ENABLE","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>When enabled, set the overload bit for an elapsed time after a reload</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#isis_p2p_enable_1","title":"ISIS_P2P_ENABLE","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>This will enable network point-to-point on fabric interfaces which are numbered</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#l2_host_intf_mtu_1","title":"L2_HOST_INTF_MTU","text":"Details <ul> <li>default<ul> <li>9216</li> </ul> </li> <li>description<ul> <li>. Must be an even number</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#l2_segment_id_range_1","title":"L2_SEGMENT_ID_RANGE","text":"Details <ul> <li>default<ul> <li>30000-49000</li> </ul> </li> <li>description<ul> <li>'Overlay Network Identifier Range '</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#l3vni_mcast_group","title":"L3VNI_MCAST_GROUP","text":"Details <ul> <li>default<ul> <li>239.1.1.0</li> </ul> </li> <li>description<ul> <li>Default Underlay Multicast group IP assigned for every overlay VRF.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#l3_partition_id_range_1","title":"L3_PARTITION_ID_RANGE","text":"Details <ul> <li>default<ul> <li>50000-59000</li> </ul> </li> <li>description<ul> <li>'Overlay VRF Identifier Range '</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#link_state_routing_1","title":"LINK_STATE_ROUTING","text":"Details <ul> <li>choices<ul> <li>ospf</li> <li>is-is</li> </ul> </li> <li>default<ul> <li>ospf</li> </ul> </li> <li>description<ul> <li>Used for Spine-Leaf Connectivity</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#link_state_routing_tag_1","title":"LINK_STATE_ROUTING_TAG","text":"Details <ul> <li>default<ul> <li>UNDERLAY</li> </ul> </li> <li>description<ul> <li>Underlay Routing Process Tag</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#loopback0_ipv6_range","title":"LOOPBACK0_IPV6_RANGE","text":"Details <ul> <li>default<ul> <li>fd00::a02:0/119</li> </ul> </li> <li>description<ul> <li>Typically Loopback0 IPv6 Address Range</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#loopback0_ip_range_1","title":"LOOPBACK0_IP_RANGE","text":"Details <ul> <li>default<ul> <li>10.2.0.0/22</li> </ul> </li> <li>description<ul> <li>Typically Loopback0 IP Address Range</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#loopback1_ipv6_range","title":"LOOPBACK1_IPV6_RANGE","text":"Details <ul> <li>default<ul> <li>fd00::a03:0/118</li> </ul> </li> <li>description<ul> <li>Typically Loopback1 and Anycast Loopback IPv6 Address Range</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#loopback1_ip_range","title":"LOOPBACK1_IP_RANGE","text":"Details <ul> <li>default<ul> <li>10.3.0.0/22</li> </ul> </li> <li>description<ul> <li>Typically Loopback1 IP Address Range</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#macsec_algorithm","title":"MACSEC_ALGORITHM","text":"Details <ul> <li>default<ul> <li>AES_128_CMAC</li> </ul> </li> <li>description<ul> <li>AES_128_CMAC or AES_256_CMAC</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#macsec_cipher_suite","title":"MACSEC_CIPHER_SUITE","text":"Details <ul> <li>default<ul> <li>GCM-AES-XPN-256</li> </ul> </li> <li>description<ul> <li>Configure Cipher Suite</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#macsec_fallback_algorithm","title":"MACSEC_FALLBACK_ALGORITHM","text":"Details <ul> <li>default<ul> <li>AES_128_CMAC</li> </ul> </li> <li>description<ul> <li>AES_128_CMAC or AES_256_CMAC</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#macsec_fallback_key_string","title":"MACSEC_FALLBACK_KEY_STRING","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Cisco Type 7 Encrypted Octet String</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#macsec_key_string","title":"MACSEC_KEY_STRING","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Cisco Type 7 Encrypted Octet String</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#macsec_report_timer","title":"MACSEC_REPORT_TIMER","text":"Details <ul> <li>default<ul> <li>5</li> </ul> </li> <li>description<ul> <li>MACsec Operational Status periodic report timer in minutes</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#mgmt_gw_3","title":"MGMT_GW","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Default Gateway For Management VRF On The Switch</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#mgmt_prefix_3","title":"MGMT_PREFIX","text":"Details <ul> <li>default<ul> <li>24</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#mgmt_v6prefix_2","title":"MGMT_V6PREFIX","text":"Details <ul> <li>default<ul> <li>64</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#mpls_handoff_2","title":"MPLS_HANDOFF","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#mpls_lb_id_2","title":"MPLS_LB_ID","text":"Details <ul> <li>default<ul> <li>101</li> </ul> </li> <li>description<ul> <li>'Used for VXLAN to MPLS SR/LDP Handoff '</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#mpls_loopback_ip_range_2","title":"MPLS_LOOPBACK_IP_RANGE","text":"Details <ul> <li>default<ul> <li>10.101.0.0/25</li> </ul> </li> <li>description<ul> <li>Used for VXLAN to MPLS SR/LDP Handoff</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#mst_instance_range","title":"MST_INSTANCE_RANGE","text":"Details <ul> <li>default<ul> <li>0</li> </ul> </li> <li>description<ul> <li>MST instance range, Example: 0-3,5,7-9, Default is 0</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#multicast_group_subnet","title":"MULTICAST_GROUP_SUBNET","text":"Details <ul> <li>default<ul> <li>239.1.1.0/25</li> </ul> </li> <li>description<ul> <li>Multicast pool prefix between 8 to 30. A multicast group IP from this pool is used for BUM traffic for each overlay network.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#netflow_exporter_list_2","title":"NETFLOW_EXPORTER_LIST","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>One or Multiple Netflow Exporters</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#netflow_monitor_list_2","title":"NETFLOW_MONITOR_LIST","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>One or Multiple Netflow Monitors</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#netflow_record_list_2","title":"NETFLOW_RECORD_LIST","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>One or Multiple Netflow Records</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#network_vlan_range","title":"NETWORK_VLAN_RANGE","text":"Details <ul> <li>default<ul> <li>2300-2999</li> </ul> </li> <li>description<ul> <li>'Per Switch Overlay Network VLAN Range '</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#ntp_server_ip_list_1","title":"NTP_SERVER_IP_LIST","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Comma separated list of IP Addresses(v4/v6)</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#ntp_server_vrf_1","title":"NTP_SERVER_VRF","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>One VRF for all NTP servers or a comma separated list of VRFs, one per NTP server</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#nve_lb_id","title":"NVE_LB_ID","text":"Details <ul> <li>default<ul> <li>1</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#nxapi_https_port_2","title":"NXAPI_HTTPS_PORT","text":"Details <ul> <li>default<ul> <li>443</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#nxapi_http_port_2","title":"NXAPI_HTTP_PORT","text":"Details <ul> <li>default<ul> <li>80</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#object_tracking_number_range","title":"OBJECT_TRACKING_NUMBER_RANGE","text":"Details <ul> <li>default<ul> <li>100-299</li> </ul> </li> <li>description<ul> <li>'Per switch tracked object ID Range '</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#ospf_area_id_1","title":"OSPF_AREA_ID","text":"Details <ul> <li>default<ul> <li>0.0.0.0</li> </ul> </li> <li>description<ul> <li>OSPF Area Id in IP address format</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#ospf_auth_enable_1","title":"OSPF_AUTH_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#ospf_auth_key_1","title":"OSPF_AUTH_KEY","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>3DES Encrypted</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#ospf_auth_key_id_1","title":"OSPF_AUTH_KEY_ID","text":"Details <ul> <li>default<ul> <li>127</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#overlay_mode","title":"OVERLAY_MODE","text":"Details <ul> <li>default<ul> <li>cli</li> </ul> </li> <li>description<ul> <li>VRF/Network configuration using config-profile or CLI</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#per_vrf_loopback_auto_provision","title":"PER_VRF_LOOPBACK_AUTO_PROVISION","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Auto provision a loopback on a VTEP on VRF attachment</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#per_vrf_loopback_ip_range","title":"PER_VRF_LOOPBACK_IP_RANGE","text":"Details <ul> <li>default<ul> <li>10.5.0.0/22</li> </ul> </li> <li>description<ul> <li>Prefix pool to assign IP addresses to loopbacks on VTEPs on a per VRF basis</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#phantom_rp_lb_id1","title":"PHANTOM_RP_LB_ID1","text":"Details <ul> <li>default<ul> <li>2</li> </ul> </li> <li>description<ul> <li>'Used for Bidir-PIM Phantom RP '</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#phantom_rp_lb_id2","title":"PHANTOM_RP_LB_ID2","text":"Details <ul> <li>default<ul> <li>3</li> </ul> </li> <li>description<ul> <li>'Used for Fallback Bidir-PIM Phantom RP '</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#phantom_rp_lb_id3","title":"PHANTOM_RP_LB_ID3","text":"Details <ul> <li>default<ul> <li>4</li> </ul> </li> <li>description<ul> <li>'Used for second Fallback Bidir-PIM Phantom RP '</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#phantom_rp_lb_id4","title":"PHANTOM_RP_LB_ID4","text":"Details <ul> <li>default<ul> <li>5</li> </ul> </li> <li>description<ul> <li>'Used for third Fallback Bidir-PIM Phantom RP '</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#pim_hello_auth_enable_1","title":"PIM_HELLO_AUTH_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Valid for IPv4 Underlay only</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#pim_hello_auth_key_1","title":"PIM_HELLO_AUTH_KEY","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>3DES Encrypted</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#pm_enable_3","title":"PM_ENABLE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#power_redundancy_mode_3","title":"POWER_REDUNDANCY_MODE","text":"Details <ul> <li>choices<ul> <li>ps-redundant</li> <li>combined</li> <li>insrc-redundant</li> </ul> </li> <li>default<ul> <li>ps-redundant</li> </ul> </li> <li>description<ul> <li>Default Power Supply Mode For The Fabric</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#ptp_domain_id_3","title":"PTP_DOMAIN_ID","text":"Details <ul> <li>default<ul> <li>0</li> </ul> </li> <li>description<ul> <li>'Multiple Independent PTP Clocking Subdomains on a Single Network '</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#ptp_lb_id_3","title":"PTP_LB_ID","text":"Details <ul> <li>default<ul> <li>0</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#replication_mode","title":"REPLICATION_MODE","text":"Details <ul> <li>choices<ul> <li>Multicast</li> <li>Ingress</li> </ul> </li> <li>default<ul> <li>Multicast</li> </ul> </li> <li>description<ul> <li>Replication Mode for BUM Traffic</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#router_id_range","title":"ROUTER_ID_RANGE","text":"Details <ul> <li>default<ul> <li>10.2.0.0/23</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#route_map_sequence_number_range","title":"ROUTE_MAP_SEQUENCE_NUMBER_RANGE","text":"Details <ul> <li>default<ul> <li>1-65534</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#rp_count","title":"RP_COUNT","text":"Details <ul> <li>choices<ul> <li>2</li> <li>4</li> </ul> </li> <li>default<ul> <li>2</li> </ul> </li> <li>description<ul> <li>Number of spines acting as Rendezvous-Point (RP)</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#rp_lb_id_1","title":"RP_LB_ID","text":"Details <ul> <li>default<ul> <li>254</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#rp_mode","title":"RP_MODE","text":"Details <ul> <li>choices<ul> <li>asm</li> <li>bidir</li> </ul> </li> <li>default<ul> <li>asm</li> </ul> </li> <li>description<ul> <li>Multicast RP Mode</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#rr_count","title":"RR_COUNT","text":"Details <ul> <li>choices<ul> <li>2</li> <li>4</li> </ul> </li> <li>default<ul> <li>2</li> </ul> </li> <li>description<ul> <li>Number of spines acting as Route-Reflectors</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#seed_switch_core_interfaces","title":"SEED_SWITCH_CORE_INTERFACES","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Core-facing Interface list on Seed Switch (e.g. e1/1-30,e1/32)</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#service_network_vlan_range","title":"SERVICE_NETWORK_VLAN_RANGE","text":"Details <ul> <li>default<ul> <li>3000-3199</li> </ul> </li> <li>description<ul> <li>'Per Switch Overlay Service Network VLAN Range '</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#site_id","title":"SITE_ID","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>For EVPN Multi-Site Support . Defaults to Fabric ASN</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#sla_id_range","title":"SLA_ID_RANGE","text":"Details <ul> <li>default<ul> <li>10000-19999</li> </ul> </li> <li>description<ul> <li>'Per switch SLA ID Range '</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#snmp_server_host_trap_3","title":"SNMP_SERVER_HOST_TRAP","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Configure NDFC as a receiver for SNMP traps</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#spine_switch_core_interfaces","title":"SPINE_SWITCH_CORE_INTERFACES","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Core-facing Interface list on all Spines (e.g. e1/1-30,e1/32)</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#static_underlay_ip_alloc_1","title":"STATIC_UNDERLAY_IP_ALLOC","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Checking this will disable Dynamic Underlay IP Address Allocations</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#stp_bridge_priority","title":"STP_BRIDGE_PRIORITY","text":"Details <ul> <li>default<ul> <li>0</li> </ul> </li> <li>description<ul> <li>Bridge priority for the spanning tree in increments of 4096</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#stp_root_option","title":"STP_ROOT_OPTION","text":"Details <ul> <li>choices<ul> <li>rpvst+</li> <li>mst</li> <li>unmanaged</li> </ul> </li> <li>default<ul> <li>unmanaged</li> </ul> </li> <li>description<ul> <li>Which protocol to use for configuring root bridge? rpvst+: Rapid Per-VLAN Spanning Tree, mst: Multiple Spanning Tree, unmanaged (default): STP Root not managed by NDFC</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#stp_vlan_range","title":"STP_VLAN_RANGE","text":"Details <ul> <li>default<ul> <li>1-3967</li> </ul> </li> <li>description<ul> <li>Vlan range, Example: 1,3-5,7,9-11, Default is 1-3967</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#strict_cc_mode","title":"STRICT_CC_MODE","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable bi-directional compliance checks to flag additional configs in the running config that are not in the intent/expected config</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#subinterface_range_2","title":"SUBINTERFACE_RANGE","text":"Details <ul> <li>default<ul> <li>2-511</li> </ul> </li> <li>description<ul> <li>'Per Border Dot1q Range For VRF Lite Connectivity '</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#subnet_range_1","title":"SUBNET_RANGE","text":"Details <ul> <li>default<ul> <li>10.4.0.0/16</li> </ul> </li> <li>description<ul> <li>Address range to assign Numbered and Peer Link SVI IPs</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#subnet_target_mask_1","title":"SUBNET_TARGET_MASK","text":"Details <ul> <li>choices<ul> <li>30</li> <li>31</li> </ul> </li> <li>default<ul> <li>30</li> </ul> </li> <li>description<ul> <li>Mask for Underlay Subnet IP Range</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#syslog_server_ip_list_1","title":"SYSLOG_SERVER_IP_LIST","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Comma separated list of IP Addresses(v4/v6)</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#syslog_server_vrf_1","title":"SYSLOG_SERVER_VRF","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>One VRF for all Syslog servers or a comma separated list of VRFs, one per Syslog server</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#syslog_sev_1","title":"SYSLOG_SEV","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>'Comma separated list of Syslog severity values, one per Syslog server '</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#tcam_allocation","title":"TCAM_ALLOCATION","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>TCAM commands are automatically generated for VxLAN and vPC Fabric Peering when Enabled</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#underlay_is_v6","title":"UNDERLAY_IS_V6","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>If not enabled, IPv4 underlay is used</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#unnum_bootstrap_lb_id","title":"UNNUM_BOOTSTRAP_LB_ID","text":"Details <ul> <li>default<ul> <li>253</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#unnum_dhcp_end","title":"UNNUM_DHCP_END","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Must be a subset of IGP/BGP Loopback Prefix Pool</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#unnum_dhcp_start","title":"UNNUM_DHCP_START","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Must be a subset of IGP/BGP Loopback Prefix Pool</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#use_link_local","title":"USE_LINK_LOCAL","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>If not enabled, Spine-Leaf interfaces will use global IPv6 addresses</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#v6_subnet_range","title":"V6_SUBNET_RANGE","text":"Details <ul> <li>default<ul> <li>fd00::a04:0/112</li> </ul> </li> <li>description<ul> <li>IPv6 Address range to assign Numbered and Peer Link SVI IPs</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#v6_subnet_target_mask","title":"V6_SUBNET_TARGET_MASK","text":"Details <ul> <li>choices<ul> <li>126</li> <li>127</li> </ul> </li> <li>default<ul> <li>126</li> </ul> </li> <li>description<ul> <li>Mask for Underlay Subnet IPv6 Range</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#vpc_auto_recovery_time","title":"VPC_AUTO_RECOVERY_TIME","text":"Details <ul> <li>default<ul> <li>360</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#vpc_delay_restore","title":"VPC_DELAY_RESTORE","text":"Details <ul> <li>default<ul> <li>150</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#vpc_domain_id_range","title":"VPC_DOMAIN_ID_RANGE","text":"Details <ul> <li>default<ul> <li>1-1000</li> </ul> </li> <li>description<ul> <li>vPC Domain id range to use for new pairings</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#vpc_enable_ipv6_nd_sync","title":"VPC_ENABLE_IPv6_ND_SYNC","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Enable IPv6 ND synchronization between vPC peers</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#vpc_peer_keep_alive_option","title":"VPC_PEER_KEEP_ALIVE_OPTION","text":"Details <ul> <li>choices<ul> <li>loopback</li> <li>management</li> </ul> </li> <li>default<ul> <li>management</li> </ul> </li> <li>description<ul> <li>Use vPC Peer Keep Alive with Loopback or Management</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#vpc_peer_link_po","title":"VPC_PEER_LINK_PO","text":"Details <ul> <li>default<ul> <li>500</li> </ul> </li> <li>description<ul> <li>No description available</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#vpc_peer_link_vlan","title":"VPC_PEER_LINK_VLAN","text":"Details <ul> <li>default<ul> <li>3600</li> </ul> </li> <li>description<ul> <li>'VLAN range for vPC Peer Link SVI '</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#vrf_lite_autoconfig","title":"VRF_LITE_AUTOCONFIG","text":"Details <ul> <li>choices<ul> <li>Manual</li> <li>Back2Back&amp;ToExternal</li> </ul> </li> <li>default<ul> <li>Manual</li> </ul> </li> <li>description<ul> <li>VRF Lite Inter-Fabric Connection Deployment Options. If Back2Back&amp;ToExternal is selected, VRF Lite IFCs are auto created between border devices of two Easy Fabrics, and between border devices in Easy Fabric and edge routers in External Fabric. The IP address is taken from the VRF Lite Subnet IP Range pool.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#vrf_vlan_range","title":"VRF_VLAN_RANGE","text":"Details <ul> <li>default<ul> <li>2000-2299</li> </ul> </li> <li>description<ul> <li>'Per Switch Overlay VRF VLAN Range '</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#default_network_1","title":"default_network","text":"Details <ul> <li>choices<ul> <li>Default_Network_Universal</li> <li>Service_Network_Universal</li> </ul> </li> <li>default<ul> <li>Default_Network_Universal</li> </ul> </li> <li>description<ul> <li>Default Overlay Network Template For Leafs</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#default_pvlan_sec_network_1","title":"default_pvlan_sec_network","text":"Details <ul> <li>choices<ul> <li>Pvlan_Secondary_Network</li> </ul> </li> <li>default<ul> <li>Pvlan_Secondary_Network</li> </ul> </li> <li>description<ul> <li>Default PVLAN Secondary Network Template</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#default_vrf_1","title":"default_vrf","text":"Details <ul> <li>choices<ul> <li>Default_VRF_Universal</li> </ul> </li> <li>default<ul> <li>Default_VRF_Universal</li> </ul> </li> <li>description<ul> <li>Default Overlay VRF Template For Leafs</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enablerealtimebackup_2","title":"enableRealTimeBackup","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Backup hourly only if there is any config deployment since last backup</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#enablescheduledbackup_3","title":"enableScheduledBackup","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Backup at the specified time</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#network_extension_template_1","title":"network_extension_template","text":"Details <ul> <li>choices<ul> <li>Default_Network_Extension_Universal</li> </ul> </li> <li>default<ul> <li>Default_Network_Extension_Universal</li> </ul> </li> <li>description<ul> <li>Default Overlay Network Template For Borders</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#scheduledtime_3","title":"scheduledTime","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Time (UTC) in 24hr format. (00:00 to 23:59)</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#vrf_extension_template_1","title":"vrf_extension_template","text":"Details <ul> <li>choices<ul> <li>Default_VRF_Extension_Universal</li> </ul> </li> <li>default<ul> <li>Default_VRF_Extension_Universal</li> </ul> </li> <li>description<ul> <li>Default Overlay VRF Template For Borders</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#skip_validation","title":"skip_validation","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Skip playbook parameter validation.  Useful for debugging.</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#state","title":"state","text":"Details <ul> <li>choices<ul> <li>deleted</li> <li>merged</li> <li>query</li> <li>replaced</li> </ul> </li> <li>default<ul> <li>merged</li> </ul> </li> <li>description<ul> <li>The state of the feature or object after module completion</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_fabric/#examples","title":"Examples","text":"Details <pre><code>---\n\n# Create the following fabrics with default configuration values\n# if they don't already exist.  If they exist, the playbook will\n# exit without doing anything.\n# - 1. VXLAN EVPN fabric\n# - 1. VXLAN EVPN Multi-Site fabric\n# - 1. LAN Classic fabric\n\n- name: Create fabrics\n  cisco.dcnm.dcnm_fabric:\n    state: merged\n    config:\n    -   FABRIC_NAME: VXLAN_Fabric\n        FABRIC_TYPE: VXLAN_EVPN\n        BGP_AS: 65000\n    -   FABRIC_NAME: MSD_Fabric\n        FABRIC_TYPE: VXLAN_EVPN_MSD\n    -   FABRIC_NAME: LAN_Fabric\n        FABRIC_TYPE: LAN_CLASSIC\n  register: result\n- debug:\n    var: result\n\n# Update the above fabrics with additional configurations.\n\n- name: Update fabrics\n  cisco.dcnm.dcnm_fabric:\n    state: merged\n    config:\n    -   FABRIC_NAME: VXLAN_Fabric\n        FABRIC_TYPE: VXLAN_EVPN\n        BGP_AS: 65000\n        ANYCAST_GW_MAC: 0001.aabb.ccdd\n        UNDERLAY_IS_V6: false\n        EXTRA_CONF_LEAF: |\n          interface Ethernet1/1-16\n            description managed by NDFC\n        DEPLOY: false\n    -   FABRIC_NAME: MSD_Fabric\n        FABRIC_TYPE: VXLAN_EVPN_MSD\n        LOOPBACK100_IP_RANGE: 10.22.0.0/24\n        DEPLOY: false\n    -   FABRIC_NAME: LAN_Fabric\n        FABRIC_TYPE: LAN_CLASSIC\n        BOOTSTRAP_ENABLE: false\n        IS_READ_ONLY: false\n        DEPLOY: false\n  register: result\n- debug:\n    var: result\n\n# Setting skip_validation to True to bypass parameter validation in the module.\n# Note, this does not bypass parameter validation in NDFC.  skip_validation\n# can be useful to verify that the dcnm_fabric module's parameter validation\n# is disallowing parameter combinations that would also be disallowed by\n# NDFC.\n\n- name: Update fabrics\n  cisco.dcnm.dcnm_fabric:\n    state: merged\n    skip_validation: True\n    config:\n    -   FABRIC_NAME: VXLAN_Fabric\n        FABRIC_TYPE: VXLAN_EVPN\n        BGP_AS: 65000\n        ANYCAST_GW_MAC: 0001.aabb.ccdd\n        UNDERLAY_IS_V6: false\n        EXTRA_CONF_LEAF: |\n          interface Ethernet1/1-16\n            description managed by NDFC\n        DEPLOY: false\n\n# Use replaced state to return the fabrics to their default configurations.\n\n- name: Return fabrics to default configuration.\n  cisco.dcnm.dcnm_fabric:\n    state: replaced\n    config:\n    -   FABRIC_NAME: VXLAN_Fabric\n        FABRIC_TYPE: VXLAN_EVPN\n        BGP_AS: 65000\n        DEPLOY: false\n    -   FABRIC_NAME: MSD_Fabric\n        FABRIC_TYPE: VXLAN_EVPN_MSD\n        DEPLOY: false\n    -   FABRIC_NAME: LAN_Fabric\n        FABRIC_TYPE: LAN_CLASSIC\n        DEPLOY: false\n  register: result\n- debug:\n    var: result\n\n# Query the fabrics to get their current configurations.\n\n- name: Query the fabrics.\n  cisco.dcnm.dcnm_fabric:\n    state: query\n    config:\n    -   FABRIC_NAME: VXLAN_Fabric\n    -   FABRIC_NAME: MSD_Fabric\n    -   FABRIC_NAME: LAN_Fabric\n  register: result\n- debug:\n    var: result\n\n# Delete the fabrics.\n\n- name: Delete the fabrics.\n  cisco.dcnm.dcnm_fabric:\n    state: deleted\n    config:\n    -   FABRIC_NAME: VXLAN_Fabric\n    -   FABRIC_NAME: MSD_Fabric\n    -   FABRIC_NAME: LAN_Fabric\n  register: result\n- debug:\n    var: result\n\n# When skip_validation is False (the default), some error messages might be\n# misleading.  For example, with the playbook below, the error message\n# that follows should be interpreted as \"ENABLE_PVLAN is mutually-exclusive\n# to ENABLE_SGT and should be removed from the playbook if ENABLE_SGT is set\n# to True.\"  In the NDFC GUI, if Security Groups is enabled, NDFC disables\n# the ability to modify the PVLAN option.  Hence, even a valid value for\n# ENABLE_PVLAN in the playbook will generate an error.\n\n-   name: merge fabric MyFabric\n    cisco.dcnm.dcnm_fabric:\n        state: merged\n        skip_validation: false\n        config:\n        -   FABRIC_NAME: MyFabric\n            FABRIC_TYPE: VXLAN_EVPN\n            BGP_AS: 65001\n            ENABLE_SGT: true\n            ENABLE_PVLAN: false\n\n# Resulting error message (edited for brevity)\n# \"The following parameter(value) combination(s) are invalid and need to be reviewed: Fabric: f3, ENABLE_PVLAN(False) requires ENABLE_SGT != True.\"\n</code></pre>"},{"location":"modules/dcnm_image_policy/","title":"dcnm_image_policy","text":"Details <ul> <li>author<ul> <li>Allen Robel (@quantumonion)</li> </ul> </li> <li>description<ul> <li>Create, delete, modify image policies.</li> </ul> </li> <li>short_description<ul> <li>Image policy management for Nexus Dashboard Fabric Controller</li> </ul> </li> <li>version_added<ul> <li>3.5.0</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_policy/#options","title":"options","text":"Details"},{"location":"modules/dcnm_image_policy/#config","title":"config","text":"Details <ul> <li>default<ul> <li>[]</li> </ul> </li> <li>description<ul> <li>List of dictionaries containing image policy parameters</li> </ul> </li> <li>elements<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_policy/#agnostic","title":"agnostic","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>The agnostic flag.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_policy/#description","title":"description","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>The image policy description.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_policy/#epld_image","title":"epld_image","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>The epld image name.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_policy/#name","title":"name","text":"Details <ul> <li>description<ul> <li>The image policy name.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_policy/#packages","title":"packages","text":"Details <ul> <li>description<ul> <li>A dictionary containing two keys, install and uninstall.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_policy/#install","title":"install","text":"Details <ul> <li>description<ul> <li>A list of packages to install.</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_policy/#uninstall","title":"uninstall","text":"Details <ul> <li>description<ul> <li>A list of packages to uninstall.</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> <li>type<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_policy/#platform","title":"platform","text":"Details <ul> <li>description<ul> <li>The platform to which the image policy applies e.g. N9K.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_policy/#release","title":"release","text":"Details <ul> <li>description<ul> <li>The release associated with the image policy. </li> <li>This is derived from the image name as follows. </li> <li>From image name nxos64-cs.10.2.5.M.bin </li> <li>we need to extract version (10.2.5), platform (nxos64-cs), and bits (64bit). </li> <li>The release string conforms to format (version)(platform)(bits) </li> <li>so the resulting release string will be 10.2.5_nxos64-cs_64bit</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_policy/#type","title":"type","text":"Details <ul> <li>default<ul> <li>PLATFORM</li> </ul> </li> <li>description<ul> <li>The type of the image policy e.g. PLATFORM.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_policy/#state","title":"state","text":"Details <ul> <li>choices<ul> <li>deleted</li> <li>merged</li> <li>overridden</li> <li>query</li> <li>replaced</li> </ul> </li> <li>default<ul> <li>merged</li> </ul> </li> <li>description<ul> <li>The state of the feature or object after module completion</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_policy/#examples","title":"Examples","text":"Details <pre><code>---\n# This module supports the following states:\n#\n# deleted:\n#   Delete image policies from the controller.\n#\n#   If an image policy has references (i.e. it is attached to a device),\n#   the module will fail.  Use dcnm_image_upgrade module, state deleted,\n#    to detach the image policy from all devices before deleting it.\n#\n# merged:\n#   Create (or update) one or more image policies.\n#\n#   If an image policy does not exist on the controller, create it.\n#   If an image policy already exists on the controller, edit it.\n#\n# overridden:\n#   Create/delete one or more image policies.\n#\n#   If an image policy already exists on the controller, delete it and update\n#   it with the configuration in the playbook task.\n#\n#   Remove any image policies from the controller that are not in the\n#   playbook task.\n#\n# query:\n#\n#   Return the configuration for one or more image policies.\n#\n# replaced:\n#\n#   Replace image policies on the controller with policies in the playbook task.\n#\n#   If an image policy exists on the controller, but not in the playbook task,\n#   do not delete it or modify it.\n#\n# Delete two image policies from the controller.\n\n    -   name: Delete Image policies\n        cisco.dcnm.dcnm_image_policy:\n            state: deleted\n            config:\n            -   name: KR5M\n            -   name: NR3F\n        register: result\n    -   name: print result\n        ansible.builtin.debug:\n            var: result\n\n# Merge two image policies into the controller.\n\n    -   name: Merge Image policies\n        cisco.dcnm.dcnm_image_policy:\n            state: merged\n            config:\n            -   name: KR5M\n                agnostic: false\n                description: KR5M\n                epld_image: n9000-epld.10.2.5.M.img\n                packages:\n                   install:\n                   - mtx-openconfig-all-2.0.0.0-10.4.1.src.rpm\n                   uninstall:\n                   - mtx-grpctunnel-2.1.0.0-10.4.1.lib32_64_n9000\n                platform: N9K\n                release: 10.2.5_nxos64-cs_64bit\n                type: PLATFORM\n            -   name: NR3F\n                description: NR3F\n                platform: N9K\n                epld_image: n9000-epld.10.3.1.F.img\n                release: 10.3.1_nxos64-cs_64bit\n        register: result\n    -   name: print result\n        ansible.builtin.debug:\n            var: result\n\n# Override all policies on the controller and replace them with\n# the policies in the playbook task.  Any policies other than\n# KR5M and NR3F are deleted from the controller.\n\n    -   name: Override Image policies\n        cisco.dcnm.dcnm_image_policy:\n            state: overridden\n            config:\n            -   name: KR5M\n                agnostic: false\n                description: KR5M\n                epld_image: n9000-epld.10.2.5.M.img\n                platform: N9K\n                release: 10.2.5_nxos64-cs_64bit\n                type: PLATFORM\n            -   name: NR3F\n                description: NR3F\n                platform: N9K\n                epld_image: n9000-epld.10.2.5.M.img\n                release: 10.3.1_nxos64-cs_64bit\n        register: result\n    -   name: print result\n        ansible.builtin.debug:\n            var: result\n\n# Query the controller for the policies in the playbook task.\n\n    -   name: Query Image policies\n        cisco.dcnm.dcnm_image_policy:\n            state: query\n            config:\n            -   name: NR3F\n            -   name: KR5M\n        register: result\n    -   name: print result\n        ansible.builtin.debug:\n            var: result\n\n# Replace any policies on the controller that are in the playbook task with\n# the configuration given in the playbook task.  Policies not listed in the\n# playbook task are not modified and are not deleted.\n\n    -   name: Replace Image policies\n        cisco.dcnm.dcnm_image_policy:\n            state: replaced\n            config:\n            -   name: KR5M\n                agnostic: false\n                description: KR5M\n                epld_image: n9000-epld.10.2.5.M.img\n                platform: N9K\n                release: 10.2.5_nxos64-cs_64bit\n                type: PLATFORM\n            -   name: NR3F\n                description: Replaced NR3F\n                platform: N9K\n                epld_image: n9000-epld.10.3.1.F.img\n                release: 10.3.1_nxos64-cs_64bit\n        register: result\n    -   name: print result\n        ansible.builtin.debug:\n            var: result\n</code></pre>"},{"location":"modules/dcnm_image_upgrade/","title":"dcnm_image_upgrade","text":"Details <ul> <li>author<ul> <li>Allen Robel (@quantumonion)</li> </ul> </li> <li>description<ul> <li>Stage, validate, upgrade images. </li> <li>Attach, detach, image policies. </li> <li>Query device issu details.</li> </ul> </li> <li>short_description<ul> <li>Image management for Nexus switches</li> </ul> </li> <li>version_added<ul> <li>3.5.0</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#options","title":"options","text":"Details"},{"location":"modules/dcnm_image_upgrade/#config","title":"config","text":"Details <ul> <li>description<ul> <li>A dictionary containing the image policy configuration.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#options_1","title":"options","text":"Details <ul> <li>description<ul> <li>A dictionary containing options for each of the upgrade types</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#epld","title":"epld","text":"Details <ul> <li>description<ul> <li>A dictionary containing epld upgrade options</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#golden","title":"golden","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable (True) or disable (False) reverting to the golden EPLD image</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#module","title":"module","text":"Details <ul> <li>default<ul> <li>ALL</li> </ul> </li> <li>description<ul> <li>The switch module to upgrade </li> <li>Choose between ALL, or integer values</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#nxos","title":"nxos","text":"Details <ul> <li>description<ul> <li>A dictionary containing nxos upgrade options</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#bios_force","title":"bios_force","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Force BIOS upgrade</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#mode","title":"mode","text":"Details <ul> <li>default<ul> <li>distruptive</li> </ul> </li> <li>description<ul> <li>nxos upgrade mode </li> <li>Choose between distruptive, non_disruptive, force_non_disruptive</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#package","title":"package","text":"Details <ul> <li>description<ul> <li>A dictionary containing package upgrade options</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#install","title":"install","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Install the package</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#uninstall","title":"uninstall","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Uninstall the package</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> <li>type<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#reboot","title":"reboot","text":"Details <ul> <li>description<ul> <li>A dictionary containing reboot options</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#config_reload","title":"config_reload","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Reload the configuration</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#write_erase","title":"write_erase","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Erase the startup configuration</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> <li>type<ul> <li>dict</li> </ul> </li> <li>type<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#policy","title":"policy","text":"Details <ul> <li>description<ul> <li>Image policy name</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#reboot_1","title":"reboot","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Reboot the switch after upgrade</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#stage","title":"stage","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Stage (True) or unstage (False) an image policy</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#switches","title":"switches","text":"Details <ul> <li>description<ul> <li>A list of devices to attach the image policy to.</li> </ul> </li> <li>elements<ul> <li>dict</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#ip_address","title":"ip_address","text":"Details <ul> <li>description<ul> <li>The IP address of the device to which the policy will be attached.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#options_2","title":"options","text":"Details <ul> <li>description<ul> <li>A dictionary containing options for each of the upgrade types</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#epld_1","title":"epld","text":"Details <ul> <li>description<ul> <li>A dictionary containing epld upgrade options</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#golden_1","title":"# golden","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable (True) or disable (False) reverting to the golden EPLD image</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#module_1","title":"# module","text":"Details <ul> <li>default<ul> <li>ALL</li> </ul> </li> <li>description<ul> <li>The switch module to upgrade </li> <li>Choose between ALL, or integer values</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#nxos_1","title":"nxos","text":"Details <ul> <li>description<ul> <li>A dictionary containing nxos upgrade options</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#bios_force_1","title":"# bios_force","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Force BIOS upgrade</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#mode_1","title":"# mode","text":"Details <ul> <li>default<ul> <li>distruptive</li> </ul> </li> <li>description<ul> <li>nxos upgrade mode </li> <li>Choose between distruptive, non_disruptive, force_non_disruptive</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#package_1","title":"package","text":"Details <ul> <li>description<ul> <li>A dictionary containing package upgrade options</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#install_1","title":"# install","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Install the package</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#uninstall_1","title":"# uninstall","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Uninstall the package</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> <li>type<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#reboot_2","title":"reboot","text":"Details <ul> <li>description<ul> <li>A dictionary containing reboot options</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#config_reload_1","title":"# config_reload","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Reload the configuration</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#write_erase_1","title":"# write_erase","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Erase the startup configuration</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> <li>type<ul> <li>dict</li> </ul> </li> <li>type<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#policy_1","title":"policy","text":"Details <ul> <li>description<ul> <li>Image policy name</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#reboot_3","title":"reboot","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Reboot the switch after upgrade</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#stage_1","title":"stage","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Stage (True) or unstage (False) an image policy</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#upgrade","title":"upgrade","text":"Details <ul> <li>description<ul> <li>A dictionary containing upgrade toggles for nxos and epld</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#epld_2","title":"epld","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable (True) or disable (False) EPLD upgrade </li> <li>If upgrade.nxos is false, epld and packages cannot both be true </li> <li>If epld is true, nxos_option must be disruptive</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#nxos_2","title":"nxos","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Enable (True) or disable (False) image upgrade</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> <li>type<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#validate","title":"validate","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Validate (True) or do not validate (False) the image </li> <li>after staging</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#upgrade_1","title":"upgrade","text":"Details <ul> <li>description<ul> <li>A dictionary containing upgrade toggles for nxos and epld</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#epld_3","title":"epld","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable (True) or disable (False) EPLD upgrade </li> <li>If upgrade.nxos is false, epld and packages cannot both be true </li> <li>If epld is true, options.nxos.mode must be set to disruptive</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#nxos_3","title":"nxos","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Enable (True) or disable (False) image upgrade</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> <li>type<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#validate_1","title":"validate","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Validate (True) or do not validate (False) the image after staging. </li> <li>If True, triggers NX-OS to validate that the image is compatible with the switch platform hardware.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> <li>type<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#state","title":"state","text":"Details <ul> <li>choices<ul> <li>merged</li> <li>deleted</li> <li>query</li> </ul> </li> <li>default<ul> <li>merged</li> </ul> </li> <li>description<ul> <li>The state of the feature or object after module completion. </li> <li>I(merged), I(deleted), and I(query) states are supported.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upgrade/#examples","title":"Examples","text":"Details <pre><code>---\n# This module supports the following states:\n\n# merged:\n#   Attach image policy to one or more devices.\n#   Stage image on one or more devices.\n#   Validate image on one or more devices.\n#   Upgrade image on one or more devices.\n\n# query:\n#   Return ISSU details for one or more devices.\n\n# deleted:\n#   Delete image policy from one or more devices\n\n\n# Attach image policy NR3F to two devices\n# Stage and validate the image on two devices but do not upgrade\n    -   name: stage/validate images\n        cisco.dcnm.dcnm_image_upgrade:\n            state: merged\n            config:\n                policy: NR3F\n                stage: true\n                validate: true\n                upgrade:\n                    nxos: false\n                    epld: false\n                switches:\n                -   ip_address: 192.168.1.1\n                -   ip_address: 192.168.1.2\n\n# Attach image policy NR1F to device 192.168.1.1\n# Attach image policy NR2F to device 192.168.1.2\n# Stage the image on device 192.168.1.1, but do not upgrade\n# Stage the image and upgrade device 192.168.1.2\n    -   name: stage/upgrade devices\n        cisco.dcnm.dcnm_image_upgrade:\n            state: merged\n            config:\n                validate: false\n                stage: false\n                upgrade:\n                    nxos: false\n                    epld: false\n                options:\n                    nxos:\n                        mode: disruptive\n                    epld:\n                        module: ALL\n                        golden: false\n                switches:\n                    -   ip_address: 192.168.1.1\n                        policy: NR1F\n                        stage: true\n                        validate: true\n                        upgrade:\n                            nxos: true\n                            epld: false\n                    -   ip_address: 192.168.1.2\n                        policy: NR2F\n                        stage: true\n                        validate: true\n                        upgrade:\n                            nxos: true\n                            epld: true\n                        options:\n                            nxos:\n                                mode: disruptive\n                            epld:\n                                module: ALL\n                                golden: false\n\n# Detach image policy NR3F from two devices\n    -   name: stage/upgrade devices\n        cisco.dcnm.dcnm_image_upgrade:\n            state: deleted\n            config:\n                policy: NR3F\n                switches:\n                -   ip_address: 192.168.1.1\n                -   ip_address: 192.168.1.2\n\n# Query ISSU details for three devices\n    -   name: query switch ISSU status\n        cisco.dcnm.dcnm_image_upgrade:\n            state: query\n            config:\n                policy: KMR5\n                switches:\n                -   ip_address: 192.168.1.1\n                    policy: OR1F\n                -   ip_address: 192.168.1.2\n                    policy: NR2F\n                -   ip_address: 192.168.1.3 # will query policy KMR5\n        register: result\n    -   name: print result\n        ansible.builtin.debug:\n            var: result\n</code></pre>"},{"location":"modules/dcnm_image_upload/","title":"dcnm_image_upload","text":"Details <ul> <li>author<ul> <li>Mallik Mudigonda(@mmudigon)</li> </ul> </li> <li>description<ul> <li>DCNM Ansible Module for the following image management operations </li> <li>Upload, Delete, and Display NXOS images from the controller</li> </ul> </li> <li>short_description<ul> <li>DCNM Ansible Module for managing images.</li> </ul> </li> <li>version_added<ul> <li>3.5.0</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upload/#options","title":"options","text":"Details"},{"location":"modules/dcnm_image_upload/#files","title":"files","text":"Details <ul> <li>default<ul> <li>[]</li> </ul> </li> <li>description<ul> <li>A dictionary of images and other related information that is required to download the same.</li> </ul> </li> <li>elements<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upload/#password","title":"password","text":"Details <ul> <li>description<ul> <li>Password to be used to log into the image hosting server. This parameter is required only if source is 'scp' </li> <li>or 'sftp'.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upload/#path","title":"path","text":"Details <ul> <li>description<ul> <li>Full path to the image that is being uploaded to the controller. For deleting an image </li> <li>the exact image name must be provided.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upload/#remote_server","title":"remote_server","text":"Details <ul> <li>description<ul> <li>IP address of the server hosting the image. This parameter is required only if source is 'scp' </li> <li>or 'sftp'.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upload/#source","title":"source","text":"Details <ul> <li>choices<ul> <li>scp</li> <li>sftp</li> <li>local</li> </ul> </li> <li>default<ul> <li>local</li> </ul> </li> <li>description<ul> <li>Protocol to be used to download the image from the controller.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upload/#user_name","title":"user_name","text":"Details <ul> <li>description<ul> <li>User name to be used to log into the image hosting server. This parameter is required only if source is 'scp' </li> <li>or 'sftp'.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upload/#state","title":"state","text":"Details <ul> <li>choices<ul> <li>merged</li> <li>overridden</li> <li>deleted</li> <li>query</li> </ul> </li> <li>default<ul> <li>merged</li> </ul> </li> <li>description<ul> <li>The required state of the configuration after module completion.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_image_upload/#examples","title":"Examples","text":"Details <pre><code>---\n\n# States:\n# This module supports the following states:\n#\n# Merged:\n#   Images defined in the playbook will be merged into the controller.\n#\n#   The images listed in the playbook will be created if not already present on the server\n#   server. If the image is already present and the configuration information included\n#   in the playbook is either different or not present in server, then the corresponding\n#   information is added to the server. If an image mentioned in playbook\n#   is already present on the server and there is no difference in configuration, no operation\n#   will be performed for such interface.\n#\n# Overridden:\n#   Images defined in the playbook will be overridden in the controller.\n#\n#   The state of the images listed in the playbook will serve as source of truth for all\n#   the images on the controller. Additions and deletions will be done to bring\n#   the images on the controller to the state listed in the playbook. All images other than the\n#   ones mentioned in the playbook will be deleted.\n#   Note: Override will work on the all the images present in the controller.\n#\n# Deleted:\n#   Images defined in the playbook will be deleted from the controller.\n#\n#   Deletes the list of images specified in the playbook. If the playbook does not include\n#   any image information, then all images from the controller will be deleted.\n#\n# Query:\n#   Returns the current state for the images listed in the playbook.\n\n# UPLOAD IMAGES\n\n- name: Upload images to controller\n  cisco.dcnm.dcnm_image_upload: &amp;img_upload\n    state: merged                             # choose form [merged, deleted, overridden, query], default is merged\n    files:\n      - path: \"full/path/to/image1\"           # Full path to the image on the server\n        source: scp                           # choose from [local, scp, sftp], default is local\n        remote_server: \"192.168.1.1\"          # mandatory when the source is scp or sftp\n        username: \"image_upload\"              # mandatory when source is scp or sftp\n        password: \"image_upload\"              # mandatory when source is scp or sftp\n\n      - path: \"full/path/to/image2\"           # Full path to image on local host\n        source: local                         # choose from [local, scp, sftp], default is local\n\n      - path: \"full/path/to/image3\"           # Full path to the image on the server\n        source: sftp                          # choose from [local, scp, sftp], default is local\n        remote_server: \"192.168.1.1\"          # mandatory when the source is scp or sftp\n        username: \"image_upload\"              # mandatory when source is scp or sftp\n        password: \"image_upload\"              # mandatory when source is scp or sftp\n\n# DELETE IMAGES\n\n- name: Delete an image\n  cisco.dcnm.dcnm_image_upload:\n    state: deleted                            # choose form [merged, deleted, overridden, query], default is merged\n    files:\n      - name: \"nxos.9.3.8.bin\"                # Name of the image on the controller\n\n- name: Delete an image - without explicitly including any config\n  cisco.dcnm.dcnm_image_upload:\n    state: deleted                            # choose form [merged, deleted, overridden, query], default is merged\n\n# OVERRIDE IMAGES\n\n- name: Override without any config\n  cisco.dcnm.dcnm_image_upload:\n    state: overridden                         # choose form [merged, deleted, overridden, query], default is merged\n\n- name: Override with a new config\n  cisco.dcnm.dcnm_image_upload: &amp;image_override\n    state: overridden                         # choose form [merged, deleted, overridden, query], default is merged\n    files:\n      - path: \"full/path/to/image4\"           # Full path to the image on local server\n        source: local                         # choose from [local, scp, sftp], default is local\n\n# QUERY IMAGES\n\n- name: Query for existing image\n  cisco.dcnm.dcnm_image_upload:\n    state: query                              # choose form [merged, deleted, overridden, query], default is merged\n    files:\n      - name: \"nxos.9.3.8.bin\"                # Name of the image to be used to filter the output\n\n- name: Query without any filters\n  cisco.dcnm.dcnm_image_upload:\n    state: query                              # choose form [merged, deleted, overridden, query], default is merged\n</code></pre>"},{"location":"modules/dcnm_interface/","title":"dcnm_interface","text":"Details <ul> <li>author<ul> <li>Mallik Mudigonda(@mmudigon)</li> </ul> </li> <li>description<ul> <li>DCNM Ansible Module for the following interface service operations </li> <li>Create, Delete, Modify PortChannel, VPC, Loopback and Sub-Interfaces </li> <li>Modify Ethernet Interfaces</li> </ul> </li> <li>short_description<ul> <li>DCNM Ansible Module for managing interfaces.</li> </ul> </li> <li>version_added<ul> <li>0.9.0</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#options","title":"options","text":"Details"},{"location":"modules/dcnm_interface/#check_deploy","title":"check_deploy","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Deploy operations may take considerable time in certain cases based on the configuration included in the playbook. A success response from DCNM server does not guarantee the completion of deploy operation. This flag if set indicates that the module should verify if the configured state is in sync with what is requested in playbook. If not set the module will return without verifying the state.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#config","title":"config","text":"Details <ul> <li>default<ul> <li>[]</li> </ul> </li> <li>description<ul> <li>A dictionary of interface operations</li> </ul> </li> <li>elements<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#deploy","title":"deploy","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Flag indicating if the configuration must be pushed to the switch. If not included it is considered true by default</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#name","title":"name","text":"Details <ul> <li>description<ul> <li>Name of the interface. Example, po55, eth2/1, lo100, vpc25, eth1/1.1.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#profile_aa_fex","title":"profile_aa_fex","text":"Details <ul> <li>description<ul> <li>Though the key shown here is 'profile_aa_fex' the actual key to be used in playbook is 'profile'. The key 'profile_aa_fex' is used here to logically segregate the interface objects applicable for this profile </li> <li>Object profile which must be included for active-active FEX inetrface configurations.</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#admin_state","title":"admin_state","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Administrative state of the interface</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#description","title":"description","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Description of the FEX interface</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#enable_netflow","title":"enable_netflow","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Flag to enable netflow.</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#mode","title":"mode","text":"Details <ul> <li>choices<ul> <li>port_channel_aa</li> </ul> </li> <li>description<ul> <li>Interface mode</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#mtu","title":"mtu","text":"Details <ul> <li>choices<ul> <li>default</li> <li>jumbo</li> </ul> </li> <li>default<ul> <li>jumbo</li> </ul> </li> <li>description<ul> <li>Interface MTU</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#netflow_monitor","title":"netflow_monitor","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Name of netflow monitor. This parameter is required if \"enable_netflow\" is True.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#peer1_cmds","title":"peer1_cmds","text":"Details <ul> <li>default<ul> <li>[]</li> </ul> </li> <li>description<ul> <li>Commands to be included in the configuration under this interface of first peer</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#peer1_members","title":"peer1_members","text":"Details <ul> <li>description<ul> <li>Member interfaces that are part of this port channel on first peer</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#peer1_po_description","title":"peer1_po_description","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Description of the port-channel interface of first peer</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#peer2_cmds","title":"peer2_cmds","text":"Details <ul> <li>default<ul> <li>[]</li> </ul> </li> <li>description<ul> <li>Commands to be included in the configuration under this interface of second peer</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#peer2_members","title":"peer2_members","text":"Details <ul> <li>description<ul> <li>Member interfaces that are part of this port channel on second peer</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#peer2_po_description","title":"peer2_po_description","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Description of the port-channel interface of second peer</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#profile_eth","title":"profile_eth","text":"Details <ul> <li>description<ul> <li>Though the key shown here is 'profile_eth' the actual key to be used in playbook is 'profile'. The key 'profile_eth' is used here to logically segregate the interface objects applicable for this profile </li> <li>Object profile which must be included for ethernet interface configurations.</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#access_vlan","title":"access_vlan","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Vlan for the interface. This option is applicable only for interfaces whose 'mode' is 'access'</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#admin_state_1","title":"admin_state","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Administrative state of the interface</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#allowed_vlans","title":"allowed_vlans","text":"Details <ul> <li>choices<ul> <li>none</li> <li>all</li> <li>vlan-range(e.g., 1-2, 3-40)</li> </ul> </li> <li>default<ul> <li>none</li> </ul> </li> <li>description<ul> <li>Vlans that are allowed on this interface. This option is applicable only for interfaces whose 'mode' is 'trunk'</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#bpdu_guard","title":"bpdu_guard","text":"Details <ul> <li>choices<ul> <li>true</li> <li>false</li> <li>no</li> </ul> </li> <li>default<ul> <li>true</li> </ul> </li> <li>description<ul> <li>Spanning-tree bpduguard</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#cmds","title":"cmds","text":"Details <ul> <li>default<ul> <li>[]</li> </ul> </li> <li>description<ul> <li>Commands to be included in the configuration under this interface</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#description_1","title":"description","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Description of the interface</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#int_vrf","title":"int_vrf","text":"Details <ul> <li>default<ul> <li>default</li> </ul> </li> <li>description<ul> <li>Interface VRF name. This object is applicable only if the 'mode' is 'routed'</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#ipv4_addr","title":"ipv4_addr","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>IPV4 address of the interface. This object is applicable only if the 'mode' is 'routed' or 'epl_routed'</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#ipv4_mask_len","title":"ipv4_mask_len","text":"Details <ul> <li>default<ul> <li>8</li> </ul> </li> <li>description<ul> <li>IPV4 address mask length. This object is applicable only if the 'mode' is 'routed' or 'epl_routed' </li> <li>Minimum Value (1), Maximum Value (31)</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#ipv6_addr","title":"ipv6_addr","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>IPV6 address of the interface. This object is applicable only if the 'mode' is 'epl_routed'</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#ipv6_mask_len","title":"ipv6_mask_len","text":"Details <ul> <li>default<ul> <li>8</li> </ul> </li> <li>description<ul> <li>IPV6 address mask length. This object is applicable only if the 'mode' is 'epl_routed' </li> <li>Minimum Value (1), Maximum Value (31)</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#mode_1","title":"mode","text":"Details <ul> <li>choices<ul> <li>trunk</li> <li>access</li> <li>routed</li> <li>monitor</li> <li>epl_routed</li> </ul> </li> <li>description<ul> <li>Interface mode</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#mtu_1","title":"mtu","text":"Details <ul> <li>description<ul> <li>Interface MTU. </li> <li>Can be specified either \"default\" or \"jumbo\" for access and trunk interface types. If not specified, it defaults to \"jumbo\" </li> <li>Can be specified with any value within 576 and 9216 for routed interface types. If not specified, it defaults to 9216</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#port_type_fast","title":"port_type_fast","text":"Details <ul> <li>choices<ul> <li>True</li> <li>False</li> </ul> </li> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Spanning-tree edge port behavior</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#route_tag","title":"route_tag","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Route tag associated with the interface IP. This object is applicable only if the 'mode' is 'routed' or 'epl_routed'</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#speed","title":"speed","text":"Details <ul> <li>default<ul> <li>Auto</li> </ul> </li> <li>description<ul> <li>Speed of the interface.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#profile_lo","title":"profile_lo","text":"Details <ul> <li>description<ul> <li>Though the key shown here is 'profile_lo' the actual key to be used in playbook is 'profile'. The key 'profile_lo' is used here to logically segregate the interface objects applicable for this profile </li> <li>Object profile which must be included for loopback interface configurations.</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#admin_state_2","title":"admin_state","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Administrative state of the interface</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#cmds_1","title":"cmds","text":"Details <ul> <li>default<ul> <li>[]</li> </ul> </li> <li>description<ul> <li>Commands to be included in the configuration under this interface</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#description_2","title":"description","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Description of the interface</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#int_vrf_1","title":"int_vrf","text":"Details <ul> <li>default<ul> <li>default</li> </ul> </li> <li>description<ul> <li>Interface VRF name.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#ipv4_addr_1","title":"ipv4_addr","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>IPv4 address of the interface.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#ipv6_addr_1","title":"ipv6_addr","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>IPv6 address of the interface.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#mode_2","title":"mode","text":"Details <ul> <li>choices<ul> <li>lo</li> <li>fabric</li> <li>mpls</li> </ul> </li> <li>description<ul> <li>There are several modes for loopback interfaces. </li> <li>Mode 'lo' is used to create, modify and delete non fabric loopback interfaces using policy 'int_loopback'. </li> <li>Mode 'fabric' is used to modify loopbacks created when the fabric is first created using policy 'int_fabric_loopback_11_1' </li> <li>Mode 'mpls' is used to modify loopbacks created when the fabric is first created using policy 'int_mpls_loopback' </li> <li>Mode 'fabric' and 'mpls' interfaces can be modified but not created or deleted.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#route_tag_1","title":"route_tag","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Route tag associated with the interface IP.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#secondary_ipv4_addr","title":"secondary_ipv4_addr","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Secondary IP address of the nve interface loopback</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#profile_pc","title":"profile_pc","text":"Details <ul> <li>description<ul> <li>Though the key shown here is 'profile_pc' the actual key to be used in playbook is 'profile'. The key 'profile_pc' is used here to logically segregate the interface objects applicable for this profile </li> <li>Object profile which must be included for port channel interface configurations.</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#access_vlan_1","title":"access_vlan","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Vlan for the interface. This option is applicable only for interfaces whose 'mode' is 'access'</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#admin_state_3","title":"admin_state","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Administrative state of the interface</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#cmds_2","title":"cmds","text":"Details <ul> <li>default<ul> <li>[]</li> </ul> </li> <li>description<ul> <li>Commands to be included in the configuration under this interface</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#description_3","title":"description","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Description of the interface</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#int_vrf_2","title":"int_vrf","text":"Details <ul> <li>default<ul> <li>default</li> </ul> </li> <li>description<ul> <li>Interface VRF name. This object is applicable only if the 'mode' is 'l3'</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#ipv4_addr_2","title":"ipv4_addr","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>IPV4 address of the interface. This object is applicable only if the 'mode' is 'l3'</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#ipv4_mask_len_1","title":"ipv4_mask_len","text":"Details <ul> <li>default<ul> <li>8</li> </ul> </li> <li>description<ul> <li>IPV4 address mask length. This object is applicable only if the 'mode' is 'l3' </li> <li>Minimum Value (1), Maximum Value (31)</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#members","title":"members","text":"Details <ul> <li>description<ul> <li>Member interfaces that are part of this port channel</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#mode_3","title":"mode","text":"Details <ul> <li>choices<ul> <li>trunk</li> <li>access</li> <li>l3</li> <li>monitor</li> </ul> </li> <li>description<ul> <li>Interface mode</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#route_tag_2","title":"route_tag","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Route tag associated with the interface IP. This object is applicable only if the 'mode' is 'l3'</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#profile_st_fex","title":"profile_st_fex","text":"Details <ul> <li>description<ul> <li>Though the key shown here is 'profile_st_fex' the actual key to be used in playbook is 'profile'. The key 'profile_st_fex' is used here to logically segregate the interface objects applicable for this profile </li> <li>Object profile which must be included for straigth-through FEX interface configurations.</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#admin_state_4","title":"admin_state","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Administrative state of the interface</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#cmds_3","title":"cmds","text":"Details <ul> <li>default<ul> <li>[]</li> </ul> </li> <li>description<ul> <li>Commands to be included in the configuration under this interface</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#description_4","title":"description","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Description of the FEX interface</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#enable_netflow_1","title":"enable_netflow","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Flag to enable netflow.</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#members_1","title":"members","text":"Details <ul> <li>description<ul> <li>Member interfaces that are part of this FEX</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#mode_4","title":"mode","text":"Details <ul> <li>choices<ul> <li>port_channel_st</li> </ul> </li> <li>description<ul> <li>Interface mode</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#mtu_2","title":"mtu","text":"Details <ul> <li>choices<ul> <li>default</li> <li>jumbo</li> </ul> </li> <li>default<ul> <li>jumbo</li> </ul> </li> <li>description<ul> <li>Interface MTU.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#netflow_monitor_1","title":"netflow_monitor","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Name of netflow monitor. This parameter is required if \"enable_netflow\" is True.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#po_description","title":"po_description","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Description of the port-channel which is part of the FEX interface</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#profile_subint","title":"profile_subint","text":"Details <ul> <li>description<ul> <li>Though the key shown here is 'profile_subint' the actual key to be used in playbook is 'profile'. The key 'profile_subint' is used here to logically segregate the interface objects applicable for this profile </li> <li>Object profile which must be included for sub-interface configurations.</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#admin_state_5","title":"admin_state","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Administrative state of the interface</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#cmds_4","title":"cmds","text":"Details <ul> <li>default<ul> <li>[]</li> </ul> </li> <li>description<ul> <li>Commands to be included in the configuration under this interface</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#description_5","title":"description","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Description of the interface</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#int_vrf_3","title":"int_vrf","text":"Details <ul> <li>default<ul> <li>default</li> </ul> </li> <li>description<ul> <li>Interface VRF name.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#ipv4_addr_3","title":"ipv4_addr","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>IPV4 address of the interface.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#ipv4_mask_len_2","title":"ipv4_mask_len","text":"Details <ul> <li>default<ul> <li>8</li> </ul> </li> <li>description<ul> <li>IPV4 address mask length. </li> <li>Minimum Value (8), Maximum Value (31)</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#ipv6_addr_2","title":"ipv6_addr","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>IPV6 address of the interface.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#ipv6_mask_len_1","title":"ipv6_mask_len","text":"Details <ul> <li>default<ul> <li>8</li> </ul> </li> <li>description<ul> <li>IPV6 address mask length. </li> <li>Minimum Value (1), Maximum Value (31)</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#mode_5","title":"mode","text":"Details <ul> <li>choices<ul> <li>subint</li> </ul> </li> <li>description<ul> <li>Interface mode</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#mtu_3","title":"mtu","text":"Details <ul> <li>default<ul> <li>9216</li> </ul> </li> <li>description<ul> <li>Interface MTU </li> <li>Minimum Value (567), Maximum Value (9216)</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#vlan","title":"vlan","text":"Details <ul> <li>default<ul> <li>0</li> </ul> </li> <li>description<ul> <li>DOT1Q vlan id for this interface </li> <li>Minimum Value (2), Maximum Value (3967)</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#profile_svi","title":"profile_svi","text":"Details <ul> <li>description<ul> <li>Though the key shown here is 'profile_svi' the actual key to be used in playbook is 'profile'. The key 'profile_svi' is used here to logically segregate the interface objects applicable for this profile </li> <li>Object profile which must be included for SVI interface configurations.</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#admin_state_6","title":"admin_state","text":"Details <ul> <li>description<ul> <li>Administrative state of the interface.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#adv_subnet_in_underlay","title":"adv_subnet_in_underlay","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Flag to enable/disable advertisements of subnets into underlay.</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#cmds_5","title":"cmds","text":"Details <ul> <li>default<ul> <li>[]</li> </ul> </li> <li>description<ul> <li>Commands to be included in the configuration under this interface.</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#description_6","title":"description","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Description of the interface.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#dhcp_server_addr1","title":"dhcp_server_addr1","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>DHCP relay server address.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#dhcp_server_addr2","title":"dhcp_server_addr2","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>DHCP relay server address.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#dhcp_server_addr3","title":"dhcp_server_addr3","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>DHCP relay server address.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#disable_ip_redirects","title":"disable_ip_redirects","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Flag to enable/disable IP redirects.</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#enable_hsrp","title":"enable_hsrp","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Flag to enable/disable HSRP on the interface.</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#enable_netflow_2","title":"enable_netflow","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Flag to enable netflow.</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#hsrp_group","title":"hsrp_group","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>HSRP group. This parameter is required if \"enable_hsrp\" is True.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#hsrp_priority","title":"hsrp_priority","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>HSRP priority.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#hsrp_version","title":"hsrp_version","text":"Details <ul> <li>choices<ul> <li>1</li> <li>2</li> </ul> </li> <li>default<ul> <li>1</li> </ul> </li> <li>description<ul> <li>HSRP protocol version.</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#hsrp_vip","title":"hsrp_vip","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Virtual IP address for HSRP. This parameter is required if \"enable_hsrp\" is True.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#hsrp_vmac","title":"hsrp_vmac","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>HSRP virtual MAC.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#int_vrf_4","title":"int_vrf","text":"Details <ul> <li>default<ul> <li>default</li> </ul> </li> <li>description<ul> <li>Interface VRF name.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#ipv4_addr_4","title":"ipv4_addr","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>IPV4 address of the interface.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#ipv4_mask_len_3","title":"ipv4_mask_len","text":"Details <ul> <li>description<ul> <li>IPV4 address mask length. This parameter is required if 'ipv4_addr' is included. </li> <li>Minimum Value (1), Maximum Value (31)</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#mode_6","title":"mode","text":"Details <ul> <li>choices<ul> <li>vlan</li> </ul> </li> <li>description<ul> <li>Interface mode.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#mtu_4","title":"mtu","text":"Details <ul> <li>default<ul> <li>9216</li> </ul> </li> <li>description<ul> <li>Interface MTU.</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#netflow_monitor_2","title":"netflow_monitor","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Name of netflow monitor. This parameter is required if \"enable_netflow\" is True.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#preempt","title":"preempt","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Flag to enable/disable overthrow of low priority active routers. This parameter is valid only if \"enable_hsrp\" is True.</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#route_tag_3","title":"route_tag","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Route tag associated with the interface IP.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#vrf_dhcp1","title":"vrf_dhcp1","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>VRF to reach DHCP server. This parameter is required if \"dhcp_server_addr1\" is included.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#vrf_dhcp2","title":"vrf_dhcp2","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>VRF to reach DHCP server. This parameter is required if \"dhcp_server_addr2\" is included.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#vrf_dhcp3","title":"vrf_dhcp3","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>VRF to reach DHCP server. This parameter is required if \"dhcp_server_addr3\" is included.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#profile_vpc","title":"profile_vpc","text":"Details <ul> <li>description<ul> <li>Though the key shown here is 'profile_vpc' the actual key to be used in playbook is 'profile'. The key 'profile_vpc' is used here to logically segregate the interface objects applicable for this profile </li> <li>Object profile which must be included for virtual port channel inetrface configurations.</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#admin_state_7","title":"admin_state","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Administrative state of the interface</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#bpdu_guard_1","title":"bpdu_guard","text":"Details <ul> <li>choices<ul> <li>true</li> <li>false</li> <li>no</li> </ul> </li> <li>default<ul> <li>true</li> </ul> </li> <li>description<ul> <li>Spanning-tree bpduguard</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#mode_7","title":"mode","text":"Details <ul> <li>choices<ul> <li>trunk</li> <li>access</li> </ul> </li> <li>description<ul> <li>Interface mode</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#mtu_5","title":"mtu","text":"Details <ul> <li>choices<ul> <li>default</li> <li>jumbo</li> </ul> </li> <li>default<ul> <li>jumbo</li> </ul> </li> <li>description<ul> <li>Interface MTU</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#pc_mode","title":"pc_mode","text":"Details <ul> <li>choices<ul> <li>active</li> <li>passive</li> <li>on</li> </ul> </li> <li>default<ul> <li>active</li> </ul> </li> <li>description<ul> <li>Port channel mode</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#peer1_access_vlan","title":"peer1_access_vlan","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Vlan for the interface of first peer. This option is applicable only for interfaces whose 'mode' is 'access'</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#peer1_allowed_vlans","title":"peer1_allowed_vlans","text":"Details <ul> <li>choices<ul> <li>none</li> <li>all</li> <li>vlan-range(e.g., 1-2, 3-40)</li> </ul> </li> <li>default<ul> <li>none</li> </ul> </li> <li>description<ul> <li>Vlans that are allowed on this interface of first peer. This option is applicable only for interfaces whose 'mode' is 'trunk'</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#peer1_cmds_1","title":"peer1_cmds","text":"Details <ul> <li>default<ul> <li>[]</li> </ul> </li> <li>description<ul> <li>Commands to be included in the configuration under this interface of first peer</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#peer1_description","title":"peer1_description","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Description of the interface of first peer</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#peer1_members_1","title":"peer1_members","text":"Details <ul> <li>description<ul> <li>Member interfaces that are part of this port channel on first peer</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#peer1_pcid","title":"peer1_pcid","text":"Details <ul> <li>description<ul> <li>Port channel identifier of first peer. If this object is not included, then the value defaults to the vPC identifier. This value cannot be changed once vPC is created </li> <li>Minimum Value (1), Maximum Value (4096) </li> <li>Default value if not specified is the vPC port identifier</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#peer2_access_vlan","title":"peer2_access_vlan","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Vlan for the interface of second peer. This option is applicable only for interfaces whose 'mode' is 'access'</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#peer2_allowed_vlans","title":"peer2_allowed_vlans","text":"Details <ul> <li>choices<ul> <li>none</li> <li>all</li> <li>vlan-range(e.g., 1-2, 3-40)</li> </ul> </li> <li>default<ul> <li>none</li> </ul> </li> <li>description<ul> <li>Vlans that are allowed on this interface of second peer. This option is applicable only for interfaces whose 'mode' is 'trunk'</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#peer2_cmds_1","title":"peer2_cmds","text":"Details <ul> <li>default<ul> <li>[]</li> </ul> </li> <li>description<ul> <li>Commands to be included in the configuration under this interface of second peer</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#peer2_description","title":"peer2_description","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Description of the interface of second peer</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#peer2_members_1","title":"peer2_members","text":"Details <ul> <li>description<ul> <li>Member interfaces that are part of this port channel on second peer</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#peer2_pcid","title":"peer2_pcid","text":"Details <ul> <li>description<ul> <li>Port channel identifier of second peer. If this object is not included, then the value defaults to the vPC identifier. This value cannot be changed once vPC is created </li> <li>Minimum Value (1), Maximum Value (4096) </li> <li>Default value if not specified is the vPC port identifier</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#port_type_fast_1","title":"port_type_fast","text":"Details <ul> <li>choices<ul> <li>True</li> <li>False</li> </ul> </li> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Spanning-tree edge port behavior</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#switch","title":"switch","text":"Details <ul> <li>description<ul> <li>IP address or DNS name of the management interface. All switches mentioned in this list will be deployed with the included configuration. For vPC interfaces this list object will contain elements each of which is a list of pair of switches</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#type","title":"type","text":"Details <ul> <li>choices<ul> <li>pc</li> <li>vpc</li> <li>sub_int</li> <li>lo</li> <li>eth</li> <li>svi</li> <li>st-fex</li> <li>aa-fex</li> </ul> </li> <li>description<ul> <li>Interface type. Example, pc, vpc, sub_int, lo, eth, svi</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#deploy_1","title":"deploy","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Flag indicating if the configuration must be pushed to the switch. This flag is used to decide the deploy behavior in 'deleted' and 'overridden' states as mentioned below </li> <li>In 'overridden' state this flag will be used to deploy deleted interfaces. </li> <li>In 'deleted' state this flag will be used to deploy deleted interfaces when a specific 'config' block is not included. </li> <li>The 'deploy' flags included with individual interface configuration elements under the 'config' block will take precedence over this global flag.</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#fabric","title":"fabric","text":"Details <ul> <li>description<ul> <li>Name of the target fabric for interface operations</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#override_intf_types","title":"override_intf_types","text":"Details <ul> <li>choices<ul> <li>pc</li> <li>vpc</li> <li>sub_int</li> <li>lo</li> <li>eth</li> <li>svi</li> <li>st_fex</li> <li>aa_fex</li> </ul> </li> <li>default<ul> <li>[]</li> </ul> </li> <li>description<ul> <li>A list of interface types which will be deleted/defaulted in overridden/deleted state. If this list is empty, then during overridden/deleted state, all interface types will be defaulted/deleted. If this list includes specific interface types, then only those interface types that are included in the list will be deleted/defaulted.</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#state","title":"state","text":"Details <ul> <li>choices<ul> <li>merged</li> <li>replaced</li> <li>overridden</li> <li>deleted</li> <li>query</li> </ul> </li> <li>default<ul> <li>merged</li> </ul> </li> <li>description<ul> <li>The required state of the configuration after module completion.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_interface/#examples","title":"Examples","text":"Details <pre><code>---\n\n# States:\n# This module supports the following states:\n#\n# Merged:\n#   Interfaces defined in the playbook will be merged into the target fabric.\n#\n#   The interfaces listed in the playbook will be created if not already present on the DCNM\n#   server. If the interface is already present and the configuration information included\n#   in the playbook is either different or not present in DCNM, then the corresponding\n#   information is added to the interface on DCNM. If an interface mentioned in playbook\n#   is already present on DCNM and there is no difference in configuration, no operation\n#   will be performed for such interface.\n#\n# Replaced:\n#   Interfaces defined in the playbook will be replaced in the target fabric.\n#\n#   The state of the interfaces listed in the playbook will serve as source of truth for the\n#   same interfaces present on the DCNM under the fabric mentioned. Additions and updations\n#   will be done to bring the DCNM interfaces to the state listed in the playbook.\n#   Note: Replace will only work on the interfaces mentioned in the playbook.\n#\n# Overridden:\n#   Interfaces defined in the playbook will be overridden in the target fabric.\n#\n#   The state of the interfaces listed in the playbook will serve as source of truth for all\n#   the interfaces under the fabric mentioned. Additions and deletions will be done to bring\n#   the DCNM interfaces to the state listed in the playbook. All interfaces other than the\n#   ones mentioned in the playbook will either be deleted or reset to default state.\n#   Note: Override will work on the all the interfaces present in the DCNM Fabric.\n#\n# Deleted:\n#   Interfaces defined in the playbook will be deleted in the target fabric.\n#\n#   Deletes the list of interfaces specified in the playbook.  If the playbook does not include\n#   any switches or interface information, then all interfaces from all switches in the\n#   fabric will either be deleted or put to default state. If configuuration includes information\n#   pertaining to any particular switch, then interfaces belonging to that switch will either be\n#   deleted or put to default. If configuration includes both interface and switch information,\n#   then the specified interfaces will either be deleted or reset on all the seitches specified\n#\n# Query:\n#   Returns the current DCNM state for the interfaces listed in the playbook.\n\n# LOOPBACK INTERFACE\n\n- name: Create loopback interfaces\n  cisco.dcnm.dcnm_interface: &amp;lo_merge\n    fabric: mmudigon-fabric\n    state: merged                         # only choose from [merged, replaced, deleted, overridden, query]\n    config:\n      - name: lo100                       # should be of the form lo&lt;port-id&gt;\n        type: lo                          # choose from this list [pc, vpc, sub_int, lo, eth]\n        switch:\n          - \"192.172.1.1\"                 # provide the switch where to deploy the config\n        deploy: true                      # choose from [true, false]\n        profile:\n          admin_state: true               # choose from [true, false]\n          mode: lo                        # choose from [lo]\n          int_vrf: \"\"                     # VRF name\n          ipv4_addr: 192.169.10.1         # ipv4 address for the loopback interface\n          ipv6_addr: fd01::0201           # ipV6 address for the loopback interface\n          route_tag: \"\"                   # Routing Tag for the interface\n          cmds:                           # Freeform config\n            - no shutdown\n          description: \"loopback interface 100 configuration\"\n\n- name: Replace loopback interfaces\n  cisco.dcnm.dcnm_interface:\n    fabric: mmudigon-fabric\n    state: replaced                       # only choose from [merged, replaced, deleted, overridden. query]\n    config:\n      - name: lo100                       # should be of the form lo&lt;port-id&gt;\n        type: lo                          # choose from this list [pc, vpc, sub_int, lo, eth]\n        switch:\n          - \"192.172.1.1\"                 # provide the switch where to deploy the config\n        deploy: true                      ## choose from [true, false]\n        profile:\n          admin_state: false              ## choose from [true, false]\n          mode: lo                        # choose from [lo]\n          int_vrf: \"\"                     # VRF name\n          ipv4_addr: 192.169.12.1         ## ipv4 address for the loopback interface\n          ipv6_addr: fd01:0203            # ipV6 address for the loopback interface\n          route_tag: \"100\"                ## Routing Tag for the interface\n          cmds:                           # Freeform config\n            - no shutdown\n          description: \"loopback interface 100 configuration - replaced\"\n\n## Loopback Interfaces Created During Fabric Creation\n- name: Mange Fabric loopback interfaces\n  cisco.dcnm.dcnm_interface:\n    fabric: mmudigon-fabric\n    state: merged\n    config:\n      - name: lo1                           # This is usually lo0 or lo1 created during fabric creation\n        type: lo\n        switch:\n          - \"192.172.1.1\"                   # provide the switch where to deploy the config\n        deploy: true                        # choose from [true, false]\n        profile:\n          admin_state: false                # choose from [true, false]\n          mode: fabric                      # This must be set to 'fabric' for fabric loopback interfaces\n          secondary_ipv4_addr: 172.16.5.1   # secondary ipv4 address for loopback interface\n          route_tag: \"100\"                  # Routing Tag for the interface\n          cmds:                             # Freeform config\n            - no shutdown\n          description: \"Fabric interface managed by Ansible\"\n\n# To delete or reset all interfaces on all switches in the fabric\n- name: Delete loopback interfaces\n  cisco.dcnm.dcnm_interface:\n    fabric: mmudigon-fabric\n    state: deleted                        # only choose from [merged, replaced, deleted, overridden, query]\n\n# To delete or reset all interfaces on a specific switch in the fabric\n- name: Delete loopback interfaces\n  cisco.dcnm.dcnm_interface:\n    fabric: mmudigon-fabric\n    state: deleted                        # only choose from [merged, replaced, deleted, overridden, query]\n    config:\n      - switch:\n          - \"192.172.1.1\"                 # provide the switch where to deploy the config\n\n# To delete or reset a particular interface on all switches in the fabric\n- name: Delete loopback interfaces\n  cisco.dcnm.dcnm_interface:\n    fabric: mmudigon-fabric\n    state: deleted                        # only choose from [merged, replaced, deleted, overridden, query]\n    config:\n      - name: lo100                       # should be of the form lo&lt;port-id&gt;\n\n# To delete or reset a particular interface on a specific switch in the fabric\n- name: Delete loopback interfaces\n  cisco.dcnm.dcnm_interface:\n    fabric: mmudigon-fabric\n    state: deleted                        # only choose from [merged, replaced, deleted, overridden, query]\n    config:\n      - name: lo100                       # should be of the form lo&lt;port-id&gt;\n        switch:\n          - \"192.172.1.1\"                 # provide the switch where to deploy the config\n\n# To override with a particular interface configuration\n- name: Override loopback interfaces\n  cisco.dcnm.dcnm_interface:\n    fabric: mmudigon-fabric\n    state: overridden                     # only choose from [merged, replaced, deleted, overridden, query]\n    config:\n      - name: lo103                       # should be of the form lo&lt;port-id&gt;\n        type: lo                          # choose from this list [pc, vpc, sub_int, lo, eth]\n        switch:\n          - \"192.172.1.1\"                 # provide the switch where to deploy the config\n        deploy: true                      # choose from [true, false]\n        profile:\n          admin_state: true               # choose from [true, false]\n          mode: lo                        # choose from [lo]\n          int_vrf: \"\"                     # VRF name\n          ipv4_addr: 192.169.14.1         # ipv4 address for the loopback interface\n          ipv6_addr: fd01::0205           # ipV6 address for the loopback interface\n          route_tag: \"\"                   # Routing Tag for the interface\n          cmds:                           # Freeform config\n            - no shutdown\n          description: \"loopback interface 103 configuration - overridden\"\n\n# To override all interface on all switches in the fabric\n- name: Override loopback interfaces\n  cisco.dcnm.dcnm_interface:\n    fabric: mmudigon-fabric\n    state: overridden                     # only choose from [merged, replaced, deleted, overridden, query]\n\n# To override all interfaces on a particular switche in the fabric\n- name: Override loopback interfaces\n  cisco.dcnm.dcnm_interface:\n    fabric: mmudigon-fabric\n    state: overridden                     # only choose from [merged, replaced, deleted, overridden, query]\n    config:\n      - switch:\n          - \"192.172.1.1\"                 # provide the switch where to deploy the config\n\n# PORTCHANNEL INTERFACE\n\n- name: Create port channel interfaces\n  cisco.dcnm.dcnm_interface: &amp;pc_merge\n    fabric: mmudigon-fabric\n    state: merged                         # only choose from [merged, replaced, deleted, overridden, query]\n    config:\n      - name: po300                       # should be of the form po&lt;port-id&gt;\n        type: pc                          # choose from this list [pc, vpc, sub_int, lo, eth]\n        switch:\n          - \"192.172.1.1\"                 # provide the switch information where the config is to be deployed\n        deploy: true                      # choose from [true, false]\n        profile:\n          admin_state: true               # choose from [true, false]\n          mode: trunk                     # choose from [trunk, access, l3, monitor]\n          members:                        # member interfaces\n            - e1/10\n          pc_mode: 'on'                   # choose from ['on', 'active', 'passive']\n          bpdu_guard: true                # choose from [true, false, no]\n          port_type_fast: true            # choose from [true, false]\n          mtu: jumbo                      # choose from [default, jumbo]\n          allowed_vlans: none             # choose from [none, all, vlan range]\n          cmds:                           # Freeform config\n            - no shutdown\n          description: \"port channel acting as trunk\"\n\n      - name: po301                       # should be of the form po&lt;port-id&gt;\n        type: pc                          # choose from this list [pc, vpc, sub_int, lo, eth]\n        switch:\n          - \"192.172.1.1\"                 # provide the switch information where the config is to be deployed\n        deploy: true                      # choose from [true, false]\n        profile:\n          admin_state: false              # choose from [true, false]\n          mode: access                    # choose from [trunk, access, l3, monitor]\n          members:                        # member interfaces\n            - e1/11\n          pc_mode: 'on'                   # choose from ['on', 'active', 'passive']\n          bpdu_guard: true                # choose from [true, false, no]\n          port_type_fast: true            # choose from [true, false]\n          mtu: default                    # choose from [default, jumbo]\n          access_vlan: 301                #\n          cmds:                           # Freeform config\n            - no shutdown\n          description: \"port channel acting as access\"\n\n- name: Replace port channel interfaces\n  cisco.dcnm.dcnm_interface:\n    fabric: mmudigon-fabric\n    state: replaced                       # only choose from [merged, replaced, deleted, overridden, query]\n    config:\n      - name: po300                       # should be of the form po&lt;port-id&gt;\n        type: pc                          # choose from this list [pc, vpc, sub_int, lo, eth]\n        switch:\n          - \"192.172.1.1\"                 # provide the switch information where the config is to be deployed\n        deploy: true                      # choose from [true, false]\n        profile:\n          admin_state: false              ## choose from [true, false]\n          mode: trunk                     # choose from [trunk, access, l3, monitor]\n          members:                        # member interfaces\n            - e1/10\n          pc_mode: 'active'               ## choose from ['on', 'active', 'passive']\n          bpdu_guard: false               ## choose from [true, false, no]\n          port_type_fast: false           ## choose from [true, false]\n          mtu: default                    ## choose from [default, jumbo]\n          allowed_vlans: all              ## choose from [none, all, vlan range]\n          cmds:                           # Freeform config\n            - no shutdown\n          description: \"port channel acting as trunk - replace\"\n\n# To delete or reset a particular interface on a specific switch in the fabric\n- name: Delete port channel interfaces\n  cisco.dcnm.dcnm_interface:\n    fabric: mmudigon-fabric\n    state: deleted                        # only choose from [merged, replaced, deleted, overridden, query]\n    config:\n      - name: po300                       # should be of the form po&lt;port-id&gt;\n        switch:\n          - \"192.172.1.1\"                 # provide the switch information where the config is to be deployed\n\n# To delete or reset all interfaces on all switches in the fabric\n- name: Delete port channel interfaces\n  cisco.dcnm.dcnm_interface:\n    fabric: mmudigon-fabric\n    state: deleted                        # only choose from [merged, replaced, deleted, overridden, query]\n\n# To delete or reset a particular interface on all switches in the fabric\n- name: Delete port-channel interfaces\n  cisco.dcnm.dcnm_interface:\n    fabric: mmudigon-fabric\n    state: deleted                        # only choose from [merged, replaced, deleted, overridden, query]\n    config:\n      - name: po300                       # should be of the form po&lt;port-id&gt;\n\n# To delete or reset all interfaces on a specific switch in the fabric\n- name: Delete port channel interfaces\n  cisco.dcnm.dcnm_interface:\n    fabric: mmudigon-fabric\n    state: deleted                        # only choose from [merged, replaced, deleted, overridden, query]\n    config:\n      - switch:\n          - \"192.172.1.1\"                 # provide the switch information where the config is to be deployed\n\n- name: Override port channel interfaces\n  cisco.dcnm.dcnm_interface:\n    fabric: mmudigon-fabric\n    state: overridden                     # only choose from [merged, replaced, deleted, overridden, query]\n    config:\n      - name: po320                       # should be of the form po&lt;port-id&gt;\n        type: pc                          # choose from this list [pc, vpc, sub_int, lo, eth]\n        switch:\n          - \"192.172.1.1\"                 # provide the switch information where the config is to be deployed\n        deploy: true                      # choose from [true, false]\n        profile:\n          admin_state: true               # choose from [true, false]\n          mode: trunk                     # choose from [trunk, access, l3, monitor]\n          members:                        # member interfaces\n            - e1/10\n          pc_mode: 'on'                   # choose from ['on', 'active', 'passive']\n          bpdu_guard: true                # choose from [true, false, no]\n          port_type_fast: true            # choose from [true, false]\n          mtu: jumbo                      # choose from [default, jumbo]\n          allowed_vlans: none             # choose from [none, all, vlan range]\n          cmds:                           # Freeform config\n            - no shutdown\n          description: \"port channel acting as trunk\"\n\n# SUB-INTERFACE\n\n- name: Create sub-interfaces\n  cisco.dcnm.dcnm_interface: &amp;sub_merge\n    fabric: mmudigon-fabric\n    state: merged                         # only choose from [merged, replaced, deleted, overridden, query]\n    config:\n      - name: eth1/1.1                    # should be of the form eth&lt;port-num&gt;.&lt;port-id&gt;\n        type: sub_int                     # choose from this list [pc, vpc, sub_int, lo, eth]\n        switch:\n          - \"192.172.1.1\"                 # provide the switch information where the config is to be deployed\n        deploy: true                      # choose from [true, false]\n        profile:\n          admin_state: true               # choose from [true, false]\n          mode: subint                    # choose from [subint]\n          vlan: 100                       # vlan ID [min:2, max:3967]\n          int_vrf: \"\"                     # VRF name\n          ipv4_addr: 192.168.30.1         # ipv4 address for the sub-interface\n          ipv4_mask_len: 24               # choose between [min:8, max:31]\n          ipv6_addr: fd01::0401           # ipV6 address for the sub-interface\n          ipv6_mask_len: 64               # choose between [min:64, max:127]\n          mtu: 9216                       # choose between [min:576, max:9216]\n          cmds:                           # Freeform config\n            - no shutdown\n          description: \"sub interface eth1/1.1 configuration\"\n\n- name: Replace sub-interfaces\n  cisco.dcnm.dcnm_interface:\n    fabric: mmudigon-fabric\n    state: replaced                       # only choose from [merged, replaced, deleted, overridden, query]\n    config:\n      - name: eth1/1.1                    # should be of the form eth&lt;port-num&gt;.&lt;port-id&gt;\n        type: sub_int                     # choose from this list [pc, vpc, sub_int, lo, eth]\n        switch:\n          - \"192.172.1.1\"                 # provide the switch information where the config is to be deployed\n        deploy: true                      # choose from [true, false]\n        profile:\n          admin_state: false              ## choose from [true, false]\n          mode: subint                    # choose from [subint]\n          vlan: 200                       ## vlan ID [min:2, max:3967]\n          int_vrf: \"\"                     # VRF name\n          ipv4_addr: 192.168.32.1         ## ipv4 address for the sub-interface\n          ipv4_mask_len: 20               # choose between [min:8, max:31]\n          ipv6_addr: fd01::0403           # ipV6 address for the sub-interface\n          ipv6_mask_len: 64               # choose between [min:64, max:127]\n          mtu: 1500                       ## choose between [min:576, max:9216]\n          cmds:                           # Freeform config\n            - no shutdown\n          description: \"sub interface eth1/1.1 configuration - replace\"\n\n# To delete or reset all interfaces on all switches in the fabric\n- name: Delete sub-interfaces\n  cisco.dcnm.dcnm_interface:\n    fabric: mmudigon-fabric\n    state: deleted                        # only choose from [merged, replaced, deleted, overridden, query]\n\n# To delete or reset a particular interface on all switches in the fabric\n- name: Delete port-channel interfaces\n  cisco.dcnm.dcnm_interface:\n    fabric: mmudigon-fabric\n    state: deleted                        # only choose from [merged, replaced, deleted, overridden, query]\n    config:\n      - name: eth1/1.1                    # should be of the form eth&lt;port-num&gt;.&lt;port-id&gt;\n\n- name: Override sub-interfaces\n  cisco.dcnm.dcnm_interface:\n    fabric: mmudigon-fabric\n    state: overridden                     # only choose from [merged, replaced, deleted, overridden, query]\n    config:\n      - name: eth1/1.3                    # should be of the form eth&lt;port-num&gt;.&lt;port-id&gt;\n        type: sub_int                     # choose from this list [pc, vpc, sub_int, lo, eth]\n        switch:\n          - \"192.172.1.1\"                 # provide the switch information where the config is to be deployed\n        deploy: true                      # choose from [true, false]\n        profile:\n          admin_state: true               # choose from [true, false]\n          mode: subint                    # choose from [subint]\n          vlan: 103                       # vlan ID [min:2, max:3967]\n          int_vrf: \"\"                     # VRF name\n          ipv4_addr: 192.168.35.1         # ipv4 address for the sub-interface\n          ipv4_mask_len: 24               # choose between [min:8, max:31]\n          ipv6_addr: fd01::0405           # ipV6 address for the sub-interface\n          ipv6_mask_len: 64               # choose between [min:64, max:127]\n          mtu: 9216                       # choose between [min:576, max:9216]\n          cmds:                           # Freeform config\n            - no shutdown\n          description: \"sub interface eth1/1.3 configuration - override\"\n\n# VPC INTERFACE\n\n- name: Create vPC interfaces\n  cisco.dcnm.dcnm_interface: &amp;vpc_merge\n    fabric: mmudigon-fabric\n    state: merged                         # only choose from [merged, replaced, deleted, overridden, query]\n    config:\n      - name: vpc750                      # should be of the form vpc&lt;port-id&gt;\n        type: vpc                         # choose from this list [pc, vpc, sub_int, lo, eth]\n        switch:                           # provide switches of vPC pair\n          - [\"192.172.1.1\",\n             \"192.172.1.2\"]\n        deploy: true                      # choose from [true, false]\n        profile:\n          admin_state: true               # choose from [true, false]\n          mode: trunk                     # choose from [trunk, access]\n          peer1_pcid: 100                 # choose between [Min:1, Max:4096], if not given, will be VPC port-id\n          peer2_pcid: 100                 # choose between [Min:1, Max:4096], if not given, will be VPC port-id\n          peer1_members:                  # member interfaces on peer 1\n            - e1/24\n          peer2_members:                  # member interfaces on peer 2\n            - e1/24\n          pc_mode: 'active'               # choose from ['on', 'active', 'passive']\n          bpdu_guard: true                # choose from [true, false, 'no']\n          port_type_fast: true            # choose from [true, false]\n          mtu: jumbo                      # choose from [default, jumbo]\n          peer1_allowed_vlans: none       # choose from [none, all, vlan range]\n          peer2_allowed_vlans: none       # choose from [none, all, vlan range]\n          peer1_description: \"VPC acting as trunk peer1\"\n          peer2_description: \"VPC acting as trunk peer2\"\n\n\n- name: Replace vPC interfaces\n  cisco.dcnm.dcnm_interface:\n    fabric: mmudigon-fabric\n    state: replaced                         # only choose from [merged, replaced, deleted, overridden, query]\n    config:\n      - name: vpc750                      # should be of the form vpc&lt;port-id&gt;\n        type: vpc                         # choose from this list [pc, vpc, sub_int, lo, eth]\n        switch:                           # provide switches of vPC pair\n          - [\"192.172.1.1\",\n             \"192.172.1.2\"]\n        deploy: true                      # choose from [true, false]\n        profile:\n          admin_state: false              ## choose from [true, false]\n          mode: trunk                     # choose from [trunk, access]\n          peer1_pcid: 100                 # choose between [Min:1, Max:4096], if not given, will be VPC port-id\n          peer2_pcid: 100                 # choose between [Min:1, Max:4096], if not given, will be VPC port-id\n          peer1_members:                  ## member interfaces on peer 1\n            - e1/26\n          peer2_members:                  ## member interfaces on peer 2\n            - e1/26\n          pc_mode: 'active'               ## choose from ['on', 'active', 'passive']\n          bpdu_guard: false               ## choose from [true, false, 'no']\n          port_type_fast: false           ## choose from [true, false]\n          mtu: default                    ## choose from [default, jumbo]\n          peer1_allowed_vlans: all        ## choose from [none, all, vlan range]\n          peer2_allowed_vlans: all        ## choose from [none, all, vlan range]\n          peer1_description: \"VPC acting as trunk peer1 - modified\"\n          peer2_description: \"VPC acting as trunk peer2 - modified\"\n          peer1_cmds:                     # Freeform config\n              - no shutdown\n          peer2_cmds:                     # Freeform config\n              - no shutdown\n\n# To delete or reset a particular interface on a specific switch in the fabric\n- name: Delete vPC interfaces\n  cisco.dcnm.dcnm_interface:\n    fabric: mmudigon-fabric\n    state: deleted                         # only choose from [merged, replaced, deleted, overridden, query]\n    config:\n      - name: vpc750                      # should be of the form vpc&lt;port-id&gt;\n        switch:                           # provide switches of vPC pair\n          - [\"192.172.1.1\",\n             \"192.172.1.2\"]\n\n- name: Override vPC interfaces\n  cisco.dcnm.dcnm_interface:\n    fabric: mmudigon-fabric\n    state: overridden                         # only choose from [merged, replaced, deleted, overridden, query]\n    config:\n      - name: vpc752                      # should be of the form vpc&lt;port-id&gt;\n        type: vpc                         # choose from this list [pc, vpc, sub_int, lo, eth]\n        switch:                           # provide switches of vPC pair\n          - [\"192.172.1.1\",\n             \"192.172.1.2\"]\n        deploy: true                      # choose from [true, false]\n        profile:\n          admin_state: true               # choose from [true, false]\n          mode: trunk                     # choose from [trunk, access]\n          peer1_pcid: 752                 # choose between [Min:1, Max:4096], if not given, will be VPC port-id\n          #peer2_pcid: 1                  # choose between [Min:1, Max:4096], if not given, will be VPC port-id\n          peer1_members:                  # member interfaces on peer 1\n            - e1/26\n          peer2_members:                  # member interfaces on peer 2\n            - e1/27\n          pc_mode: 'on'                   # choose from ['on', 'active', 'passive']\n          bpdu_guard: true                # choose from [true, false, no]\n          port_type_fast: true            # choose from [true, false]\n          mtu: jumbo                      # choose from [default, jumbo]\n          peer1_allowed_vlans: none       # choose from [none, all, vlan range]\n          peer2_allowed_vlans: none       # choose from [none, all, vlan range]\n          peer1_description: \"VPC acting as trunk peer1\"\n          peer2_description: \"VPC acting as trunk peer2\"\n          peer1_cmds:                     # Freeform config\n              - no shutdown\n              - no shutdown\n          peer2_cmds:                     # Freeform config\n              - no shutdown\n              - no shutdown\n\n# SVI INTERFACES\n\n- name: Create SVI interfaces including optional parameters\n  cisco.dcnm.dcnm_interface:\n    check_deploy: true\n    fabric: \"{{ ansible_svi_fabric }}\"\n    state: merged                                   # only choose form [merged, replaced, deleted, overridden, query]\n    config:\n      - name: vlan1001                              # should be of the form vlan&lt;vlan-id&gt;\n        type: svi                                   # choose from this list [pc, vpc, sub_int, lo, eth, svi]\n        switch:\n          - \"{{ ansible_switch1 }}\"                 # provide the switch information where the config is to be deployed\n        deploy: true                                # choose from [true, false]\n        profile:\n          int_vrf: blue                             # optional, Interface VRF name, default is \"default\"\n          ipv4_addr: 192.168.2.1                    # optional, Interfae IP, default is \"\"\n          ipv4_mask_len: 24                         # optional, IP mask length, default is \"\"\n          mtu: 9216                                 # optional, MTU default is \"\"\n          route_tag: 1001                           # optional, Routing TAG, default is \"\"\n          disable_ip_redirects: true                # optional, flag to enable/disable IP redirects, default is \"false\"\n          cmds:                                     # Freeform config\n            - no shutdown\n          admin_state: true                         # Flag to enable/disable Vlan interaface\n          enable_hsrp: true                         # optional, flag to enable/disable HSRP on the interface, default is \"false\"\n          hsrp_vip: 192.168.2.100                   # optional, Virtual IP address for HSRP, default is \"\"\n          hsrp_group: 10                            # optional, HSRP group, default is \"\"\n          hsrp_priority: 5                          # optional, HSRP priority, default is \"\"\n          hsrp_vmac: 0000.0101.ac0a                 # optional, HSRP virtual MAC, default is \"\"\n          dhcp_server_addr1: 192.200.1.1            # optional, DHCP relay server address, default is \"\"\n          vrf_dhcp1: blue                           # optional, VRF to reach DHCP server. default is \"\"\n          dhcp_server_addr2: 192.200.1.2            # optional, DHCP relay server address, default is \"\"\n          vrf_dhcp2: blue                           # optional, VRF to reach DHCP server. default is \"\"\n          dhcp_server_addr3: 192.200.1.3            # optional, DHCP relay server address, default is \"\"\n          vrf_dhcp3: blue                           # optional, VRF to reach DHCP server. default is \"\"\n          adv_subnet_in_underlay: true              # optional, flag to enable/disable advertisements of subnets into underlay, default is \"false\"\n          enable_netflow: false                     # optional, flag to enable netflow, default is \"false\"\n          netflow_monitor: svi1001                  # optional, name of netflow monitor, default is \"\"\n          hsrp_version: 1                           # optional, HSRP protocol version, default is 1\n          preempt: true                             # optional, flag to enable/disable overthrow of low priority active routers, optional is \"false\"\n          mode: vlan                                # choose from [vlan, vlan_admin_state], default is \"vlan\"\n          description: Switched vlan interface 1001 # optional, Interface description, default is \"\"\n\n- name: Replace SVI interface\n  cisco.dcnm.dcnm_interface:\n    check_deploy: true\n    fabric: \"{{ ansible_svi_fabric }}\"\n    state: replaced                                       # only choose form [merged, replaced, deleted, overridden, query]\n    config:\n      - name: vlan1001                                    # should be of the form vlan&lt;vlan-id&gt;\n        type: svi                                         # choose from this list [pc, vpc, sub_int, lo, eth, svi]\n        switch:\n          - \"{{ ansible_switch1 }}\"                       # provide the switch information where the config is to be deployed\n        deploy: true                                      # choose from [true, false]\n        profile:\n          int_vrf: red                                    # optional, Interface VRF name, default is \"default\"\n          ipv4_addr: 192.169.2.1                          # optional, Interfae IP, default is \"\"\n          ipv4_mask_len: 20                               # optional, IP mask length, default is \"\"\n          mtu: 9210                                       # optional, MTU default is \"\"\n          route_tag: 1002                                 # optional, Routing TAG, default is \"\"\n          disable_ip_redirects: false                     # optional, flag to enable/disable IP redirects, default is \"false\"\n          cmds:                                           # Freeform config\n            - no shutdown\n          admin_state: false                              # Flag to enable/disable Vlan interaface\n          enable_hsrp: true                               # optional, flag to enable/disable HSRP on the interface, default is \"false\"\n          hsrp_vip: 192.169.2.100                         # optional, Virtual IP address for HSRP, default is \"\"\n          hsrp_group: 11                                  # optional, HSRP group, default is \"\"\n          hsrp_priority: 5                                # optional, HSRP priority, default is \"\"\n          hsrp_vmac: 0000.0102.ac0a                       # optional, HSRP virtual MAC, default is \"\"\n          dhcp_server_addr1: 193.200.1.1                  # optional, DHCP relay server address, default is \"\"\n          vrf_dhcp1: green                                # optional, VRF to reach DHCP server. default is \"\"\n          dhcp_server_addr2: 193.200.1.2                  # optional, DHCP relay server address, default is \"\"\n          vrf_dhcp2: green                                # optional, VRF to reach DHCP server. default is \"\"\n          dhcp_server_addr3: 193.200.1.3                  # optional, DHCP relay server address, default is \"\"\n          vrf_dhcp3: green                                # optional, VRF to reach DHCP server. default is \"\"\n          adv_subnet_in_underlay: false                   # optional, flag to enable/disable advertisements of subnets into underlay, default is \"false\"\n          enable_netflow: false                           # optional, flag to enable netflow, default is \"false\"\n          netflow_monitor: svi1002                        # optional, name of netflow monitor, default is \"\"\n          hsrp_version: 2                                 # optional, HSRP protocol version, default is 1\n          preempt: false                                  # optional, flag to enable/disable overthrow of low priority active routers, optional is \"false\"\n          mode: vlan                                      # choose from [vlan, vlan_admin_state], default is \"vlan\"\n          description: Switched vlan interface 1001 - Rep # optional, Interface description, default is \"\"\n\n- name: Delete SVI interfaces\n  cisco.dcnm.dcnm_interface:\n    check_deploy: True\n    fabric: \"{{ ansible_svi_fabric }}\"\n    state: deleted                        # only choose form [merged, replaced, deleted, overridden, query]\n    config:\n      - name: vlan1000                    # should be of the form vlan&lt;vlan-id&gt;\n        type: svi                         # choose from this list [pc, vpc, sub_int, lo, eth, svi]\n        switch:\n          - \"{{ ansible_switch1 }}\"       # provide the switch where to deploy the config\n\n      - name: vlan1001                    # should be of the form vlan&lt;vlan-id&gt;\n        type: svi                         # choose from this list [pc, vpc, sub_int, lo, eth, svi]\n        switch:\n          - \"{{ ansible_switch1 }}\"       # provide the switch where to deploy the config\n\n- name: Override SVI interface\n  cisco.dcnm.dcnm_interface:\n    check_deploy: true\n    fabric: \"{{ ansible_svi_fabric }}\"\n    state: overridden                                     # only choose form [merged, replaced, deleted, overridden, query]\n    config:\n      - name: vlan1002                                    # should be of the form vlan&lt;vlan-id&gt;\n        type: svi                                         # choose from this list [pc, vpc, sub_int, lo, eth, svi]\n        switch:\n          - \"{{ ansible_switch1 }}\"                       # provide the switch information where the config is to be deployed\n        deploy: true                                      # choose from [true, false]\n        profile:\n          admin_state: true                               # Flag to enable/disable Vlan interaface\n          mode: vlan                                      # choose from [vlan, vlan_admin_state], default is \"vlan\"\n\n# AA FEX INTERFACES\n\n- name: Create AA FEX interfaces including optional parameters\n  cisco.dcnm.dcnm_interface:\n    check_deploy: True\n    fabric: \"{{ ansible_svi_fabric }}\"\n    state: merged                                   # only choose form [merged, replaced, deleted, overridden, query]\n    config:\n      - name: vpc151                                # should be of the form vpc&lt;id&gt;\n        type: aa_fex                                # choose from this list [pc, vpc, sub_int, lo, eth, svi, st_fex, aa_fex]\n        switch:\n          - \"{{ ansible_switch1 }}\"                 # provide the switch information where the config is to be deployed\n        deploy: true                                # choose from [true, false]\n        profile:\n          description: \"AA FEX interface 151\"       # optional, description of FEX interface, default is \"\"\n          peer1_members:                            # optional, member interfaces, default is []\n            - e1/10\n          peer2_members:                            # optional, member interfaces, default is []\n            - e1/10\n          mtu: \"jumbo\"                              # optional, MTU for the interface, default is \"jumbo\"\n          peer1_po_description: \"PC 151 for AA FEX\" # optional, description of PC interface, default is \"\"\n          peer2_po_description: \"PC 151 for AA FEX\" # optional, description of PC interface, default is \"\"\n          peer1_cmds:                               # optional, freeform config, default is []\n            - no shutdown\n          peer2_cmds:                               # optional, freeform config, default is []\n            - no shutdown\n          admin_state: true                         # Flag to enable/disable FEX interface.\n          enable_netflow: false                     # optional, flag to enable netflow, default is false\n          mode: port_channel_aa                     # choose from [port_channel_aa], default is \"port_channel_aa\"\n\n- name: Replace AA FEX interface\n  cisco.dcnm.dcnm_interface:\n    check_deploy: true\n    fabric: \"{{ ansible_svi_fabric }}\"\n    state: replaced                                 # only choose form [merged, replaced, deleted, overridden, query]\n    config:\n      - name: vpc150                                # should be of the form vpc&lt;id&gt;\n        type: aa_fex                                # choose from this list [pc, vpc, sub_int, lo, eth, svi, st_fex, aa_fex]\n        switch:\n          - \"{{ ansible_switch1 }}\"                 # provide the switch information where the config is to be deployed\n        deploy: true                                # choose from [true, false]\n        profile:\n          peer1_members:                            # optional, member interfaces, default is []\n            - e1/11\n          peer2_members:                            # optional, member interfaces, default is []\n            - e1/11\n          mtu: \"default\"                            # optional, MTU for the interface, default is \"jumbo\"\n          peer1_po_description: \"PC 150 for AA FEX - REP\" # optional, description of PC interface, default is \"\"\n          peer2_po_description: \"PC 150 for AA FEX - REP\" # optional, description of PC interface, default is \"\"\n          admin_state: false                        # Flag to enable/disable FEX interface.\n          enable_netflow: false                     # optional, flag to enable netflow, default is false\n          mode: port_channel_aa                     # choose from [port_channel_aa], default is \"port_channel_aa\"\n\n          peer1_cmds:                               # optional, freeform config, default is []\n            - ip arp inspection trust\n          peer2_cmds:                               # optional, freeform config, default is []\n            - ip arp inspection trust\n\n- name: Delete AA FEX interfaces\n  cisco.dcnm.dcnm_interface:\n    check_deploy: True\n    fabric: \"{{ ansible_svi_fabric }}\"\n    state: deleted                        # only choose form [merged, replaced, deleted, overridden, query]\n    config:\n      - name: vpc151                      # should be of the form vpc&lt;id&gt;\n        switch:\n          - \"{{ ansible_switch1 }}\"       # provide the switch where to deploy the config\n\n\n- name: Overide AA FEX interface with a new one\n  cisco.dcnm.dcnm_interface:\n    check_deploy: true\n    fabric: \"{{ ansible_svi_fabric }}\"\n    state: overridden                               # only choose form [merged, replaced, deleted, overridden, query]\n    config:\n      - name: vpc151                                # should be of the form vpc&lt;id&gt;\n        type: aa_fex                                # choose from this list [pc, vpc, sub_int, lo, eth, svi, st_fex, aa_fex]\n        switch:\n          - \"{{ ansible_switch1 }}\"                 # provide the switch information where the config is to be deployed\n        deploy: true                                # choose from [true, false]\n        profile:\n          description: \"AA FEX interface 151\"       # optional, description of FEX interface, default is \"\"\n          peer1_members:                            # optional, member interfaces, default is []\n            - e1/10\n          peer2_members:                            # optional, member interfaces, default is []\n            - e1/10\n          mtu: \"jumbo\"                              # optional, MTU for the interface, default is \"jumbo\"\n          peer1_po_description: \"PC 151 for AA FEX\" # optional, description of PC interface, default is \"\"\n          peer2_po_description: \"PC 151 for AA FEX\" # optional, description of PC interface, default is \"\"\n          peer1_cmds:                               # optional, freeform config, default is []\n            - no shutdown\n          peer2_cmds:                               # optional, freeform config, default is []\n            - no shutdown\n          admin_state: true                         # Flag to enable/disable FEX interface.\n          enable_netflow: false                     # optional, flag to enable netflow, default is false\n          mode: port_channel_aa                     # choose from [port_channel_aa], default is \"port_channel_aa\"\n\n# STRAIGHT-THROUGH FEX INTERFACES\n\n- name: Create ST FEX interfaces including optional parameters\n  cisco.dcnm.dcnm_interface:\n    check_deploy: true\n    fabric: \"{{ ansible_svi_fabric }}\"\n    state: merged                                   # only choose form [merged, replaced, deleted, overridden, query]\n    config:\n      - name: po151                                 # should be of the form po&lt;po-id&gt;\n        type: st_fex                                # choose from this list [pc, vpc, sub_int, lo, eth, svi, st_fex, aa_fex]\n        switch:\n          - \"{{ ansible_switch1 }}\"                 # provide the switch information where the config is to be deployed\n        deploy: true                                # choose from [true, false]\n        profile:\n          description: \"ST FEX interface 151\"       # optional, description of FEX interface, default is \"\"\n          members:                                  # optional, member interfaces, default is []\n            - e1/10\n          mtu: \"jumbo\"                              # optional, MTU for the interface, default is \"jumbo\"\n          po_description: \"PC 151 for ST FEX\"       # optional, description of PC interface, default is \"\"\n          cmds:                                     # optional, freeform config, default is []\n            - no shutdown\n          admin_state: true                         # Flag to enable/disable FEX interface.\n          enable_netflow: false                     # optional, flag to enable netflow, default is false\n          mode: port_channel_st                     # choose from [port_channel_st], default is \"port_channel_st\"\n\n- name: Replace ST FEX interface\n  cisco.dcnm.dcnm_interface:\n    check_deploy: true\n    fabric: \"{{ ansible_svi_fabric }}\"\n    state: replaced                                 # only choose form [merged, replaced, deleted, overridden, query]\n    config:\n      - name: po160                                 # should be of the form po&lt;po-id&gt;\n        type: st_fex                                # choose from this list [pc, vpc, sub_int, lo, eth, svi, st_fex, aa_fex]\n        switch:\n          - \"{{ ansible_switch1 }}\"                 # provide the switch information where the config is to be deployed\n          - \"{{ ansible_switch2 }}\"                 # provide the switch information where the config is to be deployed\n        deploy: true                                # choose from [true, false]\n        profile:\n          members:                                  # optional, member interfaces, default is []\n            - e1/11\n          mtu: \"default\"                            # optional, MTU for the interface, default is \"jumbo\"\n          po_description: \"PC 160 for ST FEX - REP\" # optional, description of PC interface, default is \"\"\n          cmds:                                     # optional, freeform config, default is []\n            - ip arp inspection trust\n          admin_state: false                        # Flag to enable/disable FEX interface.\n          enable_netflow: false                     # optional, flag to enable netflow, default is false\n          mode: port_channel_st                     # choose from [port_channel_st], default is \"port_channel_st\"\n\n- name: Delete ST FEX interfaces\n  cisco.dcnm.dcnm_interface:\n    check_deploy: True\n    fabric: \"{{ ansible_svi_fabric }}\"\n    state: deleted                        # only choose form [merged, replaced, deleted, overridden, query]\n    config:\n      - name: po159                       # should be of the form po&lt;po-id&gt;\n        switch:\n          - \"{{ ansible_switch1 }}\"       # provide the switch where to deploy the config\n          - \"{{ ansible_switch2 }}\"       # provide the switch where to deploy the config\n\n- name: Overide ST FEX interface with a new one\n  cisco.dcnm.dcnm_interface:\n    check_deploy: true\n    fabric: \"{{ ansible_svi_fabric }}\"\n    state: overridden                               # only choose form [merged, replaced, deleted, overridden, query]\n    config:\n      - name: po151                                 # should be of the form po&lt;po-id&gt;\n        type: st_fex                                # choose from this list [pc, vpc, sub_int, lo, eth, svi, st_fex, aa_fex]\n        switch:\n          - \"{{ ansible_switch1 }}\"                 # provide the switch information where the config is to be deployed\n        deploy: true                                # choose from [true, false]\n        profile:\n          description: \"ST FEX interface 151\"       # optional, description of FEX interface, default is \"\"\n          members:                                  # optional, member interfaces, default is []\n            - e1/10\n          mtu: \"jumbo\"                              # optional, MTU for the interface, default is \"jumbo\"\n          po_description: \"PC 151 for ST FEX\"       # optional, description of PC interface, default is \"\"\n          cmds:                                     # optional, freeform config, default is []\n            - no shutdown\n          admin_state: true                         # Flag to enable/disable FEX interface.\n          enable_netflow: false                     # optional, flag to enable netflow, default is false\n          mode: port_channel_st                     # choose from [port_channel_st], default is \"port_channel_st\"\n\n# QUERY\n\n- name: Query interface details\n  cisco.dcnm.dcnm_interface:\n    fabric: mmudigon-fabric\n    state: query            # only choose from [merged, replaced, deleted, overridden, query]\n    config:\n      - switch:\n          - \"192.172.1.1\"\n      - name: po350\n        switch:\n          - \"192.172.1.1\"\n      - name: lo450\n        switch:\n          - \"192.172.1.1\"\n      - name: eth1/1\n        switch:\n          - \"192.172.1.1\"\n      - name: eth1/15.2\n        switch:\n          - \"192.172.1.1\"\n      - name: vpc750\n        switch:\n          - \"192.172.1.1\"\n</code></pre>"},{"location":"modules/dcnm_inventory/","title":"dcnm_inventory","text":"Details <ul> <li>author<ul> <li>Karthik Babu Harichandra Babu(@kharicha), Praveen Ramoorthy(@praveenramoorthy)</li> </ul> </li> <li>description<ul> <li>Add and remove Switches from a DCNM managed VXLAN fabric.</li> </ul> </li> <li>short_description<ul> <li>Add and remove Switches from a DCNM managed VXLAN fabric.</li> </ul> </li> <li>version_added<ul> <li>0.9.0</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#options","title":"options","text":"Details"},{"location":"modules/dcnm_inventory/#config","title":"config","text":"Details <ul> <li>description<ul> <li>List of switches being managed. Not required for state deleted</li> </ul> </li> <li>elements<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#auth_proto","title":"auth_proto","text":"Details <ul> <li>choices<ul> <li>MD5</li> <li>SHA</li> <li>MD5_DES</li> <li>MD5_AES</li> <li>SHA_DES</li> <li>SHA_AES</li> </ul> </li> <li>default<ul> <li>MD5</li> </ul> </li> <li>description<ul> <li>Name of the authentication protocol to be used. </li> <li>For POAP and RMA configurations authentication protocol should be I(MD5).</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#max_hops","title":"max_hops","text":"Details <ul> <li>default<ul> <li>0</li> </ul> </li> <li>description<ul> <li>Maximum Hops to reach the switch. </li> <li>This parameter is deprecated(as on 2024-03-06) </li> <li>Defaults to 0 irrespective of configured value.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#password","title":"password","text":"Details <ul> <li>description<ul> <li>Login password to the switch</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#poap","title":"poap","text":"Details <ul> <li>description<ul> <li>Configurations of switch to Bootstrap/Pre-provision. </li> <li>Please note that POAP and DHCP configurations needs to enabled in fabric configuration before adding/preprovisioning switches through POAP. </li> <li>Idempotence checks against inventory is only for B(IP Address) for Preprovision configs. </li> <li>Idempotence checks against inventory is only for B(IP Address) and B(Serial Number) for Bootstrap configs.</li> </ul> </li> <li>elements<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#config_data","title":"config_data","text":"Details <ul> <li>description<ul> <li>Basic config data of switch to Bootstrap/Pre-provision. </li> <li>C(modulesModel) and C(gateway) are mandatory. </li> <li>C(modulesModel) is list of model of modules in switch to Bootstrap/Pre-provision. </li> <li>C(gateway) is the gateway IP with mask for the switch to Bootstrap/Pre-provision. </li> <li>For other supported config data please refer to NDFC/DCNM configuration guide.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#discovery_password","title":"discovery_password","text":"Details <ul> <li>description<ul> <li>Password for device discovery during POAP and RMA discovery</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#discovery_username","title":"discovery_username","text":"Details <ul> <li>description<ul> <li>Username for device discovery during POAP and RMA discovery</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#hostname","title":"hostname","text":"Details <ul> <li>description<ul> <li>Hostname of switch to Bootstrap/Pre-provision.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#image_policy","title":"image_policy","text":"Details <ul> <li>description<ul> <li>Name of the image policy to be applied on switch during Bootstrap/Pre-provision.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#model","title":"model","text":"Details <ul> <li>description<ul> <li>Model of switch to Bootstrap/Pre-provision.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#preprovision_serial","title":"preprovision_serial","text":"Details <ul> <li>description<ul> <li>Serial number of switch to Pre-provision. </li> <li>When C(preprovision_serial) is provided along with C(serial_number), then the Preprovisioned switch(with serial number as in C(preprovision_serial)) will be swapped with a actual switch(with serial number in C(serial_number)) through bootstrap. </li> <li>Swap feature is supported only on NDFC and is not supported on DCNM 11.x versions.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#serial_number","title":"serial_number","text":"Details <ul> <li>description<ul> <li>Serial number of switch to Bootstrap. </li> <li>When C(preprovision_serial) is provided along with C(serial_number), then the Preprovisioned switch(with serial number as in C(preprovision_serial)) will be swapped with a actual switch(with serial number in C(serial_number)) through bootstrap. </li> <li>Swap feature is supported only on NDFC and is not supported on DCNM 11.x versions.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#version","title":"version","text":"Details <ul> <li>description<ul> <li>Software version of switch to Bootstrap/Pre-provision.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#preserve_config","title":"preserve_config","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Set this to false for greenfield deployment and true for brownfield deployment</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#rma","title":"rma","text":"Details <ul> <li>description<ul> <li>RMA an existing switch with a new one </li> <li>Please note that the existing switch should be configured and deployed in maintenance mode </li> <li>Please note that the existing switch being replaced should be shutdown state or out of network</li> </ul> </li> <li>elements<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#config_data_1","title":"config_data","text":"Details <ul> <li>description<ul> <li>Basic config data of switch to Bootstrap for RMA. </li> <li>C(modulesModel) and C(gateway) are mandatory. </li> <li>C(modulesModel) is list of model of modules in switch to Bootstrap for RMA. </li> <li>C(gateway) is the gateway IP with mask for the switch to Bootstrap for RMA. </li> <li>For other supported config data please refer to NDFC/DCNM configuration guide.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#discovery_password_1","title":"discovery_password","text":"Details <ul> <li>description<ul> <li>Password for device discovery during POAP and RMA discovery</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#discovery_username_1","title":"discovery_username","text":"Details <ul> <li>description<ul> <li>Username for device discovery during POAP and RMA discovery</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#image_policy_1","title":"image_policy","text":"Details <ul> <li>description<ul> <li>Name of the image policy to be applied on switch during Bootstrap for RMA.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#model_1","title":"model","text":"Details <ul> <li>description<ul> <li>Model of switch to Bootstrap for RMA.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#old_serial","title":"old_serial","text":"Details <ul> <li>description<ul> <li>Serial number of switch to be replaced by RMA.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#serial_number_1","title":"serial_number","text":"Details <ul> <li>description<ul> <li>Serial number of switch to Bootstrap for RMA.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#version_1","title":"version","text":"Details <ul> <li>description<ul> <li>Software version of switch to Bootstrap for RMA.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#role","title":"role","text":"Details <ul> <li>choices<ul> <li>leaf</li> <li>spine</li> <li>border</li> <li>border_spine</li> <li>border_gateway</li> <li>border_gateway_spine</li> <li>super_spine</li> <li>border_super_spine</li> <li>border_gateway_super_spine</li> <li>access</li> <li>aggregation</li> <li>edge_router</li> <li>core_router</li> <li>tor</li> </ul> </li> <li>default<ul> <li>leaf</li> </ul> </li> <li>description<ul> <li>Role which needs to be assigned to the switch</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#seed_ip","title":"seed_ip","text":"Details <ul> <li>description<ul> <li>Seed Name(support both IP address and dns_name) of the switch which needs to be added to the DCNM Fabric</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#user_name","title":"user_name","text":"Details <ul> <li>description<ul> <li>Login username to the switch. </li> <li>For POAP and RMA configurations username should be I(admin)</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#deploy","title":"deploy","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Deploy the pending configuration of the fabric after inventory is updated</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#fabric","title":"fabric","text":"Details <ul> <li>description<ul> <li>Name of the target fabric for Inventory operations</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#query_poap","title":"query_poap","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Query for Bootstrap(POAP) capable switches available.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#save","title":"save","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Save/Recalculate the configuration of the fabric after the inventory is updated</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#state","title":"state","text":"Details <ul> <li>choices<ul> <li>merged</li> <li>overridden</li> <li>deleted</li> <li>query</li> </ul> </li> <li>default<ul> <li>merged</li> </ul> </li> <li>description<ul> <li>The state of DCNM after module completion. </li> <li>I(merged) and I(query) are the only states supported for POAP. </li> <li>I(merged) is the only state supported for RMA.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_inventory/#examples","title":"Examples","text":"Details <pre><code>---\n# This module supports the following states:\n#\n# Merged:\n#   Switches defined in the playbook will be merged into the target fabric.\n#     - If the switch does not exist it will be added.\n#     - Switches that are not specified in the playbook will be untouched.\n#\n# Overridden:\n#   The playbook will serve as source of truth for the target fabric.\n#     - If the switch does not exist it will be added.\n#     - If the switch is not defined in the playbook but exists in DCNM it will be removed.\n#     - If the switch exists, properties that need to be modified and can be modified will be modified.\n#\n# Deleted:\n#   Deletes the list of switches specified in the playbook.\n#   If no switches are provided in the playbook, all the switches present on that DCNM fabric will be deleted.\n#\n# Query:\n#   Returns the current DCNM state for the switches listed in the playbook.\n\n\n# The following two switches will be merged into the existing fabric\n- name: Merge switch into fabric\n  cisco.dcnm.dcnm_inventory:\n    fabric: vxlan-fabric\n    state: merged # merged / deleted / overridden / query\n    config:\n    - seed_ip: 192.168.0.1\n      auth_proto: MD5 # choose from [MD5, SHA, MD5_DES, MD5_AES, SHA_DES, SHA_AES]\n      user_name: switch_username\n      password: switch_password\n      max_hops: 0\n      role: spine\n      preserve_config: False # boolean, default is  true\n    - seed_ip: 192.168.0.2\n      auth_proto: MD5 # choose from [MD5, SHA, MD5_DES, MD5_AES, SHA_DES, SHA_AES]\n      user_name: switch_username\n      password: switch_password\n      max_hops: 0\n      role: leaf\n      preserve_config: False # boolean, default is true\n\n# The following two switches will be added or updated in the existing fabric and all other\n# switches will be removed from the fabric\n- name: Override Switch\n  cisco.dcnm.dcnm_inventory:\n    fabric: vxlan-fabric\n    state: overridden # merged / deleted / overridden / query\n    config:\n    - seed_ip: 192.168.0.1\n      auth_proto: MD5 # choose from [MD5, SHA, MD5_DES, MD5_AES, SHA_DES, SHA_AES]\n      user_name: switch_username\n      password: switch_password\n      max_hops: 0\n      role: spine\n      preserve_config: False # boolean, default is  true\n    - seed_ip: 192.168.0.2\n      auth_proto: MD5 # choose from [MD5, SHA, MD5_DES, MD5_AES, SHA_DES, SHA_AES]\n      user_name: switch_username\n      password: switch_password\n      max_hops: 0\n      role: leaf\n      preserve_config: False # boolean, default is true\n\n# The following two switches will be deleted in the existing fabric\n- name: Delete selected switches\n  cisco.dcnm.dcnm_inventory:\n    fabric: vxlan-fabric\n    state: deleted # merged / deleted / overridden / query\n    config:\n    - seed_ip: 192.168.0.1\n    - seed_ip: 192.168.0.2\n\n# All the switches will be deleted in the existing fabric\n- name: Delete all the switches\n  cisco.dcnm.dcnm_inventory:\n    fabric: vxlan-fabric\n    state: deleted # merged / deleted / overridden / query\n\n# The following two switches information will be queried in the existing fabric\n- name: Query switch into fabric\n  cisco.dcnm.dcnm_inventory:\n    fabric: vxlan-fabric\n    state: query # merged / deleted / overridden / query\n    config:\n    - seed_ip: 192.168.0.1\n      role: spine\n    - seed_ip: 192.168.0.2\n      role: leaf\n\n# All the existing switches will be queried in the existing fabric\n- name: Query all the switches in the fabric\n  cisco.dcnm.dcnm_inventory:\n    fabric: vxlan-fabric\n    state: query # merged / deleted / overridden / query\n\n# The following task will enable Bootstrap and DHCP on an existing fabric.\n# Please note that only bootstrap and DHCP configs are present in the below example.\n# You have to add other existing fabric configs to the task.\n- name: Bootstrap and DHCP Configuration\n  cisco.dcnm.dcnm_rest:\n    method: PUT\n    path: /appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics/vxlan-fabric\n    json_data: '{\"fabricId\": \"FABRIC-7\",\"fabricName\": \"vxlan-fabric\",\"id\": 7,\"nvPairs\":{...,\"BOOTSTRAP_ENABLE\": true,\"DHCP_ENABLE\": true,\"DHCP_IPV6_ENABLE\": \"DHCPv4\",\"DHCP_START\": \"192.168.1.10\", \"DHCP_END\": \"192.168.1.20\",\"MGMT_GW\": \"192.168.123.1\",\"MGMT_PREFIX\": \"24\",...},\"templateName\": \"Easy_Fabric\"}' # noqa\n\n# The following switch will be Bootstrapped and merged into the existing fabric\n- name: Poap switch Configuration\n  cisco.dcnm.dcnm_inventory:\n    fabric: vxlan-fabric\n    state: merged # Only 2 options supported merged/query for poap config\n    config:\n    # All the values below are mandatory if poap configuration is being done - state is merged\n    - seed_ip: 192.168.0.5\n      user_name: switch_username\n      password: switch_password\n      role: border_gateway\n      poap:\n        - serial_number: 2A3BCDEFJKL\n          model: 'N9K-C9300v'\n          version: '9.3(7)'\n          hostname: 'POAP_SWITCH'\n          image_policy: \"poap_image_policy\"\n          config_data:\n            modulesModel: [N9K-X9364v, N9K-vSUP]\n            gateway: 192.168.0.1/24\n\n# The following switch will be Pre-provisioned and merged into the existing fabric\n- name: Pre-provision switch Configuration\n  cisco.dcnm.dcnm_inventory:\n    fabric: vxlan-fabric\n    state: merged # Only 2 options supported merged/query for poap config\n    config:\n    # All the values below are mandatory if poap configuration is being done - state is merged\n    - seed_ip: 192.168.0.4\n      user_name: switch_username\n      password: switch_password\n      role: border\n      poap:\n        - preprovision_serial: 1A2BCDEFGHI\n          model: 'N9K-C9300v'\n          version: '9.3(7)'\n          hostname: 'PREPRO_SWITCH'\n          image_policy: \"prepro_image_policy\"\n          config_data:\n            modulesModel: [N9K-X9364v, N9K-vSUP]\n            gateway: 192.168.0.1/24\n\n- name: Poap, Pre-provision and existing switch Configuration\n  cisco.dcnm.dcnm_inventory:\n    fabric: vxlan-fabric\n    state: merged # Only 2 options supported merged/query for poap config\n    config:\n    - seed_ip: 192.168.0.2\n      user_name: switch_username\n      password: switch_password\n      role: border_gateway\n      poap:\n        - serial_number: 2A3BCDEFGHI\n          model: 'N9K-C9300v'\n          version: '9.3(7)'\n          hostname: 'POAP_SWITCH'\n          image_policy: \"poap_image_policy\"\n          config_data:\n            modulesModel: [N9K-X9364v, N9K-vSUP]\n            gateway: 192.168.0.1/24\n    - seed_ip: 192.168.0.3\n      user_name: switch_username\n      password: switch_password\n      auth_proto: MD5\n      max_hops: 0\n      preserve_config: False\n      role: spine\n    - seed_ip: 192.168.0.4\n      user_name: switch_username\n      password: switch_password\n      role: border\n      poap:\n        - preprovision_serial: 1A2BCDEFGHI\n          model: 'N9K-C9300v'\n          version: '9.3(7)'\n          hostname: 'PREPRO_SWITCH'\n          image_policy: \"prepro_image_policy\"\n          config_data:\n            modulesModel: [N9K-X9364v, N9K-vSUP]\n            gateway: 192.168.0.1/24\n\n# The following pre-provisioned switch will be swapped with actual switch in the existing fabric\n# No Need to provide any other parameters for swap operation as bootstrap will inherit the preprovision configs\n# If other parameters are provided it will be overidden with preprovision switch configs\n# This swap feature is supported only in NDFC and not on DCNM 11.x versions\n- name: Pre-provision switch Configuration\n  cisco.dcnm.dcnm_inventory:\n    fabric: vxlan-fabric\n    state: merged # Only 2 options supported merged/query for poap config\n    config:\n    # All the values below are mandatory if poap configuration is being done - state is merged\n    - seed_ip: 192.168.0.4\n      user_name: switch_username\n      password: switch_password\n      role: border\n      poap:\n        - preprovision_serial: 1A2BCDEFGHI\n          serial_number: 2A3BCDEFGHI\n\n# All the existing switches along with available Bootstrap(POAP)\n# will be queried in the existing fabric\n- name: Query all the switches in the fabric\n  cisco.dcnm.dcnm_inventory:\n    fabric: vxlan-fabric\n    state: query # merged / query\n    query_poap: True\n\n# The following switch which is part of fabric will be replaced with a new switch\n# with same configurations through RMA.\n# Please note that the existing switch should be configured in maintenance mode and in shutdown state\n- name: RMA switch Configuration\n  cisco.dcnm.dcnm_inventory:\n    fabric: vxlan-fabric\n    state: merged # Only merged is supported for rma config\n    config:\n    - seed_ip: 192.168.0.4\n      user_name: switch_username\n      password: switch_password\n      rma:\n        - serial_number: 2A3BCDEFJKL\n          old_serial: 2A3BCDEFGHI\n          model: 'N9K-C9300v'\n          version: '9.3(7)'\n          image_policy: \"rma_image_policy\"\n          config_data:\n            modulesModel: [N9K-X9364v, N9K-vSUP]\n            gateway: 192.168.0.1/24\n</code></pre>"},{"location":"modules/dcnm_links/","title":"dcnm_links","text":"Details <ul> <li>author<ul> <li>Mallik Mudigonda (@mmudigon)</li> </ul> </li> <li>description<ul> <li>DCNM ansible module for creating, modifying, deleting and querying Links</li> </ul> </li> <li>short_description<ul> <li>DCNM ansible module for managing Links.</li> </ul> </li> <li>version_added<ul> <li>2.1.0</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#options","title":"options","text":"Details"},{"location":"modules/dcnm_links/#config","title":"config","text":"Details <ul> <li>default<ul> <li>[]</li> </ul> </li> <li>description<ul> <li>A list of dictionaries containing Links information.</li> </ul> </li> <li>elements<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#dst_device","title":"dst_device","text":"Details <ul> <li>description<ul> <li>IP address or DNS name of the destination switch which is part of the link being configured.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#dst_fabric","title":"dst_fabric","text":"Details <ul> <li>description<ul> <li>Name of the destination fabric. If this is same as 'src_fabric' then the link is considered intra-fabric link. If this parameter is different from 'src_fabric', then the link is considered inter-fabric link.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#dst_interface","title":"dst_interface","text":"Details <ul> <li>description<ul> <li>Interface on the destination device which is part of the link being configured.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#profile","title":"profile","text":"Details <ul> <li>description<ul> <li>Additional link related parameters that must be included while creating links.</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#admin_state","title":"admin_state","text":"Details <ul> <li>description<ul> <li>Admin state of the link. </li> <li>This parameter is not required if template is 'ext_evpn_multisite_overlay_setup', 'ext_multisite_underlay_setup', and 'ext_fabric_setup'.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#auto_deploy","title":"auto_deploy","text":"Details <ul> <li>description<ul> <li>Flag that controls auto generation of neighbor VRF Lite configuration for managed neighbor devices. </li> <li>This parameter is required only if template is 'ext_fabric_setup'.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#bgp_multihop","title":"bgp_multihop","text":"Details <ul> <li>default<ul> <li>5</li> </ul> </li> <li>description<ul> <li>eBGP Time-To-Live Value for Remote Peer. </li> <li>This parameter is required only if template is 'ext_evpn_multisite_overlay_setup'.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#dci_routing_proto","title":"dci_routing_proto","text":"Details <ul> <li>choices<ul> <li>is-is</li> <li>ospf</li> </ul> </li> <li>default<ul> <li>is-is</li> </ul> </li> <li>description<ul> <li>Routing protocol used on the DCI MPLS link </li> <li>This parameter is applicable only if template is <code>ext_vxlan_mpls_underlay_setup</code> and <code>mpls_fabric</code> is <code>SR</code></li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#dci_routing_tag","title":"dci_routing_tag","text":"Details <ul> <li>default<ul> <li>MPLS_UNDERLAY</li> </ul> </li> <li>description<ul> <li>Routing Process Tag of DCI Underlay </li> <li>This parameter is applicable only if template is <code>ext_vxlan_mpls_underlay_setup</code></li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#deploy_dci_tracking","title":"deploy_dci_tracking","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Flag to enable deploy DCI tracking. </li> <li>This parameter is required only if template is 'ext_multisite_underlay_setup'. </li> <li>This parameter MUST be included only if the fabrics are part of multisite.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#dst_asn","title":"dst_asn","text":"Details <ul> <li>description<ul> <li>BGP ASN number on the destination fabric. </li> <li>Required for below templates </li> <li>ext_fabric_setup </li> <li>ext_multisite_underlay_setup </li> <li>ext_evpn_multisite_overlay_setup </li> <li>ext_vxlan_mpls_overlay_setup</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#ebgp_auth_key_type","title":"ebgp_auth_key_type","text":"Details <ul> <li>choices<ul> <li>3</li> <li>7</li> </ul> </li> <li>description<ul> <li>BGP Key Encryption Type. </li> <li>This parameter is required only if template is 'ext_multisite_underlay_setup' or 'ext_evpn_multisite_overlay_setup'. </li> <li>This parameter is required only if inherit_from_msd is false. </li> <li>Choices are 3 (3DES) or 7 (Cisco)</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#ebgp_password","title":"ebgp_password","text":"Details <ul> <li>description<ul> <li>Encrypted eBGP Password Hex String. </li> <li>This parameter is required only if template is 'ext_multisite_underlay_setup' or 'ext_evpn_multisite_overlay_setup'. </li> <li>This parameter is required only if inherit_from_msd is false.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#ebgp_password_enable","title":"ebgp_password_enable","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Flag to enable eBGP password. </li> <li>This parameter is required only if template is 'ext_multisite_underlay_setup' or 'ext_evpn_multisite_overlay_setup'.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#enable_macsec","title":"enable_macsec","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable MACsec on the link. </li> <li>This parameter is applicable only if MACsec feature is enabled on the fabric. </li> <li>This parameter is applicable only if template is 'int_intra_fabric_ipv6_link_local' or 'int_intra_fabric_num_link' or 'int_intra_fabric_unnum_link'.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#global_block_range","title":"global_block_range","text":"Details <ul> <li>default<ul> <li>16000-23999</li> </ul> </li> <li>description<ul> <li>For Segment Routing binding </li> <li>This parameter is applicable only if template is <code>ext_vxlan_mpls_underlay_setup</code> and <code>mpls_fabric</code> is <code>SR</code></li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#inherit_from_msd","title":"inherit_from_msd","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Flag indicating whether to inherit BGP password from MSD information. </li> <li>Applicable only when source and destination fabric are in the same MSD fabric. </li> <li>This parameter is required only if template is 'ext_multisite_underlay_setup' or 'ext_evpn_multisite_overlay_setup'</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#intf_vrf","title":"intf_vrf","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Name of the non-default VRF for the link. </li> <li>Make sure to configure the VRF before using it here. </li> <li>This parameter is applicable only if template is 'int_intra_vpc_peer_keep_alive_link'.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#ipv4_address","title":"ipv4_address","text":"Details <ul> <li>description<ul> <li>IPV4 address of the source interface without mask. </li> <li>This parameter is required only if template is 'ext_evpn_multisite_overlay_setup'.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#ipv4_subnet","title":"ipv4_subnet","text":"Details <ul> <li>description<ul> <li>IPV4 address of the source interface with mask. </li> <li>Required for below templates </li> <li>ext_fabric_setup </li> <li>ext_multisite_underlay_setup</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#max_paths","title":"max_paths","text":"Details <ul> <li>default<ul> <li>1</li> </ul> </li> <li>description<ul> <li>Maximum number of iBGP/eBGP paths. </li> <li>This parameter is required only if template is 'ext_multisite_underlay_setup'.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#mpls_fabric","title":"mpls_fabric","text":"Details <ul> <li>choices<ul> <li>SR</li> <li>LDP</li> </ul> </li> <li>default<ul> <li>SR</li> </ul> </li> <li>description<ul> <li>MPLS LDP or Segment-Routing </li> <li>This parameter is applicable only if template is <code>ext_vxlan_mpls_underlay_setup</code>.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#mtu","title":"mtu","text":"Details <ul> <li>description<ul> <li>MTU of the link. </li> <li>This parameter is optional if template is 'ios_xe_int_intra_fabric_num_link'. The default value in this case will be 1500. </li> <li>This parameter is not required if template is 'ext_evpn_multisite_overlay_setup'.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#neighbor_ip","title":"neighbor_ip","text":"Details <ul> <li>description<ul> <li>IPV4 address of the neighbor switch on the destination fabric. </li> <li>Required for below templates </li> <li>ext_fabric_setup </li> <li>ext_multisite_underlay_setup </li> <li>ext_evpn_multisite_overlay_setup </li> <li>ext_vxlan_mpls_underlay_setup </li> <li>ext_vxlan_mpls_overlay_setup</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#ospf_area_id","title":"ospf_area_id","text":"Details <ul> <li>default<ul> <li>0.0.0.0</li> </ul> </li> <li>description<ul> <li>OSPF Area ID in IP address format </li> <li>This parameter is applicable only if template is <code>ext_vxlan_mpls_underlay_setup</code> and <code>dci_routing_proto</code> is <code>ospf</code></li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#peer1_bfd_echo_disable","title":"peer1_bfd_echo_disable","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable BFD echo on the source interface. Only applicable if BFD is enabled on the fabric. </li> <li>This parameter is applicable only if template is 'int_intra_fabric_num_link'.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#peer1_cmds","title":"peer1_cmds","text":"Details <ul> <li>default<ul> <li>[]</li> </ul> </li> <li>description<ul> <li>Commands to be included in the configuration under the source interface. </li> <li>This parameter is not required if template is  'ext_evpn_multisite_overlay_setup'.</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#peer1_description","title":"peer1_description","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Description of the source interface. </li> <li>This parameter is not required if template is 'ext_evpn_multisite_overlay_setup'.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#peer1_ipv4_address","title":"peer1_ipv4_address","text":"Details <ul> <li>description<ul> <li>IPV4 address of the source interface. </li> <li>This parameter is optional if the underlying fabric is ipv6 enabled. </li> <li>This parameter is required only if template is 'int_intra_fabric_num_link' or 'ios_xe_int_intra_fabric_num_link' or 'int_intra_vpc_peer_keep_alive_link'.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#peer1_ipv6_address","title":"peer1_ipv6_address","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>IPV6 address of the source interface. </li> <li>This parameter is required only if the underlying fabric is ipv6 enabled. </li> <li>This parameter is required only if template is 'int_intra_fabric_num_link' or 'ios_xe_int_intra_fabric_num_link' or 'int_intra_vpc_peer_keep_alive_link'.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#peer1_sr_mpls_index","title":"peer1_sr_mpls_index","text":"Details <ul> <li>default<ul> <li>0</li> </ul> </li> <li>description<ul> <li>Unique SR SID index for the source border </li> <li>This parameter is applicable only if template is <code>ext_vxlan_mpls_underlay_setup</code> and <code>mpls_fabric</code> is <code>SR</code></li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#peer2_bfd_echo_disable","title":"peer2_bfd_echo_disable","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable BFD echo on the destination interface. Only applicable if BFD is enabled on the fabric. </li> <li>This parameter is applicable only if template is 'int_intra_fabric_num_link'.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#peer2_cmds","title":"peer2_cmds","text":"Details <ul> <li>default<ul> <li>[]</li> </ul> </li> <li>description<ul> <li>Commands to be included in the configuration under the destination interface. </li> <li>This parameter is not required if template is 'ext_evpn_multisite_overlay_setup'.</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#peer2_description","title":"peer2_description","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Description of the destination interface. </li> <li>This parameter is not required if template is 'ext_evpn_multisite_overlay_setup'.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#peer2_ipv4_address","title":"peer2_ipv4_address","text":"Details <ul> <li>description<ul> <li>IPV4 address of the destination interface. </li> <li>This parameter is optional if the underlying fabric is ipv6 enabled. </li> <li>This parameter is required only if template is 'int_intra_fabric_num_link' or 'ios_xe_int_intra_fabric_num_link' or 'int_intra_vpc_peer_keep_alive_link'.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#peer2_ipv6_address","title":"peer2_ipv6_address","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>IPV6 address of the destination interface. </li> <li>This parameter is required only if the underlying fabric is ipv6 enabled. </li> <li>This parameter is required only if template is 'int_intra_fabric_num_link' or 'ios_xe_int_intra_fabric_num_link' or 'int_intra_vpc_peer_keep_alive_link'.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#peer2_sr_mpls_index","title":"peer2_sr_mpls_index","text":"Details <ul> <li>default<ul> <li>0</li> </ul> </li> <li>description<ul> <li>Unique SR SID index for the destination border </li> <li>This parameter is applicable only if template is <code>ext_vxlan_mpls_underlay_setup</code> and <code>mpls_fabric</code> is <code>SR</code></li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#route_tag","title":"route_tag","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Routing tag associated with interface IP. </li> <li>This parameter is required only if template is 'ext_multisite_underlay_setup'</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#src_asn","title":"src_asn","text":"Details <ul> <li>description<ul> <li>BGP ASN number on the source fabric. </li> <li>Required for below templates </li> <li>ext_fabric_setup </li> <li>ext_multisite_underlay_setup </li> <li>ext_evpn_multisite_overlay_setup </li> <li>ext_vxlan_mpls_overlay_setup</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#trm_enabled","title":"trm_enabled","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Flag to enable Tenant Routed Multicast. </li> <li>This parameter is required only if template is 'ext_evpn_multisite_overlay_setup'.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#src_device","title":"src_device","text":"Details <ul> <li>description<ul> <li>IP address or DNS name of the source switch which is part of the link being configured.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#src_interface","title":"src_interface","text":"Details <ul> <li>description<ul> <li>Interface on the source device which is part of the link being configured.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#template","title":"template","text":"Details <ul> <li>choices<ul> <li>int_intra_fabric_ipv6_link_local(intra-fabric)</li> <li>int_intra_fabric_num_link (intra-fabric)</li> <li>int_intra_fabric_unnum_link (intra-fabric)</li> <li>int_intra_vpc_peer_keep_alive_link (intra-fabric)</li> <li>int_pre_provision_intra_fabric_link (intra-fabric)</li> <li>ios_xe_int_intra_fabric_num_link (intra-fabric)</li> <li>ext_fabric_setup (inter-fabric)</li> <li>ext_multisite_underlay_setup (inter-fabric)</li> <li>ext_evpn_multisite_overlay_setup (inter-fabric)</li> </ul> </li> <li>description<ul> <li>Name of the template that is applied on the link being configured. </li> <li>The last 3 template choices are applicable for inter-fabric links and the others are applicable for intra-fabric links. </li> <li>This parameter is required only for 'merged' and 'replaced' states. It is </li> <li>optional for other states.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#deploy","title":"deploy","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Flag to control deployment of links. If set to 'true' then the links included will be deployed to specified switches. If set to 'false', the links will be created but not deployed. </li> <li>Setting this flag to 'true' will result in all pending configurations on the source and destination devices to be deployed.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#src_fabric","title":"src_fabric","text":"Details <ul> <li>description<ul> <li>Name of the source fabric for links operations.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#state","title":"state","text":"Details <ul> <li>choices<ul> <li>merged</li> <li>replaced</li> <li>deleted</li> <li>query</li> </ul> </li> <li>default<ul> <li>merged</li> </ul> </li> <li>description<ul> <li>The required state of the configuration after module completion.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_links/#examples","title":"Examples","text":"Details <pre><code>---\n\n# States:\n# This module supports the following states:\n#\n# Merged:\n#   Links defined in the playbook will be merged into the target fabric.\n#\n#   The links listed in the playbook will be created if not already present on the DCNM\n#   server. If the link is already present and the configuration information included\n#   in the playbook is either different or not present in DCNM, then the corresponding\n#   information is added to the link on DCNM. If a link mentioned in playbook\n#   is already present on DCNM and there is no difference in configuration, no operation\n#   will be performed for such link.\n#\n# Replaced:\n#   Links defined in the playbook will be replaced in the target fabric.\n#\n#   The state of the links listed in the playbook will serve as source of truth for the\n#   same links present on the DCNM under the fabric mentioned. Additions and updations\n#   will be done to bring the DCNM links to the state listed in the playbook.\n#   Note: Replace will only work on the links mentioned in the playbook.\n#\n# Deleted:\n#   Links defined in the playbook will be deleted in the target fabric.\n#\n#   WARNING: Deleting a Link will deploy all pending configurations on the impacted switches\n#\n# Query:\n#   Returns the current DCNM state for the links listed in the playbook. Information included\n#    in the playbook will be used as filters to get the desired output.\n#\n# CREATE LINKS\n#\n# NUMBERED FABRIC\n#\n# INTRA-FABRIC\n\n    - name: Create Links\n      cisco.dcnm.dcnm_links:\n        state: merged                                            # choose from [merged, replaced, deleted, query]\n        src_fabric: \"ansible_num_fabric\"\n        config:\n          - dst_fabric: \"ansible_num_fabric\"                     # Destination fabric\n            src_interface: \"Ethernet1/1\"                         # Interface on the Source fabric\n            dst_interface: \"Ethernet1/1\"                         # Interface on the Destination fabric\n            src_device: 193.168.1.1                              # Device on the Source fabric\n            dst_device: 193.168.1.2                              # Device on the Destination fabric\n            template: int_intra_fabric_num_link                  # template to be applied, choose from\n                                                                 #   [ int_intra_fabric_ipv6_link_local, int_intra_fabric_num_link,\n                                                                 #     int_intra_fabric_unnum_link, int_intra_vpc_peer_keep_alive_link,\n                                                                 #     int_pre_provision_intra_fabric_link, ios_xe_int_intra_fabric_num_link ]\n\n            profile:\n              peer1_ipv4_addr: 192.168.1.1                       # IP address of the Source interface\n              peer2_ipv4_addr: 192.168.1.2                       # IP address of the Destination interface\n              admin_state: true                                  # choose from [true, false]\n              mtu: 9216                                          #\n              peer1_description: \"Description of source\"         # optional, default is \"\"\n              peer2_description: \"Description of dest\"           # optional, default is \"\"\n              peer1_bfd_echo_disable: false                      # optional, choose from [true, false]\n              peer2_bfd_echo_disable: false                      # optional, choose from [true, false]\n              enable_macsec: false                               # optional, choose from [true, false]\n              peer1_cmds:                                        # Freeform config for source device\n                - no shutdown                                    # optional, default is \"\"\n              peer2_cmds:                                        # Freeform config for destination device\n                - no shutdown                                    # optional, default is \"\"\n\n          - dst_fabric: \"ansible_num_fabric\"                     # Destination fabric\n            src_interface: \"Ethernet1/2\"                         # Interface on the Source fabric\n            dst_interface: \"Ethernet1/2\"                         # Interface on the Destination fabric\n            src_device: 193.168.1.1                              # Device on the Source fabric\n            dst_device: 193.168.1.2                              # Device on the Destination fabric\n            template: int_pre_provision_intra_fabric_link        # template to be applied, choose from\n                                                                 #   [ int_intra_fabric_ipv6_link_local, int_intra_fabric_num_link,\n                                                                 #     int_intra_fabric_unnum_link, int_intra_vpc_peer_keep_alive_link,\n                                                                 #     int_pre_provision_intra_fabric_link, ios_xe_int_intra_fabric_num_link ]\n          - dst_fabric: \"ansible_num_fabric\"                     # Destination fabric\n            src_interface: \"Ethernet1/3\"                         # Interface on the Source fabric\n            dst_interface: \"Ethernet1/3\"                         # Interface on the Destination fabric\n            src_device: 193.168.1.1                              # Device on the Source fabric\n            dst_device: 193.168.1.2                              # Device on the Destination fabric\n            template: ios_xe_int_intra_fabric_num_link           # template to be applied, choose from\n                                                                 #   [ int_intra_fabric_ipv6_link_local, int_intra_fabric_num_link,\n                                                                 #     int_intra_fabric_unnum_link, int_intra_vpc_peer_keep_alive_link,\n                                                                 #     int_pre_provision_intra_fabric_link, ios_xe_int_intra_fabric_num_link ]\n\n            profile:\n              peer1_ipv4_addr: 192.169.2.1                       # IPV4 address of the Source interface\n              peer2_ipv4_addr: 192.169.2.2                       # IPV4 address of the Destination interface\n              peer1_ipv6_addr: fe80:01::01                       # optional, default is \"\"\n              peer2_ipv6_addr: fe80:01::02                       # optional, default is \"\"\n              admin_state: true                                  # choose from [true, false]\n              mtu: 1500                                          # optional, default is 1500\n              peer1_description: \"Description of source\"         # optional, default is \"\"\n              peer2_description: \"Description of dest\"           # optional, default is \"\"\n              peer1_bfd_echo_disable: false                      # optional, choose from [true, false]\n              peer2_bfd_echo_disable: false                      # optional, choose from [true, false]\n              enable_macsec: false                               # optional, choose from [true, false]\n              peer1_cmds:                                        # Freeform config for source device\n                - no shutdown                                    # optional, default is \"\"\n              peer2_cmds:                                        # Freeform config for destination device\n                - no shutdown                                    # optional, default is \"\"\n#\n# INTER-FABRIC\n\n    - name: Create Links including optional parameters\n      cisco.dcnm.dcnm_links: &amp;links_merge_with_opt\n        state: merged                                            # choose from [merged, replaced, deleted, query]\n        src_fabric: \"{{ ansible_num_fabric }}\"\n        config:\n          - dst_fabric: \"{{ ansible_unnum_fabric }}\"             # Destination fabric\n            src_interface: \"{{ intf_1_3 }}\"                      # Interface on the Source fabric\n            dst_interface: \"{{ intf_1_3 }}\"                      # Interface on the Destination fabric\n            src_device: \"{{ ansible_num_switch1 }}\"              # Device on the Source fabric\n            dst_device: \"{{ ansible_unnum_switch1 }}\"            # Device on the Destination fabric\n            template: ext_fabric_setup                           # template to be applied, choose from\n                                                                 #   [ ext_fabric_setup, ext_multisite_underlay_setup,\n                                                                 #     ext_evpn_multisite_overlay_setup ]\n            profile:\n              ipv4_subnet: 193.168.1.1/24                        # IP address of interface in src fabric with mask\n              neighbor_ip: 193.168.1.2                           # IP address of the interface in dst fabric\n              src_asn: 1000                                      # BGP ASN in source fabric\n              dst_asn: 1001                                      # BGP ASN in destination fabric\n              mtu: 9216                                          #\n              auto_deploy: false                                 # optional, default is false\n                                                                 # Flag that controls auto generation of neighbor VRF Lite configuration\n              peer1_description: \"Description of source\"         # optional, default is \"\"\n              peer2_description: \"Description of dest\"           # optional, default is \"\"\n              peer1_cmds:                                        # Freeform config for source interface\n                - no shutdown                                    # optional, default is \"\"\n              peer2_cmds:                                        # Freeform config for destination interface\n                - no shutdown                                    # optional, default is \"\"\n\n          - dst_fabric: \"{{ ansible_unnum_fabric }}\"             # Destination fabric\n            src_interface: \"{{ intf_1_4 }}\"                      # Interface on the Source fabric\n            dst_interface: \"{{ intf_1_4 }}\"                      # Interface on the Destination fabric\n            src_device: \"{{ ansible_num_switch1 }}\"              # Device on the Source fabric\n            dst_device: \"{{ ansible_unnum_switch1 }}\"            # Device on the Destination fabric\n            template: ext_multisite_underlay_setup               # template to be applied, choose from\n                                                                 #   [ ext_fabric_setup, ext_multisite_underlay_setup,\n                                                                 #     ext_evpn_multisite_overlay_setup ]\n            profile:\n              ipv4_subnet: 193.168.2.1/24                        # IP address of interface in src fabric with mask\n              neighbor_ip: 193.168.2.2                           # IP address of the interface in dst fabric\n              src_asn: 1200                                      # BGP ASN in source fabric\n              dst_asn: 1201                                      # BGP ASN in destination fabric\n              mtu: 9216                                          #\n              deploy_dci_tracking: false                         # optional, default is false\n              max_paths: 1                                       # optional, default is 1\n              route_tag: 12345                                   # optional, optional is \"\"\n              ebgp_password_enable: true                         # optional, default is true\n              ebgp_password: 0102030405                          # optional, required only if ebgp_password_enable flag is true, and inherit_from_msd\n                                                                 # is false.\n              inherit_from_msd: True                             # optional, required only if ebgp_password_enable flag is true, default is false\n              ebgp_auth_key_type: 3                              # optional, required only if ebpg_password_enable is true, and inherit_from_msd\n                                                                 # is false. Default is 3\n                                                                 # choose from [3 - 3DES, 7 - Cisco ]\n              peer1_description: \"Description of source\"         # optional, default is \"\"\n              peer2_description: \"Description of dest\"           # optional, default is \"\"\n              peer1_cmds:                                        # Freeform config for source interface\n                - no shutdown                                    # optional, default is \"\"\n              peer2_cmds:                                        # Freeform config for destination interface\n                - no shutdown                                    # optional, default is \"\"\n\n          - dst_fabric: \"{{ ansible_unnum_fabric }}\"             # Destination fabric\n            src_interface: \"{{ intf_1_5 }}\"                      # Interface on the Source fabric\n            dst_interface: \"{{ intf_1_5 }}\"                      # Interface on the Destination fabric\n            src_device: \"{{ ansible_num_switch1 }}\"              # Device on the Source fabric\n            dst_device: \"{{ ansible_unnum_switch1 }}\"            # Device on the Destination fabric\n            template: ext_evpn_multisite_overlay_setup           # template to be applied, choose from\n                                                                 #   [ ext_fabric_setup, ext_multisite_underlay_setup,\n                                                                 #     ext_evpn_multisite_overlay_setup ]\n            profile:\n              ipv4_addr: 193.168.3.1                             # IP address of interface in src fabric\n              neighbor_ip: 193.168.3.2                           # IP address of the interface in dst fabric\n              src_asn: 1300                                      # BGP ASN in source fabric\n              dst_asn: 1301                                      # BGP ASN in destination fabric\n              trm_enabled: false                                 # optional, default is false\n              bgp_multihop: 5                                    # optional, default is 5\n              ebgp_password_enable: true                         # optional, default is true\n              ebgp_password: 0102030405                          # optional, required only if ebgp_password_enable flag is true, and inherit_from_msd\n                                                                 # is false. Default is 3\n              inherit_from_msd: false                            # optional, required only if ebgp_password_enable flag is true, default is false\n              ebpg_auth_key_type: 3                              # optional, required only if ebpg_password_enable is true, and inherit_from_msd\n                                                                 # is false. Default is 3\n                                                                 # choose from [3 - 3DES, 7 - Cisco ]\n          - dst_fabric: \"{{ ansible_unnum_fabric }}\"             # Destination fabric\n            src_interface: \"{{ intf_1_5 }}\"                      # Interface on the Source fabric\n            dst_interface: \"{{ intf_1_5 }}\"                      # Interface on the Destination fabric\n            src_device: \"{{ ansible_num_switch1 }}\"              # Device on the Source fabric\n            dst_device: \"{{ ansible_unnum_switch1 }}\"            # Device on the Destination fabric\n            template: ext_vxlan_mpls_underlay_setup              # Template of MPLS handoff underlay link\n            profile:\n              ipv4_subnet: 193.168.3.1/30                        # IP address of interface in src fabric with the mask\n              neighbor_ip: 193.168.3.2                           # IP address of the interface in dst fabric\n              mpls_fabric: LDP                                   # MPLS handoff protocol, choose from [LDP, SR]\n              dci_routing_proto: isis                            # Routing protocol used on the DCI MPLS link, choose from [is-is, ospf]\n\n          - dst_fabric: \"{{ ansible_unnum_fabric }}\"             # Destination fabric\n            src_interface:  Loopback101                          # Loopback interface on the Source fabric\n            dst_interface:  Loopback1                            # Loopback interface on the Destination fabric\n            src_device: \"{{ ansible_num_switch1 }}\"              # Device on the Source fabric\n            dst_device: \"{{ ansible_unnum_switch1 }}\"            # Device on the Destination fabric\n            template: ext_vxlan_mpls_overlay_setup               #Template of MPLS handoff overlay link\n            profile:\n              neighbor_ip: 2.2.2.2 .                             # IP address of the loopback interface of destination device\n              src_asn: 498278384                                 # BGP ASN in source fabric\n              dst_asn: 498278384                                 # BGP ASN in destination fabric\n\n\n\n# FABRIC WITH VPC PAIRED SWITCHES\n\n    - name: Create Links\n      cisco.dcnm.dcnm_links:\n        state: merged                                            # choose from [merged, replaced, deleted, query]\n        src_fabric: \"ansible_vpc_fabric\"\n        config:\n          - dst_fabric: \"ansible_vpc_fabric\"                     # Destination fabric\n            src_interface: \"Ethernet1/4\"                         # Interface on the Source fabric\n            dst_interface: \"Ethernet1/4\"                         # Interface on the Destination fabric\n            src_device: \"ansible_vpc_switch1\"                    # Device on the Source fabric\n            dst_device: \"ansible_vpc_switch2\"                    # Device on the Destination fabric\n            template: int_intra_vpc_peer_keep_alive_link         # template to be applied, choose from\n                                                                 #   [ int_intra_fabric_ipv6_link_local, int_intra_fabric_num_link,\n                                                                 #     int_intra_fabric_unnum_link, int_intra_vpc_peer_keep_alive_link,\n                                                                 #     int_pre_provision_intra_fabric_link, ios_xe_int_intra_fabric_num_link ]\n\n            profile:\n              peer1_ipv4_addr: 192.170.1.1                       # IPV4 address of the Source interface\n              peer2_ipv4_addr: 192.170.1.2                       # IPV4 address of the Destination interface\n              peer1_ipv6_addr: fe80:2a::01                       # optional, default is \"\"\n              peer2_ipv6_addr: fe80:2a::02                       # optional, default is \"\"\n              admin_state: true                                  # choose from [true, false]\n              mtu: 9216                                          #\n              peer1_description: \"Description of source\"         # optional, default is \"\"\n              peer2_description: \"Description of dest\"           # optional, default is \"\"\n              enable_macsec: false                               # optional, choose from [true, false]\n              peer1_cmds:                                        # Freeform config for source device\n                - no shutdown                                    # optional, default is \"\"\n              peer2_cmds:                                        # Freeform config for destination device\n                - no shutdown                                    # optional, default is \"\"\n              intf_vrf: \"test_vrf\"                               # optional, default is \"\"\n\n# UNNUMBERED FABRIC\n\n    - name: Create Links\n      cisco.dcnm.dcnm_links:\n        state: merged                                            # choose from [merged, replaced, deleted, query]\n        src_fabric: \"ansible_unnum_fabric\"\n        config:\n          - dst_fabric: \"ansible_unnum_fabric\"                   # Destination fabric\n            src_interface: \"Ethernet1/1\"                         # Interface on the Source fabric\n            dst_interface: \"Ethernet1/1\"                         # Interface on the Destination fabric\n            src_device: \"ansible_unnum_switch1\"                  # Device on the Source fabric\n            dst_device: \"ansible_unnum_switch2\"                  # Device on the Destination fabric\n            template: int_intra_fabric_unnum_link                # template to be applied, choose from\n                                                                 #   [ int_intra_fabric_ipv6_link_local, int_intra_fabric_num_link,\n                                                                 #     int_intra_fabric_unnum_link, int_intra_vpc_peer_keep_alive_link,\n                                                                 #     int_pre_provision_intra_fabric_link, ios_xe_int_intra_fabric_num_link ]\n\n            profile:\n              admin_state: true                                  # choose from [true, false]\n              mtu: 9216                                          #\n              peer1_description: \"Description of source\"         # optional, default is \"\"\n              peer2_description: \"Description of dest\"           # optional, default is \"\"\n              enable_macsec: false                               # optional, choose from [true, false]\n              peer1_cmds:                                        # Freeform config for source device\n                - no shutdown                                    # optional, default is \"\"\n              peer2_cmds:                                        # Freeform config for destination device\n                - no shutdown                                    # optional, default is \"\"\n\n          - dst_fabric: \"ansible_unnum_fabric\"                   # Destination fabric\n            src_interface: \"Ethernet1/2\"                         # Interface on the Source fabric\n            dst_interface: \"Ethernet1/2\"                         # Interface on the Destination fabric\n            src_device: \"ansible_unnum_switch1\"                  # Device on the Source fabric\n            dst_device: \"ansible_unnum_switch2\"                  # Device on the Destination fabric\n            template: int_pre_provision_intra_fabric_link        # template to be applied, choose from\n                                                                 #   [ int_intra_fabric_ipv6_link_local, int_intra_fabric_num_link,\n                                                                 #     int_intra_fabric_unnum_link, int_intra_vpc_peer_keep_alive_link,\n                                                                 #     int_pre_provision_intra_fabric_link, ios_xe_int_intra_fabric_num_link ]\n\n# IPV6 UNDERLAY FABRIC\n\n    - name: Create Links\n      cisco.dcnm.dcnm_links:\n        state: merged                                            # choose from [merged, replaced, deleted, query]\n        src_fabric: \"ansible_ipv6_fabric\"\n        config:\n          - dst_fabric: \"ansible_ipv6_fabric\"                    # Destination fabric\n            src_interface: \"Ethernet1/1\"                         # Interface on the Source fabric\n            dst_interface: \"Ethernet1/1\"                         # Interface on the Destination fabric\n            src_device: \"ansible_ipv6_switch1\"                   # Device on the Source fabric\n            dst_device: \"ansible_ipv6_switch2\"                   # Device on the Destination fabric\n            template: int_intra_fabric_ipv6_link_local           # template to be applied, choose from\n                                                                 #   [ int_intra_fabric_ipv6_link_local, int_intra_fabric_num_link,\n                                                                 #     int_intra_fabric_unnum_link, int_intra_vpc_peer_keep_alive_link,\n                                                                 #     int_pre_provision_intra_fabric_link, ios_xe_int_intra_fabric_num_link ]\n\n            profile:\n              peer1_ipv4_addr: 192.169.1.1                       # optional, default is \"\"\n              peer2_ipv4_addr: 192.169.1.2                       # optional, default is \"\"\n              peer1_ipv6_addr: fe80:0201::01                     # IP address of the Source interface\n              peer2_ipv6_addr: fe80:0201::02                     # IP address of the Source interface\n              admin_state: true                                  # choose from [true, false]\n              mtu: 9216                                          #\n              peer1_description: \"Description of source\"         # optional, default is \"\"\n              peer2_description: \"Description of dest\"           # optional, default is \"\"\n              peer1_bfd_echo_disable: false                      # optional, choose from [true, false]\n              peer2_bfd_echo_disable: false                      # optional, choose from [true, false]\n              enable_macsec: false                               # optional, choose from [true, false]\n              peer1_cmds:                                        # Freeform config for source device\n                - no shutdown                                    # optional, default is \"\"\n              peer2_cmds:                                        # Freeform config for destination device\n                - no shutdown                                    # optional, default is \"\"\n\n          - dst_fabric: \"ansible_ipv6_fabric\"                    # Destination fabric\n            src_interface: \"Ethernet1/2\"                         # Interface on the Source fabric\n            dst_interface: \"Ethernet1/2\"                         # Interface on the Destination fabric\n            src_device: \"ansible_ipv6_switch1\"                   # Device on the Source fabric\n            dst_device: \"ansible_ipv6_switch2\"                   # Device on the Destination fabric\n            template: int_pre_provision_intra_fabric_link        # template to be applied, choose from\n                                                                 #   [ int_intra_fabric_ipv6_link_local, int_intra_fabric_num_link,\n                                                                 #     int_intra_fabric_unnum_link, int_intra_vpc_peer_keep_alive_link,\n                                                                 #     int_pre_provision_intra_fabric_link, ios_xe_int_intra_fabric_num_link ]\n          - dst_fabric: \"ansible_ipv6_fabric\"                    # Destination fabric\n            src_interface: \"Ethernet1/3\"                         # Interface on the Source fabric\n            dst_interface: \"Ethernet1/3\"                         # Interface on the Destination fabric\n            src_device: \"ansible_ipv6_switch1\"                   # Device on the Source fabric\n            dst_device: \"ansible_ipv6_switch2\"                   # Device on the Destination fabric\n            template: int_intra_fabric_num_link                  # template to be applied, choose from\n                                                                 #   [ int_intra_fabric_ipv6_link_local, int_intra_fabric_num_link,\n                                                                 #     int_intra_fabric_unnum_link, int_intra_vpc_peer_keep_alive_link,\n                                                                 #     int_pre_provision_intra_fabric_link, ios_xe_int_intra_fabric_num_link ]\n\n            profile:\n              peer1_ipv4_addr: 192.169.2.1                       # IPV4 address of the Source interface\n              peer2_ipv4_addr: 192.169.2.2                       # IPV4 address of the Destination interface\n              peer1_ipv6_addr: fe80:0202::01                     # IP address of the Source interface\n              peer2_ipv6_addr: fe80:0202::02                     # IP address of the Source interface\n              admin_state: true                                  # choose from [true, false]\n              mtu: 1500                                          # optional, default is 1500\n              peer1_description: \"Description of source\"         # optional, default is \"\"\n              peer2_description: \"Description of dest\"           # optional, default is \"\"\n              peer1_bfd_echo_disable: false                      # optional, choose from [true, false]\n              peer2_bfd_echo_disable: false                      # optional, choose from [true, false]\n              enable_macsec: false                               # optional, choose from [true, false]\n              peer1_cmds:                                        # Freeform config for source device\n                - no shutdown                                    # optional, default is \"\"\n              peer2_cmds:                                        # Freeform config for destination device\n                - no shutdown                                    # optional, default is \"\"\n# DELETE LINKS\n\n    - name: Delete Links\n      cisco.dcnm.dcnm_links:\n        state: deleted                                           # choose from [merged, replaced, deleted, query]\n        src_fabric: \"ansible_num_fabric\"\n        config:\n          - dst_fabric: \"ansible_num_fabric\"                     # Destination fabric\n            src_interface: \"Ethernet1/1\"                         # Interface on the Source fabric\n            dst_interface: \"Ethernet1/1\"                         # Interface on the Destination fabric\n            src_device: 193.168.1.1                              # Device on the Source fabric\n            dst_device: 193.168.1.2                              # Device on the Destination fabric\n\n# QUERY LINKS\n\n    - name: Query Links - with Src Fabric\n      cisco.dcnm.dcnm_links:\n        state: query                                             # choose from [merged, replaced, deleted, query]\n        src_fabric: \"ansible_num_fabric\"\n\n    - name: Query Links - with Src &amp; Dst Fabric\n      cisco.dcnm.dcnm_links:\n        state: query                                             # choose from [merged, replaced, deleted, query]\n        src_fabric: \"ansible_num_fabric\"\n        config:\n          - dst_fabric: \"ansible_num_fabric\"                     # optional, Destination fabric\n\n    - name: Query Links - with Src &amp; Dst Fabric, Src Intf\n      cisco.dcnm.dcnm_links:\n        state: query                                             # choose from [merged, replaced, deleted, query]\n        src_fabric: \"ansible_num_fabric\"\n        config:\n          - dst_fabric: \"ansible_num_fabric\"                     # optional, Destination fabric\n            src_interface: \"Ethernet1/1\"                         # optional, Interface on the Source fabric\n\n    - name: Query Links - with Src &amp; Dst Fabric, Src &amp; Dst Intf\n      cisco.dcnm.dcnm_links:\n        state: query                                             # choose from [merged, replaced, deleted, query]\n        src_fabric: \"ansible_num_fabric\"\n        config:\n          - dst_fabric: \"ansible_num_fabric\"                     # optional, Destination fabric\n            src_interface: \"Ethernet1/1\"                         # optional, Interface on the Source fabric\n            dst_interface: \"Ethernet1/1\"                         # optional, Interface on the Destination fabric\n\n    - name: Query Links - with Src &amp; Dst Fabric, Src &amp; Dst Intf, Src Device\n      cisco.dcnm.dcnm_links:\n        state: query                                             # choose from [merged, replaced, deleted, query]\n        src_fabric: \"ansible_num_fabric\"\n        config:\n          - dst_fabric: \"ansible_num_fabric\"                     # optional, Destination fabric\n            src_interface: \"Ethernet1/1\"                         # optional, Interface on the Source fabric\n            dst_interface: \"Ethernet1/1\"                         # optional, Interface on the Destination fabric\n            src_device: 193.168.1.1                              # optional, Device on the Source fabric\n      register: result\n\n    - assert:\n        that:\n          '(result[\"response\"] | length) &gt;= 1'\n\n    - name: Query Links - with Src &amp; Dst Fabric, Src &amp; Dst Intf, Src &amp; Dst Device\n      cisco.dcnm.dcnm_links:\n        state: query                                             # choose from [merged, replaced, deleted, query]\n        src_fabric: \"ansible_num_fabric\"\n        config:\n          - dst_fabric: \"ansible_num_fabric\"                     # optional, Destination fabric\n            src_interface: \"Ethernet1/1\"                         # optional, Interface on the Source fabric\n            dst_interface: \"Ethernet1/1\"                         # optional, Interface on the Destination fabric\n            src_device: 193.168.1.1                              # optional, Device on the Source fabric\n            dst_device: 193.168.1.2                              # optional, Device on the Destination fabric\n #\n # INTRA-FABRIC\n #\n    - name: Query Links - with Src &amp; Dst Fabric, Src &amp; Dst Intf, Src &amp; Dst Device, Template\n      cisco.dcnm.dcnm_links:\n        state: query                                             # choose from [merged, replaced, deleted, query]\n        src_fabric: \"ansible_num_fabric\"\n        config:\n          - dst_fabric: \"ansible_num_fabric\"                     # optional, Destination fabric\n            src_interface: \"Ethernet1/1\"                         # optional, Interface on the Source fabric\n            dst_interface: \"Ethernet1/1\"                         # optional, Interface on the Destination fabric\n            src_device: 193.168.1.1                              # optional, Device on the Source fabric\n            dst_device: 193.168.1.2                              # optional, Device on the Destination fabric\n            template: int_intra_fabric_num_link                  # optional, template to be applied, choose from\n                                                                 #   [ int_intra_fabric_ipv6_link_local, int_intra_fabric_num_link,\n                                                                 #     int_intra_fabric_unnum_link, int_intra_vpc_peer_keep_alive_link,\n                                                                 #     int_pre_provision_intra_fabric_link, ios_xe_int_intra_fabric_num_link ]\n#\n# INTER-FABRIC\n#\n    - name: Query Links - with Src &amp; Dst Fabric, Src &amp; Dst Intf, Src &amp; Dst Device, Template\n      cisco.dcnm.dcnm_links:\n        state: query                                             # choose from [merged, replaced, deleted, query]\n        src_fabric: \"{{ ansible_num_fabric }}\"\n        config:\n          - dst_fabric: \"{{ ansible_ipv6_fabric }}\"              # optional, Destination fabric\n            src_interface: \"{{ intf_1_6 }}\"                      # optional, Interface on the Source fabric\n            dst_interface: \"{{ intf_1_6 }}\"                      # optional, Interface on the Destination fabric\n            src_device: \"{{ ansible_num_switch1 }}\"              # optional, Device on the Source fabric\n            dst_device: \"{{ ansible_ipv6_switch1 }}\"             # optional, Device on the Destination fabric\n            template: ext_fabric_setup                           # optional, template to be applied, choose from\n                                                                 #   [ ext_fabric_setup, ext_multisite_underlay_setup,\n                                                                 #     ext_evpn_multisite_overlay_setup ]\n</code></pre>"},{"location":"modules/dcnm_maintenance_mode/","title":"dcnm_maintenance_mode","text":"Details <ul> <li>author<ul> <li>Allen Robel (@quantumonion)</li> </ul> </li> <li>description<ul> <li>Enable Maintenance or Normal Mode.</li> </ul> </li> <li>short_description<ul> <li>Manage Maintenance Mode Configuration of NX-OS Switches.</li> </ul> </li> <li>version_added<ul> <li>3.6.0</li> </ul> </li> </ul>"},{"location":"modules/dcnm_maintenance_mode/#options","title":"options","text":"Details"},{"location":"modules/dcnm_maintenance_mode/#config","title":"config","text":"Details <ul> <li>description<ul> <li>A dictionary containing the maintenance mode configuration.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> </ul>"},{"location":"modules/dcnm_maintenance_mode/#deploy","title":"deploy","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Whether to deploy the switch configurations.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_maintenance_mode/#mode","title":"mode","text":"Details <ul> <li>choices<ul> <li>maintenance</li> <li>normal</li> </ul> </li> <li>default<ul> <li>normal</li> </ul> </li> <li>description<ul> <li>Enable maintenance or normal mode on all switches.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_maintenance_mode/#switches","title":"switches","text":"Details <ul> <li>description<ul> <li>A list of target switches. </li> <li>Per-switch options override the global options.</li> </ul> </li> <li>elements<ul> <li>dict</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> </ul>"},{"location":"modules/dcnm_maintenance_mode/#deploy_1","title":"deploy","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Whether to deploy the switch configuration.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_maintenance_mode/#ip_address","title":"ip_address","text":"Details <ul> <li>description<ul> <li>The IP address of the switch.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_maintenance_mode/#mode_1","title":"mode","text":"Details <ul> <li>choices<ul> <li>maintenance</li> <li>normal</li> </ul> </li> <li>default<ul> <li>normal</li> </ul> </li> <li>description<ul> <li>Enable maintenance or normal mode for the switch.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_maintenance_mode/#wait_for_mode_change","title":"wait_for_mode_change","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>If deploy is enabled, whether to wait for NDFC to push the change to the switch. Ignored if deploy is not enabled.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_maintenance_mode/#wait_for_mode_change_1","title":"wait_for_mode_change","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>If deploy is enabled, whether to wait for NDFC to push the change to the switch.  Ignored if deploy is not enabled.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> <li>type<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_maintenance_mode/#state","title":"state","text":"Details <ul> <li>choices<ul> <li>merged</li> <li>query</li> </ul> </li> <li>default<ul> <li>merged</li> </ul> </li> <li>description<ul> <li>The state of the feature or object after module completion</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_maintenance_mode/#examples","title":"Examples","text":"Details <pre><code>---\n\n# Enable maintenance mode on all switches.\n# Do not deploy the configuration on any switch.\n\n- name: Configure switch mode\n  cisco.dcnm.dcnm_maintenance_mode:\n    state: merged\n    config:\n        deploy: true\n        wait_for_mode_change: true\n        mode: maintenance\n        switches:\n            -   ip_address: 192.168.1.2\n            -   ip_address: 192.160.1.3\n            -   ip_address: 192.160.1.4\n  register: result\n- debug:\n    var: result\n\n# Enable maintenance mode on two switches.\n# Enable normal mode on one switch.\n# Deploy the configuration on one switch.\n\n- name: Configure switch mode\n  cisco.dcnm.dcnm_maintenance_mode:\n    state: merged\n    config:\n        deploy: false\n        mode: maintenance\n        switches:\n            -   ip_address: 192.168.1.2\n                mode: normal\n            -   ip_address: 192.160.1.3\n                deploy: true\n                wait_for_mode_change: true\n            -   ip_address: 192.160.1.4\n  register: result\n- debug:\n    var: result\n</code></pre>"},{"location":"modules/dcnm_network/","title":"dcnm_network","text":"Details <ul> <li>author<ul> <li>Chris Van Heuveln(@chrisvanheuveln), Shrishail Kariyappanavar(@nkshrishail) Praveen Ramoorthy(@praveenramoorthy)</li> </ul> </li> <li>description<ul> <li>Add and remove Networks from a DCNM managed VXLAN fabric. </li> <li>In Multisite fabrics, Networks can be created only on Multisite fabric</li> </ul> </li> <li>short_description<ul> <li>Add and remove Networks from a DCNM managed VXLAN fabric.</li> </ul> </li> <li>version_added<ul> <li>0.9.0</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#options","title":"options","text":"Details"},{"location":"modules/dcnm_network/#config","title":"config","text":"Details <ul> <li>description<ul> <li>List of details of networks being managed. Not required for state deleted</li> </ul> </li> <li>elements<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#arp_suppress","title":"arp_suppress","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>ARP suppression </li> <li>ARP suppression is only supported if SVI is present when Layer-2-Only is not enabled</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#attach","title":"attach","text":"Details <ul> <li>description<ul> <li>List of network attachment details</li> </ul> </li> <li>elements<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#deploy","title":"deploy","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Per switch knob to control whether to deploy the attachment </li> <li>This knob has been deprecated from Ansible NDFC Collection Version 2.1.0 onwards. There will not be any functional impact if specified in playbook.</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#ip_address","title":"ip_address","text":"Details <ul> <li>description<ul> <li>IP address of the switch where the network will be attached or detached</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#ports","title":"ports","text":"Details <ul> <li>description<ul> <li>List of switch interfaces where the network will be attached</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#tor_ports","title":"tor_ports","text":"Details <ul> <li>description<ul> <li>List of interfaces in the paired TOR switch for this leaf where the network will be attached </li> <li>Please attach the same set of TOR ports to both the VPC paired switches.</li> </ul> </li> <li>elements<ul> <li>dict</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#ip_address_1","title":"ip_address","text":"Details <ul> <li>description<ul> <li>IP address of the TOR switch where the network will be attached</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#ports_1","title":"ports","text":"Details <ul> <li>description<ul> <li>List of TOR switch interfaces where the network will be attached</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#deploy_1","title":"deploy","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Global knob to control whether to deploy the attachment </li> <li>Ansible NDFC Collection Behavior for Version 2.0.1 and earlier </li> <li>This knob will create and deploy the attachment in DCNM only when set to \"True\" in playbook </li> <li>Ansible NDFC Collection Behavior for Version 2.1.0 and later </li> <li>Attachments specified in the playbook will always be created in DCNM. This knob, when set to \"True\",  will deploy the attachment in DCNM, by pushing the configs to switch. If set to \"False\", the attachments will be created in DCNM, but will not be deployed</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#dhcp_loopback_id","title":"dhcp_loopback_id","text":"Details <ul> <li>description<ul> <li>Loopback ID for DHCP Relay interface </li> <li>Configured ID value should be in range 0-1023</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#dhcp_srvr1_ip","title":"dhcp_srvr1_ip","text":"Details <ul> <li>description<ul> <li>DHCP relay IP address of the first DHCP server</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#dhcp_srvr1_vrf","title":"dhcp_srvr1_vrf","text":"Details <ul> <li>description<ul> <li>VRF ID of first DHCP server</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#dhcp_srvr2_ip","title":"dhcp_srvr2_ip","text":"Details <ul> <li>description<ul> <li>DHCP relay IP address of the second DHCP server</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#dhcp_srvr2_vrf","title":"dhcp_srvr2_vrf","text":"Details <ul> <li>description<ul> <li>VRF ID of second DHCP server</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#dhcp_srvr3_ip","title":"dhcp_srvr3_ip","text":"Details <ul> <li>description<ul> <li>DHCP relay IP address of the third DHCP server</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#dhcp_srvr3_vrf","title":"dhcp_srvr3_vrf","text":"Details <ul> <li>description<ul> <li>VRF ID of third DHCP server</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#gw_ip_subnet","title":"gw_ip_subnet","text":"Details <ul> <li>description<ul> <li>Gateway with subnet for the network</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#gw_ipv6_subnet","title":"gw_ipv6_subnet","text":"Details <ul> <li>description<ul> <li>IPv6 Gateway with prefix for the network</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#int_desc","title":"int_desc","text":"Details <ul> <li>description<ul> <li>Description for the interface</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#intfvlan_nf_monitor","title":"intfvlan_nf_monitor","text":"Details <ul> <li>description<ul> <li>Interface Vlan Netflow Monitor </li> <li>Applicable only if 'Layer 2 Only' is not enabled. Provide monitor name defined in fabric setting for Layer 3 Record </li> <li>Netflow configs are supported on NDFC only</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#is_l2only","title":"is_l2only","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Layer 2 only network </li> <li>If specified as true, VRF Name(vrf_name) should not be specified or can be specified as \"\"</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#l3gw_on_border","title":"l3gw_on_border","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable L3 Gateway on Border</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#mtu_l3intf","title":"mtu_l3intf","text":"Details <ul> <li>description<ul> <li>MTU for Layer 3 interfaces </li> <li>Configured MTU value should be in range 68-9216</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#multicast_group_address","title":"multicast_group_address","text":"Details <ul> <li>description<ul> <li>The multicast IP address for the network</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#net_extension_template","title":"net_extension_template","text":"Details <ul> <li>default<ul> <li>Default_Network_Extension_Universal</li> </ul> </li> <li>description<ul> <li>Name of the extension config template to be used</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#net_id","title":"net_id","text":"Details <ul> <li>description<ul> <li>ID of the network being managed </li> <li>If not specified in the playbook, DCNM will auto-select an available net_id</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#net_name","title":"net_name","text":"Details <ul> <li>description<ul> <li>Name of the network being managed</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#net_template","title":"net_template","text":"Details <ul> <li>default<ul> <li>Default_Network_Universal</li> </ul> </li> <li>description<ul> <li>Name of the config template to be used</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#netflow_enable","title":"netflow_enable","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable Netflow </li> <li>Netflow is supported only if it is enabled on fabric </li> <li>Netflow configs are supported on NDFC only</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#route_target_both","title":"route_target_both","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable both L2 VNI Route-Target</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#routing_tag","title":"routing_tag","text":"Details <ul> <li>default<ul> <li>12345</li> </ul> </li> <li>description<ul> <li>Routing Tag for the network profile</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#secondary_ip_gw1","title":"secondary_ip_gw1","text":"Details <ul> <li>description<ul> <li>IP address with subnet for secondary gateway 1</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#secondary_ip_gw2","title":"secondary_ip_gw2","text":"Details <ul> <li>description<ul> <li>IP address with subnet for secondary gateway 2</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#secondary_ip_gw3","title":"secondary_ip_gw3","text":"Details <ul> <li>description<ul> <li>IP address with subnet for secondary gateway 3</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#secondary_ip_gw4","title":"secondary_ip_gw4","text":"Details <ul> <li>description<ul> <li>IP address with subnet for secondary gateway 4</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#trm_enable","title":"trm_enable","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable Tenant Routed Multicast</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#vlan_id","title":"vlan_id","text":"Details <ul> <li>description<ul> <li>VLAN ID for the network. </li> <li>If not specified in the playbook, DCNM will auto-select an available vlan_id</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#vlan_name","title":"vlan_name","text":"Details <ul> <li>description<ul> <li>Name of the vlan configured </li> <li>if &gt; 32 chars enable, system vlan long-name on switch</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#vlan_nf_monitor","title":"vlan_nf_monitor","text":"Details <ul> <li>description<ul> <li>Vlan Netflow Monitor </li> <li>Provide monitor name defined in fabric setting for Layer 3 Record </li> <li>Netflow configs are supported on NDFC only</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#vrf_name","title":"vrf_name","text":"Details <ul> <li>description<ul> <li>Name of the VRF to which the network belongs to </li> <li>This field is required for L3 Networks. VRF name should not be specified or may be specified as \"\" for L2 networks</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#fabric","title":"fabric","text":"Details <ul> <li>description<ul> <li>Name of the target fabric for network operations</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#state","title":"state","text":"Details <ul> <li>choices<ul> <li>merged</li> <li>replaced</li> <li>overridden</li> <li>deleted</li> <li>query</li> </ul> </li> <li>default<ul> <li>merged</li> </ul> </li> <li>description<ul> <li>The state of DCNM after module completion.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_network/#examples","title":"Examples","text":"Details <pre><code>---\n# This module supports the following states:\n#\n# Merged:\n#   Networks defined in the playbook will be merged into the target fabric.\n#     - If the network does not exist it will be added.\n#     - If the network exists but properties managed by the playbook are different\n#       they will be updated if possible.\n#     - Networks that are not specified in the playbook will be untouched.\n#\n# Replaced:\n#   Networks defined in the playbook will be replaced in the target fabric.\n#     - If the Networks does not exist it will be added.\n#     - If the Networks exists but properties managed by the playbook are different\n#       they will be updated if possible.\n#     - Properties that can be managed by the module but are not specified\n#       in the playbook will be deleted or defaulted if possible.\n#     - Networks that are not specified in the playbook will be untouched.\n#\n# Overridden:\n#   Networks defined in the playbook will be overridden in the target fabric.\n#     - If the Networks does not exist it will be added.\n#     - If the Networks exists but properties managed by the playbook are different\n#       they will be updated if possible.\n#     - Properties that can be managed by the module but are not specified\n#       in the playbook will be deleted or defaulted if possible.\n#     - Networks that are not specified in the playbook will be deleted.\n#\n# Deleted:\n#   Networks defined in the playbook will be deleted.\n#   If no Networks are provided in the playbook, all Networks present on that DCNM fabric will be deleted.\n#\n# Query:\n#   Returns the current DCNM state for the Networks listed in the playbook.\n\n- name: Merge networks\n  cisco.dcnm.dcnm_network:\n    fabric: vxlan-fabric\n    state: merged\n    config:\n    - net_name: ansible-net13\n      vrf_name: Tenant-1\n      net_id: 7005\n      net_template: Default_Network_Universal\n      net_extension_template: Default_Network_Extension_Universal\n      vlan_id: 150\n      gw_ip_subnet: '192.168.30.1/24'\n      attach:\n      - ip_address: 192.168.1.224\n        ports: [Ethernet1/13, Ethernet1/14]\n      - ip_address: 192.168.1.225\n        ports: [Ethernet1/13, Ethernet1/14]\n      deploy: true\n    - net_name: ansible-net12\n      vrf_name: Tenant-2\n      net_id: 7002\n      net_template: Default_Network_Universal\n      net_extension_template: Default_Network_Extension_Universal\n      vlan_id: 151\n      gw_ip_subnet: '192.168.40.1/24'\n      attach:\n      - ip_address: 192.168.1.224\n        ports: [Ethernet1/11, Ethernet1/12]\n        tor_ports:\n        - ip_address: 192.168.1.120\n          ports: [Ethernet1/14, Ethernet1/15]\n      - ip_address: 192.168.1.225\n        ports: [Ethernet1/11, Ethernet1/12]\n      deploy: false\n\n- name: Replace networks\n  cisco.dcnm.dcnm_network:\n    fabric: vxlan-fabric\n    state: replaced\n    config:\n      - net_name: ansible-net13\n        vrf_name: Tenant-1\n        net_id: 7005\n        net_template: Default_Network_Universal\n        net_extension_template: Default_Network_Extension_Universal\n        vlan_id: 150\n        gw_ip_subnet: '192.168.30.1/24'\n        attach:\n        - ip_address: 192.168.1.224\n          # Replace the ports with new ports\n          # ports: [Ethernet1/13, Ethernet1/14]\n          ports: [Ethernet1/16, Ethernet1/17]\n          # Delete this attachment\n        # - ip_address: 192.168.1.225\n        #   ports: [Ethernet1/13, Ethernet1/14]\n        deploy: true\n        # Dont touch this if its present on DCNM\n        # - net_name: ansible-net12\n        #   vrf_name: Tenant-2\n        #   net_id: 7002\n        #   net_template: Default_Network_Universal\n        #   net_extension_template: Default_Network_Extension_Universal\n        #   vlan_id: 151\n        #   gw_ip_subnet: '192.168.40.1/24'\n        #   attach:\n        #     - ip_address: 192.168.1.224\n        #       ports: [Ethernet1/11, Ethernet1/12]\n        #     - ip_address: 192.168.1.225\n        #       ports: [Ethernet1/11, Ethernet1/12]\n        #   deploy: false\n\n- name: Override networks\n  cisco.dcnm.dcnm_network:\n    fabric: vxlan-fabric\n    state: overridden\n    config:\n    - net_name: ansible-net13\n      vrf_name: Tenant-1\n      net_id: 7005\n      net_template: Default_Network_Universal\n      net_extension_template: Default_Network_Extension_Universal\n      vlan_id: 150\n      gw_ip_subnet: '192.168.30.1/24'\n      attach:\n      - ip_address: 192.168.1.224\n        # Replace the ports with new ports\n        # ports: [Ethernet1/13, Ethernet1/14]\n        ports: [Ethernet1/16, Ethernet1/17]\n        # Delete this attachment\n        # - ip_address: 192.168.1.225\n        #   ports: [Ethernet1/13, Ethernet1/14]\n      deploy: true\n      # Delete this network\n      # - net_name: ansible-net12\n      #   vrf_name: Tenant-2\n      #   net_id: 7002\n      #   net_template: Default_Network_Universal\n      #   net_extension_template: Default_Network_Extension_Universal\n      #   vlan_id: 151\n      #   gw_ip_subnet: '192.168.40.1/24'\n      #   attach:\n      #   - ip_address: 192.168.1.224\n      #     ports: [Ethernet1/11, Ethernet1/12]\n      #   - ip_address: 192.168.1.225\n      #     ports: [Ethernet1/11, Ethernet1/12]\n      #   deploy: false\n\n- name: Delete selected networks\n  cisco.dcnm.dcnm_network:\n    fabric: vxlan-fabric\n    state: deleted\n    config:\n    - net_name: ansible-net13\n      vrf_name: Tenant-1\n      net_id: 7005\n      net_template: Default_Network_Universal\n      net_extension_template: Default_Network_Extension_Universal\n      vlan_id: 150\n      gw_ip_subnet: '192.168.30.1/24'\n    - net_name: ansible-net12\n      vrf_name: Tenant-2\n      net_id: 7002\n      net_template: Default_Network_Universal\n      net_extension_template: Default_Network_Extension_Universal\n      vlan_id: 151\n      gw_ip_subnet: '192.168.40.1/24'\n      deploy: false\n\n- name: Delete all the networkss\n  cisco.dcnm.dcnm_network:\n    fabric: vxlan-fabric\n    state: deleted\n\n- name: Query Networks\n  cisco.dcnm.dcnm_network:\n    fabric: vxlan-fabric\n    state: query\n    config:\n    - net_name: ansible-net13\n    - net_name: ansible-net12\n</code></pre>"},{"location":"modules/dcnm_policy/","title":"dcnm_policy","text":"Details <ul> <li>author<ul> <li>Mallik Mudigonda(@mmudigon)</li> </ul> </li> <li>description<ul> <li>DCNM Ansible Module for Creating, Deleting, Querying and Modifying policies</li> </ul> </li> <li>short_description<ul> <li>DCNM Ansible Module for managing policies.</li> </ul> </li> <li>version_added<ul> <li>1.1.0</li> </ul> </li> </ul>"},{"location":"modules/dcnm_policy/#options","title":"options","text":"Details"},{"location":"modules/dcnm_policy/#config","title":"config","text":"Details <ul> <li>description<ul> <li>A list of dictionaries containing policy and switch information</li> </ul> </li> <li>elements<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_policy/#create_additional_policy","title":"create_additional_policy","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>A flag indicating if a policy is to be created even if an identical policy already exists</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_policy/#description","title":"description","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Description of the policy. The description may include the details regarding the policy i.e. the arguments if any etc.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_policy/#name","title":"name","text":"Details <ul> <li>description<ul> <li>This can be one of the following a) Template Name </li> <li>A unique name identifying the template. Please note that a template name can be used by multiple policies and hence a template name does not identify a policy uniquely. b) Policy ID     </li> <li>A unique ID identifying a policy. Policy ID MUST be used for modifying policies since template names cannot uniquely identify a policy</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_policy/#policy_vars","title":"policy_vars","text":"Details <ul> <li>default<ul> <li>{}</li> </ul> </li> <li>description<ul> <li>A set of arguments required for creating and deploying policies. The arguments are specific to each policy and depends on the tmeplate that is used by the policy.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_policy/#priority","title":"priority","text":"Details <ul> <li>default<ul> <li>500</li> </ul> </li> <li>description<ul> <li>Priority associated with the policy</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_policy/#switch","title":"switch","text":"Details <ul> <li>description<ul> <li>A dictionary of switches and associated policy information. All switches in this list will be deployed with only those policies that are included under \"policies\" object i.e. 'policies' object will override the list of policies for this particular switch. If 'policies' object is not included, then other policies specified in the configurstion will be deployed to these switches.</li> </ul> </li> <li>elements<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_policy/#ip","title":"ip","text":"Details <ul> <li>description<ul> <li>IP address of the switch where the policy is to be deployed. This can be IPV4 address, IPV6 address or hostname</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_policy/#policies","title":"policies","text":"Details <ul> <li>default<ul> <li>[]</li> </ul> </li> <li>description<ul> <li>A list of policies to be deployed on the switch. Note only policies included here will be deployed on the switch irrespective of other polcies included in the configuration.</li> </ul> </li> <li>elements<ul> <li>dict</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> </ul>"},{"location":"modules/dcnm_policy/#create_additional_policy_1","title":"create_additional_policy","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>A flag indicating if a policy is to be created even if an identical policy already exists</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_policy/#description_1","title":"description","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Description of the policy. The description may include the details regarding the policy</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_policy/#name_1","title":"name","text":"Details <ul> <li>description<ul> <li>This can be one of the following a) Template Name </li> <li>A unique name identifying the template. Please note that a template name can be used by multiple policies and hence a template name does not identify a policy uniquely. b) Policy ID     </li> <li>A unique ID identifying a policy. Policy ID MUST be used for modifying policies since template names cannot uniquely identify a policy</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_policy/#policy_vars_1","title":"policy_vars","text":"Details <ul> <li>default<ul> <li>{}</li> </ul> </li> <li>description<ul> <li>A set of arguments required for creating and deploying policies. The arguments are specific to each policy and that depends on the tmeplate that is used by the policy.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_policy/#priority_1","title":"priority","text":"Details <ul> <li>default<ul> <li>500</li> </ul> </li> <li>description<ul> <li>Priority associated with the policy</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_policy/#deploy","title":"deploy","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>A flag specifying if a policy is to be deployed on the switches</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_policy/#fabric","title":"fabric","text":"Details <ul> <li>description<ul> <li>Name of the target fabric for policy operations</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_policy/#state","title":"state","text":"Details <ul> <li>choices<ul> <li>merged</li> <li>deleted</li> <li>query</li> </ul> </li> <li>default<ul> <li>merged</li> </ul> </li> <li>description<ul> <li>The required state of the configuration after module completion.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_policy/#use_desc_as_key","title":"use_desc_as_key","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Flag to enforce using the description parameter as the unique key for policy management. </li> <li>When set to True, the description parameter must be unique and non-empty for each policy in the playbook. The module will also use the description to find the policy to modify or delete. If exsiting policies have the same description, the module will raise an error. If the existing policy with the matching description is using differnet template name, the module will delete the existing policy and create a new one.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_policy/#examples","title":"Examples","text":"Details <pre><code>---\n\n# States:\n# This module supports the following states:\n#\n# Merged:\n#   Policies defined in the playbook will be merged into the target fabric.\n#\n#   The policies listed in the playbook will be created if not already present on the DCNM\n#   server. If the policy is already present and the configuration information included\n#   in the playbook is either different or not present in DCNM, then the corresponding\n#   information is added to the policy on DCNM. If an policy mentioned in playbook\n#   is already present on DCNM and there is no difference in configuration, no operation\n#   will be performed for such policy.\n#\n# Deleted:\n#   Policies defined in the playbook will be deleted in the target fabric.\n#\n#   WARNING: Deleting a policy will deploy all pending configurations on the impacted switches.\n#\n# Query:\n#   Returns the current DCNM state for the policies listed in the playbook.\n\n# CREATE POLICY\n\n# NOTE: In the following create task, policies identified by template names template_101,\n#       template_102, and template_103 are deployed on ansible_switch2 where as policies\n#       template_104 and template_105 are the only policies installed on ansible_switch1.\n\n- name: Create different policies\n  cisco.dcnm.dcnm_policy:\n    fabric: \"{{ ansible_it_fabric }}\"\n    state: merged\n    deploy: true\n    config:\n      - name: template_101  # This must be a valid template name\n        create_additional_policy: false  # Do not create a policy if it already exists\n        priority: 101\n\n      - name: template_102  # This must be a valid template name\n        create_additional_policy: false  # Do not create a policy if it already exists\n        description: 102 - No piority given\n\n      - name: template_103  # This must be a valid template name\n        create_additional_policy: false  # Do not create a policy if it already exists\n        description: Both description and priority given\n        priority: 500\n\n      - switch:\n          - ip: \"{{ ansible_switch1 }}\"\n            policies:\n              - name: template_104  # This must be a valid template name\n                create_additional_policy: false  # Do not create a policy if it already exists\n\n              - name: template_105  # This must be a valid template name\n                create_additional_policy: false  # Do not create a policy if it already exists\n          - ip: \"{{ ansible_switch2 }}\"\n\n# CREATE POLICY (including arguments)\n\n# NOTE: The actual arguments to be included depends on the template used to create the policy\n\n- name: Create policy including required variables\n  cisco.dcnm.dcnm_policy:\n    fabric: \"{{ ansible_it_fabric }}\"\n    config:\n      - name: my_base_ospf               # This must be a valid template name\n        create_additional_policy: false  # Do not create a policy if it already exists\n        priority: 101\n        policy_vars:\n          OSPF_TAG: 2000\n          LOOPBACK_IP: 10.122.84.108\n\n      - switch:\n          - ip: \"{{ ansible_switch1 }}\"\n\n# MODIFY POLICY\n\n# NOTE: Since there can be multiple policies with the same template name, policy-id MUST be used\n#       to modify a particular policy.\n\n- name: Modify different policies\n  cisco.dcnm.dcnm_policy:\n    fabric: \"{{ ansible_it_fabric }}\"\n    state: merged\n    deploy: true\n    config:\n      - name: POLICY-101101  # This must be a valid POLICY ID\n        create_additional_policy: false  # Do not create a policy if it already exists\n        priority: 101\n\n      - name: POLICY-102102  # This must be a valid POLICY ID\n        create_additional_policy: false  # Do not create a policy if it already exists\n        description: 102 - No piority given\n\n      - name: POLICY-103103  # This must be a valid POLICY ID\n        create_additional_policy: false  # Do not create a policy if it already exists\n        description: Both description and priority given\n        priority: 500\n\n      - switch:\n          - ip: \"{{ ansible_switch1 }}\"\n            policies:\n              - name: POLICY-104104  # This must be a valid POLICY ID\n                create_additional_policy: false  # Do not create a policy if it already exists\n\n              - name: POLICY-105105  # This must be a valid POLICY ID\n                create_additional_policy: false  # Do not create a policy if it already exists\n          - ip: \"{{ ansible_switch2 }}\"\n\n# DELETE POLICY\n\n# NOTE: In the case of deleting policies using template names, all policies using the template name\n#       will be deleted. To delete specific policy, policy-ids must be used\n\n- name: Delete policies using template name\n  cisco.dcnm.dcnm_policy:\n    fabric: \"{{ ansible_it_fabric }}\"\n    state: deleted          # only choose form [merged, deleted, query]\n    config:\n      - name: template_101  # name is mandatory\n      - name: template_102  # name is mandatory\n      - name: template_103  # name is mandatory\n      - name: template_104  # name is mandatory\n      - name: template_105  # name is mandatory\n      - switch:\n          - ip: \"{{ ansible_switch1 }}\"\n          - ip: \"{{ ansible_switch2 }}\"\n\n- name: Delete policies using policy-id\n  cisco.dcnm.dcnm_policy:\n    fabric: \"{{ ansible_it_fabric }}\"\n    state: deleted          # only choose form [merged, deleted, query]\n    config:\n      - name: POLICY-101101  # name is mandatory\n      - name: POLICY-102102  # name is mandatory\n      - name: POLICY-103103  # name is mandatory\n      - name: POLICY-104104  # name is mandatory\n      - name: POLICY-105105  # name is mandatory\n      - switch:\n          - ip: \"{{ ansible_switch1 }}\"\n          - ip: \"{{ ansible_switch2 }}\"\n\n# QUERY\n\n# NOTE: In the case of Query using template names, all policies that have a matching template name will be\n#       returned\n\n- name: Query all policies from the specified switches\n  cisco.dcnm.dcnm_policy:\n    fabric: \"{{ ansible_it_fabric }}\"\n    state: query\n    config:\n      - switch:\n          - ip: \"{{ ansible_switch1 }}\"\n          - ip: \"{{ ansible_switch2 }}\"\n\n- name: Query policies matching template names\n  cisco.dcnm.dcnm_policy:\n    fabric: \"{{ ansible_it_fabric }}\"\n    state: query\n    config:\n      - name: template_101\n      - name: template_102\n      - name: template_103\n      - switch:\n          - ip: \"{{ ansible_switch1 }}\"\n\n- name: Query policies using policy-ids\n  cisco.dcnm.dcnm_policy:\n    fabric: \"{{ ansible_it_fabric }}\"\n    state: query\n    config:\n      - name: POLICY-101101\n      - name: POLICY-102102\n      - name: POLICY-103103\n      - switch:\n          - ip: \"{{ ansible_switch1 }}\"\n\n# Use the description as key\n\n# NOTE: As the description of the policy in NDFC/DCNM is not unique,\n#       the user must make sure no policies with the same description are created on NDFC out of the playbook.\n#       If the description is not unique, the module will raise an error.\n\n## Below task will create policies with description \"policy_radius\" on swtich1, switch2 and switch3,\n## and only create policy \"feature bfd\" and \"feature bash-shell\" on the switch1 only\n\n- name: Create policies\n  cisco.dcnm.dcnm_policy:\n    fabric: fabric_prod\n    use_desc_as_key: true\n    config:\n      - name: switch_freeform\n        create_additional_policy: false\n        description: policy_radius\n        policy_vars:\n          CONF: |\n            radius-server host 10.1.1.2 key 7 \"ljw3976!\" authentication accounting\n      - switch:\n          - ip: \"{{ switch1 }}\"\n            policies:\n              - name: switch_freeform\n                create_additional_policy: false\n                priority: 101\n                description: feature bfd\n                policy_vars:\n                  CONF: |\n                    feature bfd\n              - name: switch_freeform\n                create_additional_policy: false\n                priority: 102\n                description: feature bash-shell\n                policy_vars:\n                  CONF: |\n                    feature bash-shell\n          - ip: \"{{ switch2 }}\"\n          - ip: \"{{ switch3 }}\"\n</code></pre>"},{"location":"modules/dcnm_resource_manager/","title":"dcnm_resource_manager","text":"Details <ul> <li>author<ul> <li>Mallik Mudigonda (@mmudigon)</li> </ul> </li> <li>description<ul> <li>DCNM ansible module for creating, deleting and querying resources</li> </ul> </li> <li>short_description<ul> <li>DCNM ansible module for managing resources.</li> </ul> </li> <li>version_added<ul> <li>2.1.0</li> </ul> </li> </ul>"},{"location":"modules/dcnm_resource_manager/#options","title":"options","text":"Details"},{"location":"modules/dcnm_resource_manager/#config","title":"config","text":"Details <ul> <li>description<ul> <li>A list of dictionaries containing resources and switch information</li> </ul> </li> <li>elements<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_resource_manager/#entity_name","title":"entity_name","text":"Details <ul> <li>description<ul> <li>A unique name which identifies the entity to which the resourcce is allocated to. </li> <li>The format of this parameter depends on the scope_type. The details are provided in </li> <li>the EXAMPLES section</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_resource_manager/#pool_name","title":"pool_name","text":"Details <ul> <li>description<ul> <li>Name of the resource pool from which the resource is allocated</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_resource_manager/#pool_type","title":"pool_type","text":"Details <ul> <li>choices<ul> <li>ID</li> <li>IP</li> <li>SUBNET</li> </ul> </li> <li>description<ul> <li>Type of resource pool</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_resource_manager/#resource","title":"resource","text":"Details <ul> <li>description<ul> <li>Value of the resource being allocated </li> <li>The value will be </li> <li>an integer if pool_type is ID </li> <li>an IPV4/IPV6 address if pool_type is IP </li> <li>an IPV4 address/net_mask or IPV6 address/net_maskif pool_type is SUBNET</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_resource_manager/#scope_type","title":"scope_type","text":"Details <ul> <li>choices<ul> <li>fabric</li> <li>device</li> <li>device_interface</li> <li>device_pair</li> <li>link</li> </ul> </li> <li>description<ul> <li>Socpe of resource allocation</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_resource_manager/#switch","title":"switch","text":"Details <ul> <li>description<ul> <li>IP address or DNS name of the management interface of the switch to which the allocated resource is assigned to.</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_resource_manager/#fabric","title":"fabric","text":"Details <ul> <li>description<ul> <li>Name of the target fabric for resource manager operations</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_resource_manager/#state","title":"state","text":"Details <ul> <li>choices<ul> <li>merged</li> <li>deleted</li> <li>query</li> </ul> </li> <li>default<ul> <li>merged</li> </ul> </li> <li>description<ul> <li>The required state of the configuration after module completion.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_resource_manager/#examples","title":"Examples","text":"Details <pre><code>---\n# Entity name format\n# ==================\n#\n# The format of the entity name depends on the scope_type of the resource being allocated.\n\n# Scope Type                Entity Name\n# =====================================\n# Fabric                    Eg: My_Network_30000\n# Device                    Eg: loopback0\n# Device Pair               Eg: FDO21331S8T~FDO21332E6X~vPC1\n# Device Interface          Eg: FDO21332E6X~Ethernet1/13\n# Link                      Eg: FDO21332E6X~Ethernet1/3~FDO21331S8T~Ethernet1/3\n\n# where FDO21331S8T and FDO21331S8T are switch serial numbers\n\n# This module supports the following states:\n\n# Merged:\n#   Resources defined in the playbook will be merged into the target fabric.\n#     - If the Resources does not exist it will be added.\n#     - If the Resources exists but properties managed by the playbook are different\n#       they will be updated if possible.\n#     - Resources that are not specified in the playbook will be untouched.\n#\n# Deleted:\n#   Resources defined in the playbook will be deleted.\n#\n# Query:\n#   Returns the current DCNM state for the Resources listed in the playbook.\n\n# CREATING RESOURCES\n# ==================\n- name: Create Resources\n  cisco.dcnm.dcnm_resource_manager:\n    state: merged                               # choose form [merged, deleted, query]\n    fabric: test_fabric\n    config:\n      - entity_name: \"l3_vni_fabric\"            # A unique name to identify the resource\n        pool_type: \"ID\"                         # choose from ['ID', 'IP, 'SUBNET']\n        pool_name: \"L3_VNI\"                     # Based on the 'poolType', select appropriate name\n        scope_type: \"fabric\"                    # choose from ['fabric', 'device', device_interface', 'device_pair', 'link']\n        resource: \"101\"                         # The value of the resource being created\n\n      - entity_name: \"9M99N34RDED~9NXHSNTEO6C\"  # A unique name to identify the resource\n        pool_type: \"ID\"                         # choose from ['ID', 'IP, 'SUBNET']\n        pool_name: \"VPC_ID\"                     # Based on the 'poolType', select appropriate name\n        scope_type: \"device_pair\"               # choose from ['fabric', 'device', device_interface', 'device_pair', 'link']\n        switch:                                 # provide the switch information to which the given resource is to be attached\n          - 192.175.1.1\n          - 192.175.1.2\n        resource: \"500\"                         # The value of the resource being created\n\n      - entity_name: \"mmudigon-2\"               # A unique name to identify the resource\n        pool_type: \"IP\"                         # choose from ['ID', 'IP, 'SUBNET']\n        pool_name: \"LOOPBACK0_IP_POOL\"          # Based on the 'poolType', select appropriate name\n        scope_type: \"fabric\"                    # choose from ['fabric', 'device', device_interface', 'device_pair', 'link']\n        resource: \"110.1.1.1\"                   # The value of the resource being created\n\n      - entity_name: \"9M99N34RDED~Ethernet1/10\" # A unique name to identify the resource\n        pool_type: \"IP\"                         # choose from ['ID', 'IP, 'SUBNET']\n        pool_name: \"LOOPBACK1_IP_POOL\"          # Based on the 'poolType', select appropriate name\n        scope_type: \"device_interface\"          # choose from ['fabric', 'device', device_interface', 'device_pair', 'link']\n        switch:                                 # provide the switch information to which the given resource is to be attached\n          - 192.175.1.1\n        resource: \"fe:80::04\"                   # The value of the resource being created\n\n      - entity_name: \"9M99N34RDED~Ethernet1/3~9NXHSNTEO6C~Ethernet1/3\"  # A unique name to identify the resource\n        pool_type: \"SUBNET\"                     # choose from ['ID', 'IP, 'SUBNET']\n        pool_name: \"SUBNET\"                     # Based on the 'poolType', select appropriate name\n        scope_type: \"link\"                      # choose from ['fabric', 'device', device_interface', 'device_pair', 'link']\n        switch:                                 # provide the switch information to which the given resource is to be attached\n          - 192.175.1.1\n        resource: \"fe:80:05::05/64\"\n\n# DELETING RESOURCES\n# ==================\n\n- name: Delete Resources\n  cisco.dcnm.dcnm_resource_manager:\n    state: deleted                              # choose form [merged, deleted, query]\n    fabric: test_fabric\n    config:\n      - entity_name: \"l3_vni_fabric\"            # A unique name to identify the resource\n        pool_type: \"ID\"                         # choose from ['ID', 'IP, 'SUBNET']\n        pool_name: \"L3_VNI\"                     # Based on the 'poolType', select appropriate name\n        scope_type: \"fabric\"                    # choose from ['fabric', 'device', device_interface', 'device_pair', 'link']\n\n      - entity_name: \"9M99N34RDED~9NXHSNTEO6C\"  # A unique name to identify the resource\n        pool_type: \"ID\"                         # choose from ['ID', 'IP, 'SUBNET']\n        pool_name: \"VPC_ID\"                     # Based on the 'poolType', select appropriate name\n        scope_type: \"device_pair\"               # choose from ['fabric', 'device', device_interface', 'device_pair', 'link']\n        switch:                                 # provide the switch information to which the given resource is attached\n          - 192.175.1.1\n          - 192.175.1.2\n\n      - entity_name: \"mmudigon-2\"               # A unique name to identify the resource\n        pool_type: \"IP\"                         # choose from ['ID', 'IP, 'SUBNET']\n        pool_name: \"LOOPBACK0_IP_POOL\"          # Based on the 'poolType', select appropriate name\n        scope_type: \"fabric\"                    # choose from ['fabric', 'device', device_interface', 'device_pair', 'link']\n\n      - entity_name: \"9M99N34RDED~Ethernet1/10\" # A unique name to identify the resource\n        pool_type: \"IP\"                         # choose from ['ID', 'IP, 'SUBNET']\n        pool_name: \"LOOPBACK1_IP_POOL\"          # Based on the 'poolType', select appropriate name\n        scope_type: \"device_interface\"          # choose from ['fabric', 'device', device_interface', 'device_pair', 'link']\n        switch:                                 # provide the switch information to which the given resource is attached\n          - 192.175.1.1\n\n      - entity_name: \"9M99N34RDED~Ethernet1/3~9NXHSNTEO6C~Ethernet1/3\" # A unique name to identify the resource\n        pool_type: \"SUBNET\"                     # choose from ['ID', 'IP, 'SUBNET']\n        pool_name: \"SUBNET\"                     # Based on the 'poolType', select appropriate name\n        scope_type: \"link\"                      # choose from ['fabric', 'device', device_interface', 'device_pair', 'link']\n        switch:                                 # provide the switch information to which the given resource is attached\n          - 192.175.1.1\n\n# QUERY SERVICE POLICIES\n# ======================\n\n- name: Query all Resources - no filters\n  cisco.dcnm.dcnm_resource_manager:\n    state: query                               # choose form [merged, deleted, query]\n    fabric: test_fabric\n\n- name: Query Resources - filter by entity name\n  cisco.dcnm.dcnm_resource_manager:\n    state: query                                # choose form [merged, deleted, query]\n    fabric: test_fabric\n    config:\n      - entity_name: \"l3_vni_fabric\"            # A unique name to identify the resource\n      - entity_name: \"loopback_dev\"             # A unique name to identify the resource\n      - entity_name: \"9M99N34RDED~9NXHSNTEO6C\"  # A unique name to identify the resource\n      - entity_name: \"9M99N34RDED~Ethernet1/10\" # A unique name to identify the resource\n      - entity_name: \"9M99N34RDED~Ethernet1/2~~9NXHSNTEO6CEthernet1/2\" # A unique name to identify the resource\n\n- name: Query Resources - filter by switch\n  cisco.dcnm.dcnm_resource_manager:\n    state: query                                # choose form [merged, deleted, query]\n    fabric: test_fabric\n    config:\n      - switch:                                 # provide the switch information to which the given resource is attached\n          - 192.175.1.1\n\n- name: Query Resources - filter by fabric and pool name\n  cisco.dcnm.dcnm_resource_manager:\n    state: query                                # choose form [merged, deleted, query]\n    fabric: test_fabric\n    config:\n      - pool_name: \"L3_VNI\"                     # Based on the 'poolType', select appropriate name\n      - pool_name: \"VPC_ID\"                     # Based on the 'poolType', select appropriate name\n      - pool_name: \"SUBNET\"                     # Based on the 'poolType', select appropriate name\n\n- name: Query Resources - filter by switch and pool name\n  cisco.dcnm.dcnm_resource_manager:\n    state: query                                # choose form [merged, deleted, query]\n    fabric: \"{{ ansible_it_fabric }}\"\n    config:\n      - pool_name: \"L3_VNI\"                     # Based on the 'poolType', select appropriate name\n        switch:                                 # provide the switch information to which the given resource is attached\n          - 192.175.1.1\n      - pool_name: \"LOOPBACK_ID\"                # Based on the 'poolType', select appropriate name\n        switch:                                 # provide the switch information to which the given resource is attached\n          - 192.175.1.1\n      - pool_name: \"VPC_ID\"                     # Based on the 'poolType', select appropriate name\n        switch:                                 # provide the switch information to which the given resource is attached\n          - 192.175.1.2\n\n- name: Query Resources - mixed query\n  cisco.dcnm.dcnm_resource_manager:\n    state: query                                # choose form [merged, deleted, query]\n    fabric: test_fabric\n    config:\n      - entity_name: \"l2_vni_fabric\"            # A unique name to identify the resource\n      - switch:                                 # provide the switch information to which the given resource is attached\n          - 192.175.1.1\n      - pool_name: \"LOOPBACK_ID\"                # Based on the 'poolType', select appropriate name\n      - pool_name: \"VPC_ID\"                     # Based on the 'poolType', select appropriate name\n        switch:                                 # provide the switch information to which the given resource is attached\n          - 192.175.1.1\n</code></pre>"},{"location":"modules/dcnm_rest/","title":"dcnm_rest","text":"Details <ul> <li>author<ul> <li>['Mike Wiebe (@mikewiebe)']</li> </ul> </li> <li>description<ul> <li>Send REST API requests to DCNM controller.</li> </ul> </li> <li>short_description<ul> <li>Send REST API requests to DCNM controller.</li> </ul> </li> <li> <p>version_added</p> <ul> <li>0.9.0</li> </ul> </li> <li> <p>author</p> <ul> <li>Mike Wiebe (@mikewiebe)</li> </ul> </li> </ul>"},{"location":"modules/dcnm_rest/#options","title":"options","text":"Details"},{"location":"modules/dcnm_rest/#data","title":"data","text":"Details <ul> <li>aliases<ul> <li>json_data</li> </ul> </li> <li>description<ul> <li>Additional data in JSON or TEXT to include with the REST API call</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>raw</li> </ul> </li> </ul>"},{"location":"modules/dcnm_rest/#method","title":"method","text":"Details <ul> <li>choices<ul> <li>GET</li> <li>POST</li> <li>PUT</li> <li>DELETE</li> </ul> </li> <li>description<ul> <li>REST API Method</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_rest/#path","title":"path","text":"Details <ul> <li>description<ul> <li>REST API Path Endpoint</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_rest/#examples","title":"Examples","text":"Details <pre><code>---\n# This module can be used to send any REST API requests that are supported by\n# the DCNM controller.\n#\n# This module is not idempotent but can be used as a stop gap until a feature\n# module can be developed for the target DCNM functionality.\n\n- name: Gather List of Fabrics from DCNM\n  dcnm_rest:\n    method: GET\n    path: /rest/control/fabrics\n\n- name: Set deployment to false in lanAttachList for vrf\n  dcnm_rest:\n    method: POST\n    path: /rest/top-down/fabrics/fabric1/vrfs/attachments\n    json_data: '[{\"vrfName\":\"sales66_vrf1\",\"lanAttachList\":[{\"fabric\":\"fabric1\",\"vrfName\":\"sales66_vrf1\",\"serialNumber\":\"FDO21392QKM\",\"vlan\":2000,\"freeformConfig\":\"\",\"deployment\":false,\"extensionValues\":\"\",\"instanceValues\":\"{\\\"loopbackId\\\":\\\"\\\",\\\"loopbackIpAddress\\\":\\\"\\\",\\\"loopbackIpV6Address\\\":\\\"\\\"}\"}]}]'\n\n# Read payload data from file and validate a template\n- set_fact:\n    data: \"{{ lookup('file', 'validate_payload') }}\"\n\n- name: Validate a template\n  cisco.dcnm.dcnm_rest:\n    method: POST\n    path: /fm/fmrest/config/templates/validate\n    json_data: \"{{ data }}\"\n    register: result\n</code></pre>"},{"location":"modules/dcnm_rest/#return","title":"Return","text":"Details <pre><code>---\nresponse:\n    description:\n    - Success or Error Data retrieved from DCNM\n    returned: always\n    type: list\n    elements: dict\n</code></pre>"},{"location":"modules/dcnm_service_node/","title":"dcnm_service_node","text":"Details <ul> <li>author<ul> <li>Karthik Babu Harichandra Babu(@kharicha)</li> </ul> </li> <li>description<ul> <li>Create/Modify/Delete service node based on type and attached interfaces from a DCNM managed VXLAN fabric.</li> </ul> </li> <li>short_description<ul> <li>Create/Modify/Delete service node based on type and attached interfaces from a DCNM managed VXLAN fabric.</li> </ul> </li> <li>version_added<ul> <li>1.2.0</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_node/#options","title":"options","text":"Details"},{"location":"modules/dcnm_service_node/#config","title":"config","text":"Details <ul> <li>description<ul> <li>List of details of service nodes being managed. Not required for state deleted</li> </ul> </li> <li>elements<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_node/#attach_interface","title":"attach_interface","text":"Details <ul> <li>description<ul> <li>List of switch interfaces where the service node will be attached</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_node/#form_factor","title":"form_factor","text":"Details <ul> <li>choices<ul> <li>physical</li> <li>virtual</li> </ul> </li> <li>default<ul> <li>physical</li> </ul> </li> <li>description<ul> <li>Name of the form factor of the service node</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_node/#name","title":"name","text":"Details <ul> <li>description<ul> <li>Name of service node</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_node/#svc_int_name","title":"svc_int_name","text":"Details <ul> <li>description<ul> <li>Name of the service interface</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_node/#switches","title":"switches","text":"Details <ul> <li>description<ul> <li>IP address of the switch where service node will be added/deleted</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_node/#type","title":"type","text":"Details <ul> <li>choices<ul> <li>firewall</li> <li>load_balancer</li> <li>virtual_network_function</li> </ul> </li> <li>default<ul> <li>firewall</li> </ul> </li> <li>description<ul> <li>Service node type</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_node/#fabric","title":"fabric","text":"Details <ul> <li>description<ul> <li>Name of attached easy fabric to which service node is attached</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_node/#service_fabric","title":"service_fabric","text":"Details <ul> <li>description<ul> <li>Name of external fabric where the service node is located</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_node/#state","title":"state","text":"Details <ul> <li>choices<ul> <li>merged</li> <li>replaced</li> <li>overridden</li> <li>deleted</li> <li>query</li> </ul> </li> <li>default<ul> <li>merged</li> </ul> </li> <li>description<ul> <li>The state of DCNM after module completion.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_node/#examples","title":"Examples","text":"Details <pre><code>---\n# L4-L7 Service Insertion:\n#\n# Cisco DCNM has the ability to insert Layer 4-Layer 7 (L4-L7) service devices in a data center fabric, and also enables selectively\n# redirecting traffic to these service devices. You can add a service node, create route peering between the service node and the\n# service leaf switch, and then selectively redirect traffic to these service nodes. Ansible collections support 3 modules viz.\n# Service Node, Service Route Peering and Service Policy to enable this.\n#\n# Service Node:\n#\n# You have to create an external fabric and specify that a service node resides in that external fabric during service node creation.\n# Service policies are created on the service node to determine the actions to be applied to the traffic\n#\n# Route Peerings:\n#\n# Multiple Service Route Peerings can be created under service node. Each Route Peering creates required service networks that is used to\n# carry traffic towards the service node.\n#\n# Service Policy:\n#\n# Each route peering can have multiple service policies. Service policies can only be created for networks created through route peerings.\n# The service policies define the actions to be taken for matching traffic.\n#\n# Dependency Tree:\n#\n# Service Node\n# |\n# |---- Route Peering 1\n# |     |\n# .     |---- Service Policy 1\n# .     |\n# .     .\n# .     .\n# .     .\n# .     |---- Service Policy N\n# .\n# |---- Route Peering N\n#       |\n#       |---- Service Policy 1\n#       |\n#       .\n#       .\n#       .\n#       |---- Service Policy N\n#\n# This module supports the following states:\n#\n# Merged:\n#   Service Nodes defined in the playbook will be merged into the service fabric.\n#     - If the service node does not exist it will be added.\n#     - If the service node exists but properties managed by the playbook are different\n#       they will be updated if possible.\n#     - Service Nodes that are not specified in the playbook will be untouched.\n#\n# Replaced:\n#   Service Nodes defined in the playbook will be replaced in the service fabric.\n#     - If the service node does not exist it will be added.\n#     - If the service node exists but properties managed by the playbook are different\n#       they will be updated if possible.\n#     - Properties that can be managed by the module but are not specified\n#       in the playbook will be deleted or defaulted if possible.\n#     - Service Nodes that are not specified in the playbook will be untouched.\n#\n# Overridden:\n#   Service Node defined in the playbook will be overridden in the service fabric.\n#     - If the service node does not exist it will be added.\n#     - If the service node exists but properties managed by the playbook are different\n#       they will be updated if possible.\n#     - Properties that can be managed by the module but are not specified\n#       in the playbook will be deleted or defaulted if possible.\n#     - Service Nodes that are not specified in the playbook will be deleted.\n#\n# Deleted:\n#   Service Node defined in the playbook will be deleted.\n#   If no Service Nodes are provided in the playbook, all service node present on that DCNM fabric will be deleted.\n#\n# Query:\n#   Returns the current DCNM state for the service node listed in the playbook.\n\n- name: Merge Service Nodes\n  cisco.dcnm.dcnm_service_node:\n    fabric: Fabric1\n    service_fabric: external\n    state: merged\n    config:\n    - name: SN-11\n      type: firewall\n      form_factor: virtual\n      svc_int_name: svc1\n      attach_interface: Ethernet1/1\n      switches:\n      - 192.168.1.224\n    - name: SN-12\n      type: firewall\n      form_factor: virtual\n      svc_int_name: svc1\n      attach_interface: vPC1\n      switches:  # up to two switches, if two switches are provided, vpc is only option\n      - 192.168.1.224\n      - 192.168.1.225\n\n- name: Replace Service Nodes form factor/type parameter\n  cisco.dcnm.dcnm_service_node:\n    fabric: Fabric1\n    service_fabric: external\n    state: replaced\n    config:\n    - name: SN-11\n      type: firewall\n   #  Replace can only modify the form factor\n   #  form_factor: virtual  # the virtual will be changed to new physical\n   #  form_factor: physical\n      svc_int_name: svc1\n      attach_interface: Ethernet1/1\n      switches:\n      - 192.168.1.224\n   #   Nothing will be replaced in the below service node as there is no change\n   #   Dont touch this if its present on DCNM\n   # - name: SN-12\n   #   type: firewall\n   #   form_factor: virtual\n   #   svc_int_name: svc1\n   #   attach_interface: vPC1\n   #   switches:  # up to two switches, if two switches are provided, vpc is only option\n   #   - 192.168.1.224\n   #   - 192.168.1.225\n\n- name: Override Service Nodes\n  cisco.dcnm.dcnm_service_node:\n    fabric: Fabric1\n    service_fabric: external\n    state: overridden\n    config:\n   # Create this service node\n    - name: SN-13\n      type: firewall\n      form_factor: virtual\n      svc_int_name: svc1\n      attach_interface: Ethernet1/1\n      switches:\n      - 192.168.1.224\n   # Delete this service node from the DCNM\n   # - name: SN-11\n   #   type: firewall\n   #   form_factor: virtual\n   #   svc_int_name: svc1\n   #   attach_interface: Ethernet1/1\n   #   switches:\n   #   - 192.168.1.224\n   # Delete this service node from the DCNM\n   # - name: SN-12\n   #   type: firewall\n   #   form_factor: virtual\n   #   svc_int_name: svc1\n   #   attach_interface: vPC1\n   #   switches:  # up to two switches, if two switches are provided, vpc is only option\n   #   - 192.168.1.224\n   #   - 192.168.1.225\n\n- name: Delete selected Service Nodes\n  cisco.dcnm.dcnm_service_node:\n    fabric: Fabric1\n    service_fabric: external\n    state: deleted\n    config:\n    - name: SN-11\n      type: firewall\n      form_factor: virtual\n      svc_int_name: svc1\n      attach_interface: Ethernet1/1\n      switches:\n      - 192.168.1.224\n    - name: SN-12\n      type: firewall\n      form_factor: virtual\n      svc_int_name: svc1\n      attach_interface: vPC1\n      switches:  # up to two switches, if two switches are provided, vpc is only option\n      - 192.168.1.224\n      - 192.168.1.225\n\n- name: Delete all the Service Nodes\n  cisco.dcnm.dcnm_service_node:\n    fabric: Fabric1\n    service_fabric: external\n    state: deleted\n\n- name: Query Service Nodes state for SN-11 and SN-12\n  cisco.dcnm.dcnm_service_node:\n    fabric: Fabric1\n    service_fabric: external\n    state: query\n    config:\n    - name: SN-11\n      type: firewall\n      form_factor: virtual\n      svc_int_name: svc1\n      attach_interface: Ethernet1/1\n      switches:\n      - 192.168.1.224\n    - name: SN-12\n      type: firewall\n      form_factor: virtual\n      svc_int_name: svc1\n      attach_interface: vPC1\n      switches:  # up to two switches, if two switches are provided, vpc is only option\n      - 192.168.1.224\n      - 192.168.1.225\n\n- name: Query all the Service Nodes\n  cisco.dcnm.dcnm_service_node:\n    fabric: Fabric1\n    service_fabric: external\n    state: query\n</code></pre>"},{"location":"modules/dcnm_service_policy/","title":"dcnm_service_policy","text":"Details <ul> <li>author<ul> <li>Mallik Mudigonda (@mmudigon)</li> </ul> </li> <li>description<ul> <li>DCNM ansible module for creating, deleting, querying and modifying service policies</li> </ul> </li> <li>short_description<ul> <li>DCNM ansible module for managing service policies.</li> </ul> </li> <li>version_added<ul> <li>1.2.0</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_policy/#options","title":"options","text":"Details"},{"location":"modules/dcnm_service_policy/#attach","title":"attach","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>a flag specifying if the given service policy is to be attached to the specified service node</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_policy/#config","title":"config","text":"Details <ul> <li>description<ul> <li>a list of dictionaries containing service policy and switch information</li> </ul> </li> <li>elements<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_policy/#dest_network","title":"dest_network","text":"Details <ul> <li>description<ul> <li>name of the destination network for this service policy</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_policy/#dest_vrf","title":"dest_vrf","text":"Details <ul> <li>description<ul> <li>name of the destination vrf for this service policy</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_policy/#name","title":"name","text":"Details <ul> <li>description<ul> <li>a unique name which identifies the service policy</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_policy/#next_hop","title":"next_hop","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>next hop ip address to be used in source to network direction </li> <li>This must exactly match the next hop IP configured for the route peering associated with this policy</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_policy/#policy","title":"policy","text":"Details <ul> <li>description<ul> <li>details of the policy (ACL) to be applied</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_policy/#acl_name","title":"acl_name","text":"Details <ul> <li>default<ul> <li>will be auto-generated by DCNM</li> </ul> </li> <li>description<ul> <li>Name of the ACL in the forward direction</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_policy/#action","title":"action","text":"Details <ul> <li>choices<ul> <li>permit</li> <li>deny</li> </ul> </li> <li>default<ul> <li>permit</li> </ul> </li> <li>description<ul> <li>action to apply for traffic matching the service profile</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_policy/#dest_port","title":"dest_port","text":"Details <ul> <li>choices<ul> <li>any</li> <li>Min 1</li> <li>Max 65535</li> </ul> </li> <li>description<ul> <li>destination port number to be matched to apply this ACL</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_policy/#next_hop_option","title":"next_hop_option","text":"Details <ul> <li>choices<ul> <li>none</li> <li>drop-on-fail</li> <li>drop</li> </ul> </li> <li>default<ul> <li>none</li> </ul> </li> <li>description<ul> <li>option to specify how to redirect traffic</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_policy/#proto","title":"proto","text":"Details <ul> <li>choices<ul> <li>ip</li> <li>icmp</li> <li>tcp</li> <li>udp</li> </ul> </li> <li>description<ul> <li>protocol to be matched to apply this ACL</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_policy/#rev_acl_name","title":"rev_acl_name","text":"Details <ul> <li>default<ul> <li>will be auto-generated by DCNM</li> </ul> </li> <li>description<ul> <li>Name of the ACL in the reverse direction</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_policy/#rev_route_map_num","title":"rev_route_map_num","text":"Details <ul> <li>description<ul> <li>route map match number for reverse direction </li> <li>Minimum Value (1), Maximum Value (65535) </li> <li>Default value is auto-generated by DCNM</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_policy/#route_map_num","title":"route_map_num","text":"Details <ul> <li>description<ul> <li>route map match number </li> <li>Minimum Value (1), Maximum Value (65535) </li> <li>Default value is auto-generated by DCNM</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_policy/#src_port","title":"src_port","text":"Details <ul> <li>choices<ul> <li>any</li> <li>Min 1</li> <li>Max 65535</li> </ul> </li> <li>description<ul> <li>source port number to be matched to apply this ACL</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_policy/#reverse_next_hop","title":"reverse_next_hop","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>reverse next hop ip address to be used in network to source direction </li> <li>This must exactly match the reverse next hop IP configured for the route peering associated with this policy</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_policy/#src_network","title":"src_network","text":"Details <ul> <li>description<ul> <li>name of the source network for this service policy</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_policy/#src_vrf","title":"src_vrf","text":"Details <ul> <li>description<ul> <li>name of the source vrf for this service policy</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_policy/#deploy","title":"deploy","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>a flag specifying if a service policy is to be deployed on the switches</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_policy/#fabric","title":"fabric","text":"Details <ul> <li>description<ul> <li>name of the target fabric for service policy operations</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_policy/#service_fabric","title":"service_fabric","text":"Details <ul> <li>description<ul> <li>name of the external fabric attached to the service node for service policy operations</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_policy/#state","title":"state","text":"Details <ul> <li>choices<ul> <li>merged</li> <li>replaced</li> <li>overridden</li> <li>deleted</li> <li>query</li> </ul> </li> <li>default<ul> <li>merged</li> </ul> </li> <li>description<ul> <li>the required state of the configuration after module completion.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_policy/#examples","title":"Examples","text":"Details <pre><code>---\n# L4-L7 Service Insertion:\n#\n# Cisco DCNM has the ability to insert Layer 4-Layer 7 (L4-L7) service devices in a data center fabric, and also enables selectively\n# redirecting traffic to these service devices. You can add a service node, create route peering between the service node and the\n# service leaf switch, and then selectively redirect traffic to these service nodes. Ansible collections support 3 modules viz.\n# Service Node, Service Route Peering and Service Policy to enable this.\n#\n# Service Node:\n#\n# You have to create an external fabric and specify that a service node resides in that external fabric during service node creation.\n# Service policies are created on the service node to determine the actions to be applied to the traffic\n#\n# Route Peerings:\n#\n# Multiple Service Route Peerings can be created under service node. Each Route Peering creates required service networks that is used to\n# carry traffic towards the service node.\n#\n# Service Policy:\n#\n# Each route peering can have multiple service policies. Service policies can only be created for networks created through route peerings.\n# The service policies define the actions to be taken for matching traffic.\n#\n# Dependency Tree:\n#\n# Service Node\n# |\n# |---- Route Peering 1\n# |     |\n# .     |---- Service Policy 1\n# .     |\n# .     .\n# .     .\n# .     .\n# .     |---- Service Policy N\n# .\n# |---- Route Peering N\n#       |\n#       |---- Service Policy 1\n#       |\n#       .\n#       .\n#       .\n#       |---- Service Policy N\n#\n#\n# This module supports the following states:\n\n# Merged:\n#   Service Policies defined in the playbook will be merged into the target fabric.\n#     - If the Service Policies does not exist it will be added.\n#     - If the Service Policies exists but properties managed by the playbook are different\n#       they will be updated if possible.\n#     - Service Policies that are not specified in the playbook will be untouched.\n#\n# Replaced:\n#   Service Policies defined in the playbook will be replaced in the target fabric.\n#     - If the Service Policies does not exist it will be added.\n#     - If the Service Policies exists but properties managed by the playbook are different\n#       they will be updated if possible.\n#     - Properties that can be managed by the module but are not specified\n#       in the playbook will be deleted or defaulted if possible.\n#     - Service Policies that are not specified in the playbook will be untouched.\n#\n# Overridden:\n#   Service Policies defined in the playbook will be overridden in the target fabric.\n#     - If the Service Policies does not exist it will be added.\n#     - If the Service Policies exists but properties managed by the playbook are different\n#       they will be updated if possible.\n#     - Properties that can be managed by the module but are not specified\n#       in the playbook will be deleted or defaulted if possible.\n#     - Service Policies that are not specified in the playbook will be deleted.\n#\n# Deleted:\n#   Service Policies defined in the playbook will be deleted.\n#\n# Query:\n#   Returns the current DCNM state for the Service Policies listed in the playbook.\n\n# CREATING SERVICE POLICIES\n# =========================\n\n- name: Create service policy including all optional objects\n  cisco.dcnm.dcnm_service_policy:\n    fabric: test_fabric\n    service_fabric: external\n    attach: true\n    deploy: true\n    state: merged\n    config:\n      - name: service_policy_1\n        node_name: it-sn-1\n        rp_name: it-fw-rp1\n        src_vrf: vrf_11\n        dest_vrf: vrf_11\n        src_network: net_11\n        dest_network: net_12\n        next_hop: 192.161.1.100\n        reverse_next_hop: 192.161.2.100\n        reverse: true\n        policy:\n          proto: tcp\n          src_port: any\n          dest_port: 22\n          action: permit\n          next_hop_option:  none\n          acl_name: fwd_acl_10\n          rev_acl_name: rev_acl_10\n          route_map_num: 101\n          rev_route_map_num: 102\n\n# DELETE SERVICE POLICIES\n# =======================\n\n# 1. With Policy Name and Node name\n#\n# Deletes the specific service policy specified from the given node\n\n- name: Delete service policies with policy name and node name\n  cisco.dcnm.dcnm_service_policy:\n    fabric: test_fabric\n    service_fabric: external\n    state: deleted\n    config:\n      - name: service_policy_1\n        node_name: it-sn-1\n\n      - name: service_policy_2\n        node_name: it-sn-2\n\n      - name: service_policy_3\n        node_name: it-sn-2\n\n      - name: service_policy_4\n        node_name: it-sn-2\n\n      - name: service_policy_5\n        node_name: it-sn-2\n\n# 2. With Node name alone\n#\n# Deletes all service policies from the specified nodes\n\n- name: Delete service policies with Node names\n  cisco.dcnm.dcnm_service_policy:\n    fabric: test_fabric\n    service_fabric: external\n    state: deleted\n    config:\n      - node_name: it-sn-1\n      - node_name: it-sn-2\n\n# 3. With Node name and RP name\n#\n# Deletes all service policies under the specified route peering and node\n\n- name: Delete service policies with Node name and RP name\n  cisco.dcnm.dcnm_service_policy:\n    fabric: test_fabric\n    service_fabric: external\n    state: deleted\n    config:\n      - node_name: it-sn-1\n        rp_name: it-fw-rp1\n\n      - node_name: it-sn-2\n        rp_name: it-fw-rp2\n\n# 4. Without config\n#\n# Deletes all service policies on the given fabric and attached fabric\n\n- name: Delete service policies without config\n  cisco.dcnm.dcnm_service_policy:\n    fabric: test_fabric\n    service_fabric: external\n    state: deleted\n\n# OVERRIDE SERVICE POLICIES\n# =========================\n\n# When this playbook is executed, service policy service_policy_1 will be created or replaced and all\n# other service policies in test_fabric and external will be deleted\n\n- name: Override all existing service policies with a new one\n  cisco.dcnm.dcnm_service_policy:\n    fabric: test_fabric\n    service_fabric: external\n    attach: true\n    deploy: true\n    state: overridden\n    config:\n      - name: service_policy_1\n        node_name: it-sn-1\n        rp_name: it-fw-rp1\n        src_vrf: vrf_11\n        dest_vrf: vrf_11\n        src_network: net_11\n        dest_network: net_12\n        next_hop: 192.161.1.100\n        reverse_next_hop: 192.161.2.100\n        policy:\n          proto: icmp\n          src_port: 555\n          dest_port: 22\n          action: permit\n          next_hop_option:  none\n          acl_name: fwd_acl_555\n          rev_acl_name: rev_acl_555\n          route_map_num: 555\n          rev_route_map_num: 556\n\n# REPLACE SERVICE POLICIES\n# ========================\n\n- name: Replace service policy_1 with the one specified below\n  cisco.dcnm.dcnm_service_policy:\n    fabric: test_fabric\n    service_fabric: external\n    attach: true\n    deploy: true\n    state: replaced\n    config:\n      - name: service_policy_1\n        node_name: it-sn-1\n        rp_name: it-fw-rp1\n        src_vrf: vrf_11\n        dest_vrf: vrf_11\n        src_network: net_11\n        dest_network: net_12\n        next_hop: 192.161.1.100\n        reverse_next_hop: 192.161.2.100\n        policy:\n          proto: udp\n          src_port: 501\n          dest_port: 502\n          action: deny\n          next_hop_option: drop_on_fail\n\n# QUERY SERVICE POLICIES\n# ======================\n\n- name: Query service policies based on service node and policy name\n  cisco.dcnm.dcnm_service_policy:\n    fabric: test_fabric\n    service_fabric: external\n    state: query\n    config:\n      - name: service_policy_1\n        node_name: it-sn-1\n\n- name: Query service policies based on service node\n  cisco.dcnm.dcnm_service_policy:\n  fabric: test_fabric\n  service_fabric: external\n  state: query\n  config:\n    - node_name: it-sn-1\n</code></pre>"},{"location":"modules/dcnm_service_route_peering/","title":"dcnm_service_route_peering","text":"Details <ul> <li>author<ul> <li>Mallik Mudigonda (@mmudigon)</li> </ul> </li> <li>description<ul> <li>DCNM Ansible Module for Creating, Deleting, Querying and Modifying Route Peerings</li> </ul> </li> <li>short_description<ul> <li>DCNM Ansible Module for managing Service Route Peerings.</li> </ul> </li> <li>version_added<ul> <li>1.2.0</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#options","title":"options","text":"Details"},{"location":"modules/dcnm_service_route_peering/#attach","title":"attach","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>A flag specifying if the given route peering is to be attached to the specified service node</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#config","title":"config","text":"Details <ul> <li>description<ul> <li>A list of dictionaries containing route peering and switch information</li> </ul> </li> <li>elements<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#deploy_mode","title":"deploy_mode","text":"Details <ul> <li>choices<ul> <li>intra_tenant_fw</li> <li>inter_tenant_fw</li> <li>one_arm_adc</li> <li>two_arm_adc</li> </ul> </li> <li>description<ul> <li>Type of service node.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#first_arm","title":"first_arm","text":"Details <ul> <li>description<ul> <li>Details regarding first arm of the route peering </li> <li>This parameter is applicable only when 'deploy_mode' is either 'one_arm_adc' or 'two_arm_adc'</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#name","title":"name","text":"Details <ul> <li>description<ul> <li>Network name</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#profile","title":"profile","text":"Details <ul> <li>description<ul> <li>Profile information for the first arm</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#adv_host","title":"adv_host","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Flag indicating if the host is to be advertised </li> <li>This parameter is applicable only when 'peering_option' is 'ebgp'</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#int_descr","title":"int_descr","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Description of the interface</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#ipv4_gw","title":"ipv4_gw","text":"Details <ul> <li>description<ul> <li>IPV4 gateway information including the mask e.g. 192.168.1.1/24</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#ipv4_lo","title":"ipv4_lo","text":"Details <ul> <li>description<ul> <li>IPv4 loopback address </li> <li>This parameter is applicable only when 'peering_option' is 'ebgp'</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#ipv4_neighobor","title":"ipv4_neighobor","text":"Details <ul> <li>description<ul> <li>IPv4 neighbor address </li> <li>This parameter is applicable only when 'peering_option' is 'ebgp'</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#ipv4_vpc_peer_lo","title":"ipv4_vpc_peer_lo","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>IPv4 vpc peer loopback address </li> <li>This parameter is applicable only when 'peering_option' is 'ebgp' This parameter is mandatory if the service node is part of VPC switch pair</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#ipv6_gw","title":"ipv6_gw","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>IPV6 gateway information including the mask e.g., 2000:01:01::01/64</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#ipv6_lo","title":"ipv6_lo","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>IPv6 loopback address </li> <li>This parameter is applicable only when 'peering_option' is 'ebgp'</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#ipv6_neighbor","title":"ipv6_neighbor","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>IPv6 neighbor address </li> <li>This parameter is applicable only when 'peering_option' is 'ebgp'</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#ipv6_vpc_peer_lo","title":"ipv6_vpc_peer_lo","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>IPv6 vpc peer loopback address </li> <li>This parameter is applicable only when 'peering_option' is 'ebgp' This parameter is mandatory if the service node is part of VPC switch pair</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#local_asn","title":"local_asn","text":"Details <ul> <li>default<ul> <li>12345</li> </ul> </li> <li>description<ul> <li>Local ASN number </li> <li>This parameter is applicable only when 'peering_option' is 'ebgp'</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#neigh_int_descr","title":"neigh_int_descr","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Description of the interface </li> <li>This parameter is applicable only when 'peering_option' is 'ebgp'</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#route_map_tag","title":"route_map_tag","text":"Details <ul> <li>default<ul> <li>12345</li> </ul> </li> <li>description<ul> <li>Route Tag </li> <li>This parameter is applicable only when 'peering_option' is 'ebgp'</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#static_route","title":"static_route","text":"Details <ul> <li>default<ul> <li>[]</li> </ul> </li> <li>description<ul> <li>Static route information </li> <li>This parameter is applicable only when 'peering_option' is 'static'</li> </ul> </li> <li>elements<ul> <li>dict</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#next_hop","title":"# next_hop","text":"Details <ul> <li>description<ul> <li>Gateway IP addresses, for e.g., 192.168.1.1</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#subnet","title":"# subnet","text":"Details <ul> <li>description<ul> <li>Subnet information, for e.g., 11.0.0.0/24</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#tag","title":"tag","text":"Details <ul> <li>default<ul> <li>12345</li> </ul> </li> <li>description<ul> <li>Route tag information</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#vlan_name","title":"vlan_name","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Vlan name</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#vlan_id","title":"vlan_id","text":"Details <ul> <li>default<ul> <li>0</li> </ul> </li> <li>description<ul> <li>Vlan Id for the  first arm </li> <li>If this object is included and if it is already in use, then the module will allocate a new VLAN ID and create the Route Peering. The user provided 'vlan_id' will be ignored.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#vrf","title":"vrf","text":"Details <ul> <li>description<ul> <li>VRF name for the first arm</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#inside_network","title":"inside_network","text":"Details <ul> <li>description<ul> <li>Details regarding inside network of the route peering </li> <li>This parameter is applicable only when 'deploy_mode' is 'intra_tenant_fw' or 'inter_tenant_fw'</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#name_1","title":"name","text":"Details <ul> <li>description<ul> <li>Network name</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#profile_1","title":"profile","text":"Details <ul> <li>description<ul> <li>Profile information for the inside network</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#adv_host_1","title":"adv_host","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Flag indicating if the host is to be advertised </li> <li>This parameter is applicable only when 'peering_option' is 'ebgp'</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#int_descr_1","title":"int_descr","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Description of the interface</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#ipv4_gw_1","title":"ipv4_gw","text":"Details <ul> <li>description<ul> <li>IPV4 gateway information including the mask e.g. 192.168.1.1/24</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#ipv4_lo_1","title":"ipv4_lo","text":"Details <ul> <li>description<ul> <li>IPv4 loopback address </li> <li>This parameter is applicable only when 'peering_option' is 'ebgp'</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#ipv4_neighobor_1","title":"ipv4_neighobor","text":"Details <ul> <li>description<ul> <li>IPv4 neighbor address </li> <li>This parameter is applicable only when 'peering_option' is 'ebgp'</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#ipv4_vpc_peer_lo_1","title":"ipv4_vpc_peer_lo","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>IPv4 vpc peer loopback address </li> <li>This parameter is applicable only when 'peering_option' is 'ebgp'. This parameter is mandatory if the service node is part of VPC switch pair</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#ipv6_gw_1","title":"ipv6_gw","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>IPV6 gateway information including the mask e.g., 2000:01:01::01/64</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#ipv6_lo_1","title":"ipv6_lo","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>IPv6 loopback address </li> <li>This parameter is applicable only when 'peering_option' is 'ebgp'</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#ipv6_neighbor_1","title":"ipv6_neighbor","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>IPv6 neighbor address </li> <li>This parameter is applicable only when 'peering_option' is 'ebgp'</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#ipv6_vpc_peer_lo_1","title":"ipv6_vpc_peer_lo","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>IPv6 vpc peer loopback address </li> <li>This parameter is applicable only when 'peering_option' is 'ebgp'. This object is mandatory if the service node switch is part of VPC pair</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#local_asn_1","title":"local_asn","text":"Details <ul> <li>default<ul> <li>12345</li> </ul> </li> <li>description<ul> <li>Local ASN number </li> <li>This parameter is applicable only when 'peering_option' is 'ebgp'</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#neigh_int_descr_1","title":"neigh_int_descr","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Description of the interface </li> <li>This parameter is applicable only when 'peering_option' is 'ebgp'</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#route_map_tag_1","title":"route_map_tag","text":"Details <ul> <li>default<ul> <li>12345</li> </ul> </li> <li>description<ul> <li>Route Tag </li> <li>This parameter is applicable only when 'peering_option' is 'ebgp'</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#static_route_1","title":"static_route","text":"Details <ul> <li>default<ul> <li>[]</li> </ul> </li> <li>description<ul> <li>Static route information </li> <li>This parameter is applicable only when 'peering_option' is 'static'</li> </ul> </li> <li>elements<ul> <li>dict</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#next_hop_1","title":"# next_hop","text":"Details <ul> <li>description<ul> <li>Gateway IP addresses, for e.g., 192.168.1.1</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#subnet_1","title":"# subnet","text":"Details <ul> <li>description<ul> <li>Subnet information, for e.g., 11.0.0.0/24</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#tag_1","title":"tag","text":"Details <ul> <li>default<ul> <li>12345</li> </ul> </li> <li>description<ul> <li>Route tag information</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#vlan_name_1","title":"vlan_name","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Vlan name</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#vlan_id_1","title":"vlan_id","text":"Details <ul> <li>default<ul> <li>0</li> </ul> </li> <li>description<ul> <li>Vlan Id for the inside network </li> <li>If this object is included and if it is already in use, then the module will allocate a new VLAN ID and create the Route Peering. The user provided 'vlan_id' will be ignored.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#vrf_1","title":"vrf","text":"Details <ul> <li>description<ul> <li>VRF name for the inside network</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#name_2","title":"name","text":"Details <ul> <li>description<ul> <li>A unique name which identifies the route peering</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#next_hop_2","title":"next_hop","text":"Details <ul> <li>description<ul> <li>Nexthop IPV4 information, e.g., 192.168.1.100 </li> <li>This parameter is applicable only when 'deploy_mode' is 'intra_tenant_fw'</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#node_name","title":"node_name","text":"Details <ul> <li>description<ul> <li>Name of the service node where the route peering is to be deployed</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#outside_network","title":"outside_network","text":"Details <ul> <li>description<ul> <li>Details regarding outside network of the route peering </li> <li>This parameter is applicable only when 'deploy_mode' is 'intra_tenant_fw' or 'inter_tenant_fw'</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#name_3","title":"name","text":"Details <ul> <li>description<ul> <li>Network name</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#profile_2","title":"profile","text":"Details <ul> <li>description<ul> <li>Profile information for the outside network</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#adv_host_2","title":"adv_host","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Flag indicating if the host is to be advertised </li> <li>This parameter is applicable only when 'peering_option' is 'ebgp'</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#int_descr_2","title":"int_descr","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Description of the interface</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#ipv4_gw_2","title":"ipv4_gw","text":"Details <ul> <li>description<ul> <li>IPV4 gateway information including the mask e.g. 192.168.1.1/24</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#ipv4_lo_2","title":"ipv4_lo","text":"Details <ul> <li>description<ul> <li>IPv4 loopback address </li> <li>This parameter is applicable only when 'peering_option' is 'ebgp'</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#ipv4_neighobor_2","title":"ipv4_neighobor","text":"Details <ul> <li>description<ul> <li>IPv4 neighbor address </li> <li>This parameter is applicable only when 'peering_option' is 'ebgp'</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#ipv4_vpc_peer_lo_2","title":"ipv4_vpc_peer_lo","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>IPv4 vpc peer loopback address </li> <li>This parameter is applicable only when 'peering_option' is 'ebgp'. This parameter is mandatory if the service node is part of VPC switch pair</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#ipv6_gw_2","title":"ipv6_gw","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>IPV6 gateway information including the mask e.g., 2000:01:01::01/64</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#ipv6_lo_2","title":"ipv6_lo","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>IPv6 loopback address </li> <li>This parameter is applicable only when 'peering_option' is 'ebgp'</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#ipv6_neighbor_2","title":"ipv6_neighbor","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>IPv6 neighbor address </li> <li>This parameter is applicable only when 'peering_option' is 'ebgp'</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#ipv6_vpc_peer_lo_2","title":"ipv6_vpc_peer_lo","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>IPv6 vpc peer loopback address </li> <li>This parameter is applicable only when 'peering_option' is 'ebgp' This parameter is mandatory if the service node is part of VPC switch pair</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#local_asn_2","title":"local_asn","text":"Details <ul> <li>default<ul> <li>12345</li> </ul> </li> <li>description<ul> <li>Local ASN number </li> <li>This parameter is applicable only when 'peering_option' is 'ebgp'</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#neigh_int_descr_2","title":"neigh_int_descr","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Description of the interface </li> <li>This parameter is applicable only when 'peering_option' is 'ebgp'</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#route_map_tag_2","title":"route_map_tag","text":"Details <ul> <li>default<ul> <li>12345</li> </ul> </li> <li>description<ul> <li>Route Tag </li> <li>This parameter is applicable only when 'peering_option' is 'ebgp'</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#static_route_2","title":"static_route","text":"Details <ul> <li>default<ul> <li>[]</li> </ul> </li> <li>description<ul> <li>Static route information </li> <li>This parameter is applicable only when 'peering_option' is 'static' and 'deploy_mode' is 'intra_tenant_fw'</li> </ul> </li> <li>elements<ul> <li>dict</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#next_hop_3","title":"# next_hop","text":"Details <ul> <li>description<ul> <li>Gateway IP addresses, for e.g., 192.168.1.1</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#subnet_2","title":"# subnet","text":"Details <ul> <li>description<ul> <li>Subnet information, for e.g., 11.0.0.0/24</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#tag_2","title":"tag","text":"Details <ul> <li>default<ul> <li>12345</li> </ul> </li> <li>description<ul> <li>Route tag information</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#vlan_name_2","title":"vlan_name","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Vlan name</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#vlan_id_2","title":"vlan_id","text":"Details <ul> <li>default<ul> <li>0</li> </ul> </li> <li>description<ul> <li>Vlan Id for the outside network </li> <li>If this object is included and if it is already in use, then the module will allocate a new VLAN ID and create the Route Peering. The user provided 'vlan_id' will be ignored.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#vrf_2","title":"vrf","text":"Details <ul> <li>description<ul> <li>VRF name for the outside network</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#peering_option","title":"peering_option","text":"Details <ul> <li>choices<ul> <li>static</li> <li>ebgp</li> </ul> </li> <li>default<ul> <li>static</li> </ul> </li> <li>description<ul> <li>Specifies the type of peering </li> <li>This parameter is applicable only when 'deploy_mode' is either 'inter_tenant_fw' or 'one_arm_adc' or 'two_arm_adc'</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#reverse_next_hop","title":"reverse_next_hop","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Reverse Nexthop IPV4 information, e.g., 192.169.1.100 </li> <li>This parameter is applicable only when 'deploy_mode' is either 'intra_tenant_fw' or 'one_arm_adc' or 'two_arm_adc'</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#second_arm","title":"second_arm","text":"Details <ul> <li>description<ul> <li>Details regarding second arm of the route peering </li> <li>This parameter is applicable only when 'deploy_mode' is either 'one_arm_adc' or 'two_arm_adc'</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#name_4","title":"name","text":"Details <ul> <li>description<ul> <li>Network name</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#profile_3","title":"profile","text":"Details <ul> <li>description<ul> <li>Profile information for the second arm</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#int_descr_3","title":"int_descr","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Description of the interface</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#ipv4_gw_3","title":"ipv4_gw","text":"Details <ul> <li>description<ul> <li>IPV4 gateway information including the mask e.g. 192.168.1.1/24</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#ipv6_gw_3","title":"ipv6_gw","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>IPV6 gateway information including the mask e.g., 2000:01:01::01/64</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#tag_3","title":"tag","text":"Details <ul> <li>default<ul> <li>12345</li> </ul> </li> <li>description<ul> <li>Route tag information</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#vlan_name_3","title":"vlan_name","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Vlan name</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#vlan_id_3","title":"vlan_id","text":"Details <ul> <li>default<ul> <li>0</li> </ul> </li> <li>description<ul> <li>Vlan Id for the second arm </li> <li>If this object is included and if it is already in use, then the module will allocate a new VLAN ID and create the Route Peering. The user provided 'vlan_id' will be ignored.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#vrf_3","title":"vrf","text":"Details <ul> <li>description<ul> <li>VRF name for the second arm</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>dict</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#deploy","title":"deploy","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>A flag specifying if a route peering is to be deployed on the switches</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#fabric","title":"fabric","text":"Details <ul> <li>description<ul> <li>Name of the target fabric for route peering operations</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#service_fabric","title":"service_fabric","text":"Details <ul> <li>description<ul> <li>Name of the external fabric attached to the service node for route peering operations</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#state","title":"state","text":"Details <ul> <li>choices<ul> <li>merged</li> <li>replaced</li> <li>overridden</li> <li>deleted</li> <li>query</li> </ul> </li> <li>default<ul> <li>merged</li> </ul> </li> <li>description<ul> <li>The required state of the configuration after module completion.</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_service_route_peering/#examples","title":"Examples","text":"Details <pre><code>---\n# L4-L7 Service Insertion:\n# =======================\n#\n# Cisco DCNM has the ability to insert Layer 4-Layer 7 (L4-L7) service devices in a data center fabric, and also enables selectively\n# redirecting traffic to these service devices. You can add a service node, create route peering between the service node and the\n# service leaf switch, and then selectively redirect traffic to these service nodes. Ansible collections support 3 modules viz.\n# Service Node, Service Route Peering and Service Policy to enable this.\n#\n# Service Node:\n#\n# You have to create an external fabric and specify that a service node resides in that external fabric during service node creation.\n# Service policies are created on the service node to determine the actions to be applied to the traffic\n#\n# Route Peerings:\n#\n# Multiple Service Route Peerings can be created under service node. Each Route Peering creates required service networks that is used to\n# carry traffic towards the service node.\n#\n# Service Policy:\n#\n# Each route peering can have multiple service policies. Service policies can only be created for networks created through route peerings.\n# The service policies define the actions to be taken for matching traffic.\n#\n# Dependency Tree:\n#\n# Service Node\n# |\n# |---- Route Peering 1\n# |     |\n# .     |---- Service Policy 1\n# .     |\n# .     .\n# .     .\n# .     .\n# .     |---- Service Policy N\n# .\n# |---- Route Peering N\n#       |\n#       |---- Service Policy 1\n#       |\n#       .\n#       .\n#       .\n#       |---- Service Policy N\n#\n#\n# This module supports the following states:\n\n# Merged:\n#   Route Peerings defined in the playbook will be merged into the target fabric.\n#     - If the Route Peerings does not exist it will be added.\n#     - If the Route Peerings exists but properties managed by the playbook are different\n#       they will be updated if possible.\n#     - Route peerings that are not specified in the playbook will be untouched.\n#\n# Replaced:\n#   Route Peerings defined in the playbook will be replaced in the target fabric.\n#     - If the Route Peerings does not exist it will be added.\n#     - If the Route Peerings exists but properties managed by the playbook are different\n#       they will be updated if possible.\n#     - Properties that can be managed by the module but are not specified\n#       in the playbook will be deleted or defaulted if possible.\n#     - Route Peerings that are not specified in the playbook will be untouched.\n#\n# Overridden:\n#   Route Peerings defined in the playbook will be overridden in the target fabric.\n#     - If the Route Peerings does not exist it will be added.\n#     - If the Route Peerings exists but properties managed by the playbook are different\n#       they will be updated if possible.\n#     - Properties that can be managed by the module but are not specified\n#       in the playbook will be deleted or defaulted if possible.\n#     - Roue Peerings that are not specified in the playbook will be deleted.\n#\n# Deleted:\n#   Route Peerings defined in the playbook will be deleted.\n#\n# Query:\n#   Returns the current DCNM state for the route peerings listed in the playbook.\n#\n# CREATING ROUTE PEERINGS\n# =======================\n#\n# INTRA-TENANT FIREWALL\n# =======================\n\n- name: Create different new service route peerings including all objects\n  cisco.dcnm.dcnm_service_route_peering:\n    state: merged\n    fabric: test-fabric\n    service_fabric: external\n    attach: true\n    deploy: true\n    config:\n      - name: IT-FW-RP1                                  # mandatory\n        node_name: IT-SN-1                               # mandatory\n        deploy_mode: intra_tenant_fw                     # mandatory, choices=[intra_tenant_fw, inter_tenant_fw]\n        inside_network:                                  #\n          vrf: IT-VRF-11                                 # mandatory\n          name: rp1-sn1-inside-net                       # mandatory\n          vlan_id: 101                                   # optional\n          profile:\n            ipv4_gw: 192.161.1.1/24                      # mandatory\n            ipv6_gw: 2001:db01::1/64                     # optional, default is ''\n            vlan_name: rp1-sn1-inside                    # optional, default is ''\n            int_descr: \"RP1 SN1 inside interface\"        # optional, default is ''\n            tag: 11111                                   # optional, default is 12345\n        next_hop: 192.161.1.100                          # mandatory\n        outside_network:                                 #\n          vrf: IT-VRF-11                                 # mandatory\n          name: rp1-sn1-outside-net                      # mandatory\n          vlan_id: 102                                   # optional\n          profile:\n            ipv4_gw: 192.161.2.1/24                      # mandatory\n            ipv6_gw: 2001:db02::1/64                     # optional, default is ''\n            vlan_name: rp1-sn1-outside                   # optional, default is ''\n            int_descr: \"RP1 SN1 outside interface\"       # optionL, default is ''\n            tag: 11112                                   # optional, default is 12345\n        reverse_next_hop: 192.161.2.100                  # optional, default is ''\n\n# INTER-TENANT FIREWALL with STATIC peering\n# =========================================\n\n- name: Create different new service route peerings including all objects\n  cisco.dcnm.dcnm_service_route_peering:\n    state: merged\n    fabric: test-fabric\n    service_fabric: external\n    attach: true\n    deploy: true\n    config:\n      - name: IT-FW-RP2                                  # mandatory\n        node_name: IT-SN-1                               # mandatory\n        deploy_mode: inter_tenant_fw                     # mandatory, choices=[intra_tenant_fw, inter_tenant_fw]\n        peering_option: static                           # optional, default is static, choices=[static, ebgp]\n        inside_network:                                  #\n          vrf: IT-VRF-21                                 # mandatory\n          name: rp2-sn1-inside-net                       # mandatory\n          vlan_id: 201                                   # optional\n          profile:\n            ipv4_gw: 192.162.1.1/24                      # mandatory\n            ipv6_gw: 2002:db01::1/64                     # optional, default is ''\n            vlan_name: rp2-sn1-inside                    # optional, default is ''\n            int_descr: \"RP2 SN1 inside interface\"        # optional, default is ''\n            static_route:                                # optional, default is ''\n              - subnet: 20.20.20.0/24\n                next_hop:\n                  - 120.120.120.100\n                  - 121.121.121.100\n            tag: 21111                                   # optional, default is 12345\n        outside_network:                                 #\n          vrf: IT-VRF-22                                 # mandatory\n          name: rp2-sn1-outside-net                      # mandatory\n          vlan_id: 202                                   # optional\n          profile:\n            ipv4_gw: 192.162.2.1/24                      # mandatory\n            ipv6_gw: 2002:db02::1/64                     # optional, default is ''\n            vlan_name: rp2-sn1-outside                   # optional, default is ''\n            int_descr: \"RP2 SN1 outside interface\"       # optional, default is ''\n            static_route:                                # optional, default is ''\n              - subnet: 21.21.21.0/24\n                next_hop:\n                  - 122.122.122.100\n                  - 123.123.123.100\n            tag: 22222                                   # optional, default is 12345\n\n# INTER-TENANT FIREWALL with EBGP peering\n# =======================================\n\n- name: Create different new service route peerings including all objects\n  cisco.dcnm.dcnm_service_route_peering:\n    state: merged\n    fabric: test-fabric\n    service_fabric: external\n    attach: true\n    deploy: true\n    config:\n      - name: IT-FW-RP3                                      # mandatory\n        node_name: IT-SN-1                               # mandatory\n        deploy_mode: inter_tenant_fw                     # mandatory, choices=[intra_tenant_fw, inter_tenant_fw]\n        peering_option: ebgp                             # optional, default is static, choices=[static, ebgp]\n        inside_network:\n          vrf: IT-VRF-31                                 # mandatory\n          name: rp3-sn1-inside-net                       # mandatory\n          vlan_id: 301                                   # optional\n          profile:\n            ipv4_gw: 192.163.1.1/24                      # mandatory\n            ipv6_gw: 2003:db01::1/64                     # optional, default is ''\n            vlan_name: rp3-sn1-inside                    # optional, default is ''\n            int_descr: \"RP3 SN1 inside interface\"        # optional, default is ''\n            tag: 31111                                   # optional, default is 12345\n            ipv4_neighbor: 31.31.31.1                    # mandatory\n            ipv4_lo: 31.31.31.2                          # mandatory\n            ipv4_vpc_peer_lo: 31.31.31.3                 # optional, default is ''\n            ipv6_neighbor: 2003:3131::1                  # optional, default is ''\n            ipv6_lo: 2003:3132::1                        # optional, default is ''\n            ipv6_vpc_peer_lo: 2003:3133::1               # optional, default is ''\n            route_map_tag: 33111                         # optional, default is 12345 ????\n            neigh_int_descr: \"RP3 SN1 inside interface\"  # optional, default is '' ????\n            local_asn: 65301                             # optional, default is ''\n            adv_host: true                               # optional, default is false\n        outside_network:\n          vrf: IT-VRF-32                                 # mandatory\n          name: rp3-sn1-outside-net                      # mandatory\n          vlan_id: 302                                   # optional\n          profile:\n            ipv4_gw: 192.163.2.1/24                      # mandatory\n            ipv6_gw: 2003:db02::1/64                     # optional, default is ''\n            vlan_name: rp3-sn1-outside                   # optional, default is ''\n            int_descr: \"RP3 SN1 outside interface\"       # optional, default is ''\n            tag: 31112                                   # optional, default is 12345\n            ipv4_neighbor: 131.131.131.1                 # mandatory\n            ipv4_lo: 131.131.131.2                       # mandatory\n            ipv4_vpc_peer_lo: 131.131.131.3              # optional, default is ''\n            ipv6_neighbor: 2003:8383::1                  # optional, default is ''\n            ipv6_lo: 2003:8384::1:100:1                  # optional, default is ''\n            ipv6_vpc_peer_lo: 2003:8385::1               # optional, default is ''\n            route_map_tag: 31113                         # optional, default is 12345 ????\n            neigh_int_descr: \"RP3 SN1 outside interface\" # optional, default is '' ????\n            local_asn: 65302                             # optional, default is ''\n            adv_host: true                               # optional, default is false\n\n# ONEARM ADC with EBGP peering\n# ============================\n\n- name: Create different new service route peerings including all objects\n  cisco.dcnm.dcnm_service_route_peering:\n    state: merged\n    fabric: test-fabric\n    service_fabric: external\n    attach: true\n    deploy: true\n    config:\n      - name: IT-ADC-RP4\n        node_name: IT-SN-2                               # mandatory\n        deploy_mode: one_arm_adc                         # mandatory, choices=[one_arm_adc, two_arm_adc]\n        peering_option: ebgp                             # optional, default is static, choices=[static, ebgp]\n        first_arm:\n          vrf: IT-VRF-41                                 # mandatory\n          name: rp4-sn2-first-arm                        # mandatory\n          vlan_id: 401                                   # optional\n          profile:\n            ipv4_gw: 192.164.1.1/24                      # mandatory\n            ipv6_gw: 2004:db01::1/64                     # optional, default is ''\n            vlan_name: rp4-sn2-first-arm                 # optional, default is ''\n            int_descr: \"RP4 SN2 first arm intf\"          # optional, default is ''\n            tag: 41111                                   # optional, default is 12345\n            ipv4_neighbor: 41.41.41.1                    # mandatory\n            ipv4_lo: 41.41.41.2                          # mandatory\n            ipv4_vpc_peer_lo: 41.41.41.3                 # optional, default is ''\n            ipv6_neighbor: 2004:4141::1                  # optional, default is ''\n            ipv6_lo: 2004:4142::1                        # optional, default is ''\n            ipv6_vpc_peer_lo: 2004:4143::1               # optional, default is ''\n            route_map_tag: 41112                         # optional, default is 12345\n            neigh_int_descr: \"RP4 SN2 first arm\"         # optional, default is ''\n            local_asn: 65401                             # optional, default is ''\n            adv_host: true                               # optional, default is false\n        reverse_next_hop: 192.164.1.100                  # mandatory\n\n# TWOARM ADC with EBGP peering\n# ============================\n\n- name: Create different new service route peerings including all objects\n  cisco.dcnm.dcnm_service_route_peering:\n    state: merged\n    fabric: test-fabric\n    service_fabric: external\n    attach: true\n    deploy: true\n    config:\n      - name: IT-ADC-RP5\n        node_name: IT-SN-2                               # mandatory\n        deploy_mode: two_arm_adc                         # mandatory, choices=[one_arm_adc, two_arm_adc]\n        peering_option: ebgp                             # optional, default is static, choices=[static, ebgp]\n        first_arm:\n          vrf: IT-VRF-51            \"                    # mandatory\n          name: rp5-sn2-first-arm                        # mandatory\n          vlan_id: 501                                   # optional\n          profile:\n            ipv4_gw: 192.165.1.1/24                      # mandatory\n            ipv6_gw: 2005:db01::1/64                     # optional, default is ''\n            vlan_name: rp5-sn2-first-arm                 # optional, default is ''\n            int_descr: \"RP5 SN2 first arm intf\"          # optional, default is ''\n            tag: 51111                                   # optional, default is 12345\n            ipv4_neighbor: 51.51.51.1                    # mandatory\n            ipv4_lo: 51.51.51.2                          # mandatory\n            ipv4_vpc_peer_lo: 51.51.51.3                 # optional, default is ''\n            ipv6_neighbor: 2005:5151::1                  # optional, default is ''\n            ipv6_lo: 2005:5152::1                        # optional, default is ''\n            ipv6_vpc_peer_lo: 2005:5153::1               # optional, default is ''\n            route_map_tag: 51115                         # optional, default is 12345\n            neigh_int_descr: \"RP5 SN2 first arm\"         # optional, default is ''\n            local_asn: 65501                             # optional, default is ''\n            adv_host: true                               # optional, default is false\n        second_arm:\n          vrf: IT-VRF-52            \"                    # mandatory\n          name: rp5-sn2-second-arm                       # mandatory\n          vlan_id: 502                                   # optional\n          profile:\n            ipv4_gw: 192.165.2.1/24                      # mandatory\n            ipv6_gw: 2005:db02::1/64                     # optional, default is ''\n            vlan_name: rp5-sn2-second-arm                # optional, default is ''\n            int_descr: \"RP5 SN2 second arm intf\"         # optional, default is ''\n            tag: 51112                                   # optional, default is 12345\n        reverse_next_hop: 192.165.1.100                  # mandatory\n\n# ONEARM ADC with STATIC peering\n# ==============================\n\n- name: Create different new service route peerings including all objects\n  cisco.dcnm.dcnm_service_route_peering:\n    state: merged\n    fabric: test-fabric\n    service_fabric: external\n    attach: true\n    deploy: true\n    config:\n      - name: IT-ADC-RP6\n        node_name: IT-SN-2                               # mandatory\n        deploy_mode: one_arm_adc                         # mandatory, choices=[one_arm_adc, two_arm_adc]\n        peering_option: static                           # optional, default is static, choices=[static, ebgp]\n        first_arm:\n          vrf: IT-VRF-61                                 # mandatory\n          name: rp6-sn2-first-arm                        # mandatory\n          vlan_id: 601                                   # optional\n          profile:\n            ipv4_gw: 192.166.1.1/24                      # mandatory\n            ipv6_gw: 2006:db01::1/64                     # optional, default is ''\n            vlan_name: rp6-sn2-first-arm                 # optional, default is ''\n            int_descr: \"RP6 SN2 first arm intf\"          # optional, default is ''\n            tag: 61111                                   # optional, default is 12345\n            static_route:                                # optional, default is ''\n              - subnet: 61.61.61.1/24\n                next_hop:\n                  - 161.161.161.1\n                  - 162.162.162.1\n              - subnet: 22.0.0.0/24\n                next_hop:\n                  - 163.163.163.1\n                  - 164.164.164.1\n        reverse_next_hop: 192.166.1.100                  # mandatory\n\n# TWOARM ADC with STATIC peering\n# ==============================\n\n- name: Create different new service route peerings including all objects\n  cisco.dcnm.dcnm_service_route_peering:\n    state: merged\n    fabric: test-fabric\n    service_fabric: external\n    attach: true\n    deploy: true\n    config:\n      - name: IT-ADC-RP7\n        node_name: IT-SN-2                               # mandatory\n        deploy_mode: two_arm_adc                         # mandatory, choices=[one_arm_adc, two_arm_adc]\n        peering_option: static                           # optional, default is static, choices=[static, ebgp]\n        first_arm:\n          vrf: IT-VRF-71                                 # mandatory\n          name: rp7-sn2-first-arm                        # mandatory\n          vlan_id: 701                                   # optional\n          profile:\n            ipv4_gw: 192.167.1.1/24                      # mandatory\n            ipv6_gw: 2007:db01::1/64                     # optional, default is ''\n            vlan_name: rp7-sn2-first-arm                 # optional, default is ''\n            int_descr: \"RP6 SN2 first arm  intf\"         # optional, default is ''\n            tag: 71111                                   # optional, default is 12345\n            static_route:                                # optional, default is ''\n              - subnet: 71.71.71.1/24\n                next_hop:\n                  - 171.171.171.1\n                  - 172.172.172.1\n        second_arm:\n          vrf: IT-VRF-72                                 # mandatory\n          name: rp7-sn2-second-arm                       # mandatory\n          vlan_id: 702                                   # optional\n          profile:\n            ipv4_gw: 192.167.2.1/24                      # mandatory\n            ipv6_gw: 2007:db02::1/64                     # optional, default is ''\n            vlan_name: rp7-sn2-second-arm                # optional, default is ''\n            int_descr: \"RP7 SN2 second arm intf\"         # optional, default is ''\n            tag: 71112                                   # optional, default is 12345\n        reverse_next_hop: 192.167.1.100                  # mandatory\n\n# DELETE ROUTE PEERINGS\n# =====================\n\n- name: Delete specific route peerings\n  cisco.dcnm.dcnm_service_route_peering:\n    state: deleted\n    fabric: test-fabric\n    service_fabric: external\n    config:\n      - name: IT-FW-RP1                                   # mandatory\n        node_name: IT-SN-1                                # mandatory\n\n- name: Delete all route peerings\n  cisco.dcnm.dcnm_service_route_peering:\n    state: deleted\n    fabric: test-fabric\n    service_fabric: external\n\n- name: Delete route peerings with node name\n  cisco.dcnm.dcnm_service_route_peering:\n    fabric: test-fabric\n    service_fabric: external\n    state: deleted\n    config:\n      - node_name: IT-SN-1\n\n# OVERRIDE ROUTE PEERINGS\n# =======================\n\n- name: Override existing route peerings with new peerings\n  cisco.dcnm.dcnm_service_route_peering:\n    state: overridden\n    fabric: test-fabric\n    service_fabric: external\n    attach: true\n    deploy: true\n    config:\n      - name: IT-FW-RP-OVR1                              # mandatory\n        node_name: IT-SN-1                               # mandatory\n        deploy_mode: intra_tenant_fw                     # mandatory, choices=[intra_tenant_fw, inter_tenant_fw]\n        inside_network:                                  #\n          vrf: IT-VRF-12                                 # mandatory\n          name: rp1-sn1-inside-net-ovr                   # mandatory\n          vlan_id: 191                                   # optional\n          profile:\n            ipv4_gw: 192.161.91.1/24                     # mandatory\n            ipv6_gw: 2001:db11::1/64                     # optional, default is ''\n            vlan_name: rp1-sn1-inside-ovr                # optional, default is ''\n            int_descr: \"RP1 SN1 inside interface ovr\"    # optional, default is ''\n            tag: 11191                                   # optional, default is 12345\n        next_hop: 192.161.91.100                         # mandatory\n        outside_network:                                 #\n          vrf: IT-VRF-12                                 # mandatory\n          name: rp1-sn1-outside-net-ovr                  # mandatory\n          vlan_id: 192                                   # optional\n          profile:\n            ipv4_gw: 192.161.92.1/24                     # mandatory\n            ipv6_gw: 2001:db12::1/64                     # optional, default is ''\n            vlan_name: rp1-sn1-outside-ovr               # optional, default is ''\n            int_descr: \"RP1 SN1 outside interface ovr\"   # optionL, default is ''\n            tag: 11192                                   # optional, default is 12345\n        reverse_next_hop: 192.161.92.100                 # optional, default is ''\n\n- name: Override existing route peerings with no new peerings\n  cisco.dcnm.dcnm_service_route_peering:\n    state: overridden\n    fabric: test-fabric\n    service_fabric: external\n    attach: true\n    deploy: true\n\n# REPLACE ROUTE PEERINGS\n# ======================\n\n- name: Replace service route peerings RP1\n  cisco.dcnm.dcnm_service_route_peering: &amp;dcnm_srp_rep_13\n    state: replaced\n    fabric: test-fabric\n    service_fabric: external\n    attach: true\n    deploy: true\n    config:\n      - name: IT-FW-RP1                                  # mandatory\n        node_name: IT-SN-1                               # mandatory\n        deploy_mode: intra_tenant_fw                     # mandatory, choices=[intra_tenant_fw, inter_tenant_fw]\n        inside_network:                                  #\n          vrf: IT-VRF-11                                 # mandatory\n          name: rp1-sn1-inside-net                       # mandatory\n          vlan_id: 191                                   # optional\n          profile:\n            ipv4_gw: 192.161.1.1/24                      # mandatory\n            ipv6_gw: 2101:db01::01/64                    # optional, default is ''\n            vlan_name: rp1-sn1-inside-rep                # optional, default is ''\n            int_descr: \"RP1 SN1 inside interface - REP\"  # optional, default is ''\n            tag: 11101                                   # optional, default is 12345\n        next_hop: 192.161.1.200                          # mandatory\n        outside_network:                                 #\n          vrf: IT-VRF-11                                 # mandatory\n          name: rp1-sn1-outside-net                      # mandatory\n          vlan_id: 192                                   # optional\n          profile:\n            ipv4_gw: 192.161.2.1/24                      # mandatory\n            ipv6_gw: 2101:db02::1/64                     # optional, default is ''\n            vlan_name: rp1-sn1-outside-rep               # optional, default is ''\n            int_descr: \"RP1 SN1 outside interface- REP\"  # optionL, default is ''\n            tag: 11102                                   # optional, default is 12345\n        reverse_next_hop: 192.161.2.200                  # optional, default is ''\n\n# QUERY ROUTE PEERINGS\n# ====================\n\n- name: Query existing route peerings with specific peering names\n  cisco.dcnm.dcnm_service_route_peering:\n    state: query\n    fabric: test-fabric\n    service_fabric: external\n    config:\n      - name: IT-FW-RP1                                   # optional\n        node_name: IT-SN-1                                # mandatory\n\n      - name: IT-FW-RP2                                   # optional\n        node_name: IT-SN-1                                # mandatory\n\n      - name: IT-FW-RP3                                   # optional\n        node_name: IT-SN-1                                # mandatory\n\n      - name: IT-ADC-RP4                                  # optional\n        node_name: IT-SN-2                                # mandatory\n\n      - name: IT-ADC-RP5                                  # optional\n        node_name: IT-SN-2                                # mandatory\n\n      - name: IT-ADC-RP6                                  # optional\n        node_name: IT-SN-2                                # mandatory\n\n      - name: IT-ADC-RP7                                  # optional\n        node_name: IT-SN-2                                # mandatory\n\n- name: Query existing route peerings without specific peering names\n  cisco.dcnm.dcnm_service_route_peering:\n    state: query\n    fabric: test-fabric\n    service_fabric: external\n    config:\n        node_name: IT-SN-1                                # mandatory\n</code></pre>"},{"location":"modules/dcnm_template/","title":"dcnm_template","text":"Details <ul> <li>author<ul> <li>Mallik Mudigonda(@mmudigon)</li> </ul> </li> <li>description<ul> <li>DCNM Ansible Module for creating, deleting and modifying template service </li> <li>operations</li> </ul> </li> <li>short_description<ul> <li>DCNM Ansible Module for managing templates.</li> </ul> </li> <li>version_added<ul> <li>1.1.0</li> </ul> </li> </ul>"},{"location":"modules/dcnm_template/#options","title":"options","text":"Details"},{"location":"modules/dcnm_template/#config","title":"config","text":"Details <ul> <li>description<ul> <li>A dictionary of template operations</li> </ul> </li> <li>elements<ul> <li>dict</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> </ul>"},{"location":"modules/dcnm_template/#content","title":"content","text":"Details <ul> <li>description<ul> <li>Multiple line configuration snip that can be used to associate to devices as policy</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_template/#description","title":"description","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Description of the template. The description may include the details regarding the content</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_template/#name","title":"name","text":"Details <ul> <li>description<ul> <li>Name of the template.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_template/#tags","title":"tags","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>User defined labels for identifying the templates</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_template/#type","title":"type","text":"Details <ul> <li>choices<ul> <li>cli</li> <li>python</li> </ul> </li> <li>default<ul> <li>cli</li> </ul> </li> <li>description<ul> <li>Type of the template content either CLI or Python</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_template/#state","title":"state","text":"Details <ul> <li>choices<ul> <li>merged</li> <li>deleted</li> <li>query</li> </ul> </li> <li>default<ul> <li>merged</li> </ul> </li> <li>description<ul> <li>The required state of the configuration after module completion.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_template/#examples","title":"Examples","text":"Details <pre><code>---\n\n# States:\n# This module supports the following states:\n#\n# Merged:\n#   Templates defined in the playbook will be merged into the target.\n#\n#   The templates listed in the playbook will be created if not already present on the DCNM\n#   server. If the template is already present and the configuration information included\n#   in the playbook is either different or not present in DCNM, then the corresponding\n#   information is added to the template on DCNM. If a template mentioned in playbook\n#   is already present on DCNM and there is no difference in configuration, no operation\n#   will be performed for such a template.\n#\n# Deleted:\n#   Templates defined in the playbook will be deleted from the target.\n#\n#   Deletes the list of templates specified in the playbook.\n#\n# Query:\n#   Returns the current DCNM state for the templates listed in the playbook.\n\n\n# To create or modify templates\n\n- name: Create or modify templates\n  cisco.dcnm.dcnm_template:\n    state: merged        # only choose form [merged, deleted, query]\n    config:\n      - name: template_101\n        description: \"Template_101\"\n        tags: \"internal policy 101\"\n        content: |\n          telemetry\n            certificate /bootflash/telegraf.crt telegraf\n            destination-profile\n              use-vrf management\n            destination-group 101\n              ip address 10.195.225.176 port 57101 protocol gRPC encoding GPB\n            sensor-group 101\n              data-source DME\n              path sys/ch depth unbounded\n            subscription 101\n              dst-grp 101\n              snsr-grp 101 sample-interval 10101\n\n      - name: template_102\n        description: \"Template_102\"\n        tags: \"internal policy 102\"\n        content: |\n          telemetry\n            certificate /bootflash/telegraf.crt telegraf\n            destination-profile\n              use-vrf management\n            destination-group 1\n              ip address 10.195.225.102 port 57102 protocol gRPC encoding GPB\n            sensor-group 102\n              data-source DME\n              path sys/ch depth unbounded\n            subscription 102\n              dst-grp 102\n              snsr-grp 102 sample-interval 10102\n\n# To delete templates\n\n- name: Delete templates\n  cisco.dcnm.dcnm_template:\n    state: deleted       # only choose form [merged, deleted, query]\n    config:\n      - name: template_101\n\n      - name: template_102\n\n      - name: template_103\n\n      - name: template_104\n\n# To query templates\n\n- name: Query templates\n  cisco.dcnm.dcnm_template:\n    state: query       # only choose form [merged, deleted, query]\n    config:\n      - name: template_101\n\n      - name: template_102\n\n      - name: template_103\n\n      - name: template_104\n</code></pre>"},{"location":"modules/dcnm_vpc_pair/","title":"dcnm_vpc_pair","text":"Details <ul> <li>author<ul> <li>Mallik Mudigonda(@mmudigon)</li> </ul> </li> <li>description<ul> <li>DCNM Ansible Module for managing VPC switch pairs.</li> </ul> </li> <li>short_description<ul> <li>DCNM Ansible Module for managing VPC switch pairs required for VPC interfaces.</li> </ul> </li> <li>version_added<ul> <li>3.5.0</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vpc_pair/#options","title":"options","text":"Details"},{"location":"modules/dcnm_vpc_pair/#config","title":"config","text":"Details <ul> <li>default<ul> <li>[]</li> </ul> </li> <li>description<ul> <li>A list of dictionaries containing VPC switch pair information</li> </ul> </li> <li>elements<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vpc_pair/#peeroneid","title":"peerOneId","text":"Details <ul> <li>description<ul> <li>IP Address/Host Name of Peer1 of VPC switch pair.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vpc_pair/#peertwoid","title":"peerTwoId","text":"Details <ul> <li>description<ul> <li>IP Address/Host Name of Peer2 of VPC switch pair.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vpc_pair/#profile","title":"profile","text":"Details <ul> <li>description<ul> <li>A dictionary of additional VPC switch pair related parameters that must be included while creating VPC switch pairs.</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vpc_pair/#admin_state","title":"ADMIN_STATE","text":"Details <ul> <li>description<ul> <li>Flag to enable/disbale administrative state of the interface.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vpc_pair/#allowed_vlans","title":"ALLOWED_VLANS","text":"Details <ul> <li>choices<ul> <li>none</li> <li>all</li> <li>vlan-range(e.g., 1-2, 3-40)</li> </ul> </li> <li>default<ul> <li>all</li> </ul> </li> <li>description<ul> <li>Vlans that are allowed on the VPC peer link port-channel.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vpc_pair/#domain_id","title":"DOMAIN_ID","text":"Details <ul> <li>description<ul> <li>VPC domain ID. </li> <li>Minimum value is 1 and Maximum value is 1000.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vpc_pair/#fabric_name","title":"FABRIC_NAME","text":"Details <ul> <li>description<ul> <li>Name of the target fabric for VPC switch pair operations.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vpc_pair/#keep_alive_hold_timeout","title":"KEEP_ALIVE_HOLD_TIMEOUT","text":"Details <ul> <li>default<ul> <li>3</li> </ul> </li> <li>description<ul> <li>Hold timeout to ignore stale peer keep alive messages. </li> <li>Minimum value is 3 and Maximum value is 10</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vpc_pair/#keep_alive_vrf","title":"KEEP_ALIVE_VRF","text":"Details <ul> <li>description<ul> <li>Name of the VRF used for keep-alive messages.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vpc_pair/#pc_mode","title":"PC_MODE","text":"Details <ul> <li>choices<ul> <li>on</li> <li>active</li> <li>passive</li> </ul> </li> <li>default<ul> <li>active</li> </ul> </li> <li>description<ul> <li>Port channel mode.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vpc_pair/#peer1_domain_conf","title":"PEER1_DOMAIN_CONF","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Additional CLI for PEER1 vPC Domain.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vpc_pair/#peer1_keep_alive_local_ip","title":"PEER1_KEEP_ALIVE_LOCAL_IP","text":"Details <ul> <li>description<ul> <li>IP address of a L3 interface in non-default VRF on PEER1.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vpc_pair/#peer1_member_interfaces","title":"PEER1_MEMBER_INTERFACES","text":"Details <ul> <li>default<ul> <li>[]</li> </ul> </li> <li>description<ul> <li>A list of member interfaces for PEER1.</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vpc_pair/#peer1_pcid","title":"PEER1_PCID","text":"Details <ul> <li>default<ul> <li>1</li> </ul> </li> <li>description<ul> <li>PEER1 peerlink port-channel number. </li> <li>Minimum value is 1 and Maximum value is 4096.</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vpc_pair/#peer1_po_conf","title":"PEER1_PO_CONF","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Additional CLI for PEER1 vPC peerlink port-channel.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vpc_pair/#peer1_po_desc","title":"PEER1_PO_DESC","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Description for the PEER1 port-channel. </li> <li>Minimum length is 1 and Maximum length is 254.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vpc_pair/#peer2_domain_conf","title":"PEER2_DOMAIN_CONF","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Additional CLI for PEER2 vPC Domain.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vpc_pair/#peer2_keep_alive_local_ip","title":"PEER2_KEEP_ALIVE_LOCAL_IP","text":"Details <ul> <li>description<ul> <li>IP address of a L3 interface in non-default VRF on PEER2.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vpc_pair/#peer2_member_interfaces","title":"PEER2_MEMBER_INTERFACES","text":"Details <ul> <li>default<ul> <li>[]</li> </ul> </li> <li>description<ul> <li>A list of member interfaces for PEER2.</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vpc_pair/#peer2_pcid","title":"PEER2_PCID","text":"Details <ul> <li>default<ul> <li>1</li> </ul> </li> <li>description<ul> <li>PEER2 peerlink port-channel number. </li> <li>Minimum value is 1 and Maximum value is 4096.</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vpc_pair/#peer2_po_conf","title":"PEER2_PO_CONF","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Additional CLI for PEER2 vPC peerlink port-channel.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vpc_pair/#peer2_po_desc","title":"PEER2_PO_DESC","text":"Details <ul> <li>default<ul> <li></li> </ul> </li> <li>description<ul> <li>Description for the PEER2 port-channel. </li> <li>Minimum length is 1 and Maximum length is 254.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vpc_pair/#templatename","title":"templateName","text":"Details <ul> <li>description<ul> <li>Name of the template which inlcudes the required parameters for creating the VPC switch pair. </li> <li>This parameter is 'mandatory' if the fabric is of type 'LANClassic' or 'External'. It is optional otherwise.</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vpc_pair/#deploy","title":"deploy","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Flag indicating if the configuration must be pushed to the switch.</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vpc_pair/#src_fabric","title":"src_fabric","text":"Details <ul> <li>description<ul> <li>Name of the target fabric for VPC switch pair operations</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vpc_pair/#state","title":"state","text":"Details <ul> <li>choices<ul> <li>merged</li> <li>replaced</li> <li>overridden</li> <li>deleted</li> <li>query</li> <li>fetch</li> </ul> </li> <li>default<ul> <li>merged</li> </ul> </li> <li>description<ul> <li>The required state of the configuration after module completion.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vpc_pair/#templates","title":"templates","text":"Details <ul> <li>default<ul> <li>[]</li> </ul> </li> <li>description<ul> <li>List of templates to be fetched. </li> <li>This is required only if the 'state' is 'fetch'. In this case the list should contain the template names whose details. are to be fetched.</li> </ul> </li> <li>elements<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vpc_pair/#examples","title":"Examples","text":"Details <pre><code>---\n\n# States:\n# This module supports the following states:\n#\n# Merged:\n#   VPC switch pairs defined in the playbook will be merged into the target fabric.\n#\n#   The VPC switch pairs listed in the playbook will be created if not already present on the DCNM\n#   server. If the VPC switch pair is already present and the configuration information included\n#   in the playbook is either different or not present in DCNM, then the corresponding\n#   information is added to the DCNM. If a VPC switch pair  mentioned in playbook\n#   is already present on DCNM and there is no difference in configuration, no operation\n#   will be performed for such switch pairs.\n#\n# Replaced:\n#   VPC switch pairs defined in the playbook will be replaced in the target fabric.\n#\n#   The state of the VPC switch pairs listed in the playbook will serve as source of truth for the\n#   same VPC switch pairs present on the DCNM under the fabric mentioned. Additions and updations\n#   will be done to bring the DCNM VPC switch pairs to the state listed in the playbook.\n#   Note: Replace will only work on the VPC switch pairs mentioned in the playbook.\n#\n# Overridden:\n#   VPC switch pairs defined in the playbook will be overridden in the target fabric.\n#\n#   The state of the VPC switch pairs listed in the playbook will serve as source of truth for all\n#   the VPC switch pairs under the fabric mentioned. Additions and deletions will be done to bring\n#   the DCNM VPC switch pairs to the state listed in the playbook. All VPC switch pairs other than the\n#   ones mentioned in the playbook will be deleted.\n#   Note: Override will work on the all the VPC switch pairs present in the DCNM Fabric.\n#\n# Deleted:\n#   VPC switch pairs defined in the playbook will be deleted in the target fabric.\n#\n#   Deletes the list of VPC switch pairs specified in the playbook.  If the playbook does not include\n#   any VPC switch pair information, then all VPC switch pairs from the fabric will be deleted.\n#\n# Query:\n#   Returns the current DCNM state for the VPC switch pairs listed in the playbook.\n\n# CREATE VPC SWITCH PAIR (LANClassic or External fabrics)\n\n- name: Merge VPC switch pair paremeters\n  cisco.dcnm.dcnm_vpc_pair:\n    src_fabric: \"test-fabric\"\n    deploy: true\n    state: merged\n    config:\n      - peerOneId: 192.168.1.1\n        peerTwoId: 192.168.1.2\n        templateName: \"vpc_pair\"\n        profile:\n          ADMIN_STATE: True\n          ALLOWED_VLANS: \"all\"\n          DOMAIN_ID: 100\n          FABRIC_NAME: test-fabric\n          KEEP_ALIVE_HOLD_TIMEOUT: 3\n          KEEP_ALIVE_VRF: management\n          PC_MODE: active\n          PEER1_DOMAIN_CONF: \"graceful consistency-check\"\n          PEER1_KEEP_ALIVE_LOCAL_IP: 192.168.1.1\n          PEER1_MEMBER_INTERFACES: e1/21,e1/22-23\n          PEER1_PCID: 101\n          PEER1_PO_CONF: \"buffer-boost\"\n          PEER1_PO_DESC: \"This is peer1 PC\"\n          PEER2_DOMAIN_CONF: \"graceful consistency-check\"\n          PEER2_KEEP_ALIVE_LOCAL_IP: 192.168.1.2\n          PEER2_MEMBER_INTERFACES: e1/21,e1/22-23\n          PEER2_PCID: 102\n          PEER2_PO_CONF: \"buffer-boost\"\n          PEER2_PO_DESC: \"This is peer2 PC\"\n\n# CREATE VPC SWITCH PAIR (VXLAN fabrics)\n\n- name: Merge VPC switch pair paremeters\n  cisco.dcnm.dcnm_vpc_pair:\n    src_fabric: \"test-fabric\"\n    deploy: true\n    state: merged\n    config:\n      - peerOneId: 192.168.1.1\n        peerTwoId: 192.168.1.2\n\n# DELETE VPC SWITCH PAIR\n\n- name: Delete VPC switch pair\n  cisco.dcnm.dcnm_vpc_pair:\n    src_fabric: \"test-fabric\"\n    deploy: true\n    state: deleted\n    config:\n      - peerOneId: 192.168.1.1\n        peerTwoId: 192.168.1.2\n\n# REPLACE VPC SWITCH PAIR (LANClassic or External fabrics)\n\n- name: Replace VPC switch pair paremeters\n  cisco.dcnm.dcnm_vpc_pair:\n    src_fabric: \"test-fabric\"\n    deploy: true\n    state: merged\n    config:\n      - peerOneId: 192.168.1.1\n        peerTwoId: 192.168.1.2\n        templateName: \"vpc_pair\"\n        profile:\n          ADMIN_STATE: True\n          ALLOWED_VLANS: \"all\"\n          DOMAIN_ID: 100\n          FABRIC_NAME: test-fabric\n          KEEP_ALIVE_HOLD_TIMEOUT: 3\n          KEEP_ALIVE_VRF: management\n          PC_MODE: active\n          PEER1_DOMAIN_CONF: \"graceful consistency-check\"\n          PEER1_KEEP_ALIVE_LOCAL_IP: 192.168.1.1\n          PEER1_MEMBER_INTERFACES: e1/21,e1/22-23\n          PEER1_PCID: 101\n          PEER1_PO_CONF: \"buffer-boost\"\n          PEER1_PO_DESC: \"This is peer1 PC\"\n          PEER2_DOMAIN_CONF: \"graceful consistency-check\"\n          PEER2_KEEP_ALIVE_LOCAL_IP: 192.168.1.2\n          PEER2_MEMBER_INTERFACES: e1/21,e1/22-23\n          PEER2_PCID: 102\n          PEER2_PO_CONF: \"buffer-boost\"\n          PEER2_PO_DESC: \"This is peer2 PC\"\n\n# OVERRIDDE VPC SWITCH PAIRS\n\n- name: Override with a new VPC switch pair\n  cisco.dcnm.dcnm_vpc_pair:\n    src_fabric: \"test-fabric\"\n    deploy: true\n    state: overridden\n    config:\n      - peerOneId: 192.168.1.1\n        peerTwoId: 192.168.1.2\n        templateName: \"vpc_pair\"\n        profile:\n          ADMIN_STATE: True\n          ALLOWED_VLANS: \"all\"\n          DOMAIN_ID: 100\n          FABRIC_NAME: \"test-fabric\"\n          KEEP_ALIVE_HOLD_TIMEOUT: 3\n          KEEP_ALIVE_VRF: management\n          PC_MODE: active\n          PEER1_KEEP_ALIVE_LOCAL_IP: 192.168.1.1\n          PEER1_MEMBER_INTERFACES: e1/20\n          PEER1_PCID: 101\n          PEER1_PO_DESC: \"This is peer1 PC\"\n          PEER2_KEEP_ALIVE_LOCAL_IP: 192.168.1.2\n          PEER2_MEMBER_INTERFACES: e1/20\n          PEER2_PCID: 102\n          PEER2_PO_DESC: \"This is peer2 PC\"\n\n- name: Override without any new switch pairs\n  cisco.dcnm.dcnm_vpc_pair:\n    src_fabric: \"test-fabric\"\n    deploy: true\n    state: overridden\n\n# QUERY VPC SWITCH PAIRS\n\n- name: Query VPC switch pairs - with no filters\n  cisco.dcnm.dcnm_vpc_pair:\n    src_fabric: \"test-fabric\"\n    state: query\n\n- name: Query VPC switch pairs - with both peers specified\n  cisco.dcnm.dcnm_vpc_pair:\n    src_fabric: \"test-fabric\"\n    state: query\n    config:\n      - peerOneId: \"{{ ansible_switch1 }}\"\n        peerTwoId: \"{{ ansible_switch2 }}\"\n\n- name: Query VPC switch pairs - with one peer specified\n  cisco.dcnm.dcnm_vpc_pair:\n    src_fabric: \"test-fabric\"\n    state: query\n    config:\n      - peerOneId: \"{{ ansible_switch1 }}\"\n</code></pre>"},{"location":"modules/dcnm_vrf/","title":"dcnm_vrf","text":"Details <ul> <li>author<ul> <li>Shrishail Kariyappanavar(@nkshrishail), Karthik Babu Harichandra Babu (@kharicha), Praveen Ramoorthy(@praveenramoorthy)</li> </ul> </li> <li>description<ul> <li>Add and remove VRFs and VRF Lite Extension from a DCNM managed VXLAN fabric. </li> <li>In Multisite fabrics, VRFs can be created only on Multisite fabric </li> <li>In Multisite fabrics, VRFs cannot be created on member fabric</li> </ul> </li> <li>short_description<ul> <li>Add and remove VRFs from a DCNM managed VXLAN fabric.</li> </ul> </li> <li>version_added<ul> <li>0.9.0</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#options","title":"options","text":"Details"},{"location":"modules/dcnm_vrf/#config","title":"config","text":"Details <ul> <li>description<ul> <li>List of details of vrfs being managed. Not required for state deleted</li> </ul> </li> <li>elements<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#adv_default_routes","title":"adv_default_routes","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Flag to Control Advertisement of Default Route Internally</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#adv_host_routes","title":"adv_host_routes","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Flag to Control Advertisement of /32 and /128 Routes to Edge Routers</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#attach","title":"attach","text":"Details <ul> <li>description<ul> <li>List of vrf attachment details</li> </ul> </li> <li>elements<ul> <li>dict</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#deploy","title":"deploy","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Per switch knob to control whether to deploy the attachment </li> <li>This knob has been deprecated from Ansible NDFC Collection Version 2.1.0 onwards. There will not be any functional impact if specified in playbook.</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#export_evpn_rt","title":"export_evpn_rt","text":"Details <ul> <li>description<ul> <li>export evpn route-target </li> <li>supported on NDFC only </li> <li>Use ',' to separate multiple route-targets</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#import_evpn_rt","title":"import_evpn_rt","text":"Details <ul> <li>description<ul> <li>import evpn route-target </li> <li>supported on NDFC only </li> <li>Use ',' to separate multiple route-targets</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#ip_address","title":"ip_address","text":"Details <ul> <li>description<ul> <li>IP address of the switch where vrf will be attached or detached</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#vrf_lite","title":"vrf_lite","text":"Details <ul> <li>description<ul> <li>VRF Lite Extensions options</li> </ul> </li> <li>elements<ul> <li>dict</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#dot1q","title":"# dot1q","text":"Details <ul> <li>description<ul> <li>DOT1Q Id</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#interface","title":"# interface","text":"Details <ul> <li>description<ul> <li>Interface of the switch which is connected to the edge router</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#ipv4_addr","title":"# ipv4_addr","text":"Details <ul> <li>description<ul> <li>IP address of the interface which is connected to the edge router</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#ipv6_addr","title":"# ipv6_addr","text":"Details <ul> <li>description<ul> <li>IPv6 address of the interface which is connected to the edge router</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#neighbor_ipv4","title":"# neighbor_ipv4","text":"Details <ul> <li>description<ul> <li>Neighbor IP address of the edge router</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#neighbor_ipv6","title":"# neighbor_ipv6","text":"Details <ul> <li>description<ul> <li>Neighbor IPv6 address of the edge router</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#peer_vrf","title":"# peer_vrf","text":"Details <ul> <li>description<ul> <li>VRF Name to which this extension is attached</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#bgp_passwd_encrypt","title":"bgp_passwd_encrypt","text":"Details <ul> <li>choices<ul> <li>3</li> <li>7</li> </ul> </li> <li>default<ul> <li>3</li> </ul> </li> <li>description<ul> <li>VRF Lite BGP Key Encryption Type </li> <li>Allowed values are 3 (3DES) and 7 (Cisco)</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#bgp_password","title":"bgp_password","text":"Details <ul> <li>description<ul> <li>VRF Lite BGP neighbor password </li> <li>Password should be in Hex string format</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#deploy_1","title":"deploy","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Global knob to control whether to deploy the attachment </li> <li>Ansible NDFC Collection Behavior for Version 2.0.1 and earlier </li> <li>This knob will create and deploy the attachment in DCNM only when set to \"True\" in playbook </li> <li>Ansible NDFC Collection Behavior for Version 2.1.0 and later </li> <li>Attachments specified in the playbook will always be created in DCNM. This knob, when set to \"True\",  will deploy the attachment in DCNM, by pushing the configs to switch. If set to \"False\", the attachments will be created in DCNM, but will not be deployed</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#disable_rt_auto","title":"disable_rt_auto","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Disable RT Auto-Generate </li> <li>supported on NDFC only</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#export_evpn_rt_1","title":"export_evpn_rt","text":"Details <ul> <li>description<ul> <li>EVPN routes to export </li> <li>supported on NDFC only </li> <li>Use ',' to separate multiple route-targets</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#export_mvpn_rt","title":"export_mvpn_rt","text":"Details <ul> <li>description<ul> <li>MVPN routes to export </li> <li>supported on NDFC only </li> <li>Can be configured only when TRM is enabled </li> <li>Use ',' to separate multiple route-targets</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#export_vpn_rt","title":"export_vpn_rt","text":"Details <ul> <li>description<ul> <li>VPN routes to export </li> <li>supported on NDFC only </li> <li>Use ',' to separate multiple route-targets</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#import_evpn_rt_1","title":"import_evpn_rt","text":"Details <ul> <li>description<ul> <li>EVPN routes to import </li> <li>supported on NDFC only </li> <li>Use ',' to separate multiple route-targets</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#import_mvpn_rt","title":"import_mvpn_rt","text":"Details <ul> <li>description<ul> <li>MVPN routes to import </li> <li>supported on NDFC only </li> <li>Can be configured only when TRM is enabled </li> <li>Use ',' to separate multiple route-targets</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#import_vpn_rt","title":"import_vpn_rt","text":"Details <ul> <li>description<ul> <li>VPN routes to import </li> <li>supported on NDFC only </li> <li>Use ',' to separate multiple route-targets</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#ipv6_linklocal_enable","title":"ipv6_linklocal_enable","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Enable IPv6 link-local Option</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#loopback_route_tag","title":"loopback_route_tag","text":"Details <ul> <li>default<ul> <li>12345</li> </ul> </li> <li>description<ul> <li>Loopback Routing Tag</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#max_bgp_paths","title":"max_bgp_paths","text":"Details <ul> <li>default<ul> <li>1</li> </ul> </li> <li>description<ul> <li>Max BGP Paths</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#max_ibgp_paths","title":"max_ibgp_paths","text":"Details <ul> <li>default<ul> <li>2</li> </ul> </li> <li>description<ul> <li>Max iBGP Paths</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#netflow_enable","title":"netflow_enable","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable netflow on VRF-LITE Sub-interface </li> <li>Netflow is supported only if it is enabled on fabric </li> <li>Netflow configs are supported on NDFC only</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#nf_monitor","title":"nf_monitor","text":"Details <ul> <li>description<ul> <li>Netflow Monitor </li> <li>Netflow configs are supported on NDFC only</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#no_rp","title":"no_rp","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>No RP, only SSM is used </li> <li>supported on NDFC only</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#overlay_mcast_group","title":"overlay_mcast_group","text":"Details <ul> <li>description<ul> <li>Underlay IPv4 Multicast group (224.0.0.0/4 to 239.255.255.255/4) </li> <li>Can be configured only when TRM is enabled</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#redist_direct_rmap","title":"redist_direct_rmap","text":"Details <ul> <li>default<ul> <li>FABRIC-RMAP-REDIST-SUBNET</li> </ul> </li> <li>description<ul> <li>Redistribute Direct Route Map</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#rp_address","title":"rp_address","text":"Details <ul> <li>description<ul> <li>IPv4 Address of RP </li> <li>Can be configured only when TRM is enabled</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#rp_external","title":"rp_external","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Specifies if RP is external to the fabric </li> <li>Can be configured only when TRM is enabled</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#rp_loopback_id","title":"rp_loopback_id","text":"Details <ul> <li>description<ul> <li>loopback ID of RP </li> <li>Can be configured only when TRM is enabled</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#service_vrf_template","title":"service_vrf_template","text":"Details <ul> <li>default<ul> <li>None</li> </ul> </li> <li>description<ul> <li>Service vrf template</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#static_default_route","title":"static_default_route","text":"Details <ul> <li>default<ul> <li>True</li> </ul> </li> <li>description<ul> <li>Flag to Control Static Default Route Configuration</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#trm_bgw_msite","title":"trm_bgw_msite","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable TRM on Border Gateway Multisite </li> <li>Can be configured only when TRM is enabled</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#trm_enable","title":"trm_enable","text":"Details <ul> <li>default<ul> <li>False</li> </ul> </li> <li>description<ul> <li>Enable Tenant Routed Multicast</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>bool</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#underlay_mcast_ip","title":"underlay_mcast_ip","text":"Details <ul> <li>description<ul> <li>Underlay IPv4 Multicast Address </li> <li>Can be configured only when TRM is enabled</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#vlan_id","title":"vlan_id","text":"Details <ul> <li>description<ul> <li>vlan ID for the vrf attachment </li> <li>If not specified in the playbook, DCNM will auto-select an available vlan_id</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#vrf_description","title":"vrf_description","text":"Details <ul> <li>description<ul> <li>VRF Description</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#vrf_extension_template","title":"vrf_extension_template","text":"Details <ul> <li>default<ul> <li>Default_VRF_Extension_Universal</li> </ul> </li> <li>description<ul> <li>Name of the extension config template to be used</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#vrf_id","title":"vrf_id","text":"Details <ul> <li>description<ul> <li>ID of the vrf being managed</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#vrf_int_mtu","title":"vrf_int_mtu","text":"Details <ul> <li>default<ul> <li>9216</li> </ul> </li> <li>description<ul> <li>VRF interface MTU</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>int</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#vrf_intf_desc","title":"vrf_intf_desc","text":"Details <ul> <li>description<ul> <li>VRF Intf Description</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#vrf_name","title":"vrf_name","text":"Details <ul> <li>description<ul> <li>Name of the vrf being managed</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#vrf_template","title":"vrf_template","text":"Details <ul> <li>default<ul> <li>Default_VRF_Universal</li> </ul> </li> <li>description<ul> <li>Name of the config template to be used</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#vrf_vlan_name","title":"vrf_vlan_name","text":"Details <ul> <li>description<ul> <li>VRF Vlan Name </li> <li>if &gt; 32 chars enable </li> <li>system vlan long-name</li> </ul> </li> <li>required<ul> <li>False</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> <li>type<ul> <li>list</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#fabric","title":"fabric","text":"Details <ul> <li>description<ul> <li>Name of the target fabric for vrf operations</li> </ul> </li> <li>required<ul> <li>True</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#state","title":"state","text":"Details <ul> <li>choices<ul> <li>merged</li> <li>replaced</li> <li>overridden</li> <li>deleted</li> <li>query</li> </ul> </li> <li>default<ul> <li>merged</li> </ul> </li> <li>description<ul> <li>The state of DCNM after module completion.</li> </ul> </li> <li>type<ul> <li>str</li> </ul> </li> </ul>"},{"location":"modules/dcnm_vrf/#examples","title":"Examples","text":"Details <pre><code>---\n# This module supports the following states:\n#\n# Merged:\n#   VRFs defined in the playbook will be merged into the target fabric.\n#     - If the VRF does not exist it will be added.\n#     - If the VRF exists but properties managed by the playbook are different\n#       they will be updated if possible.\n#     - VRFs that are not specified in the playbook will be untouched.\n#\n# Replaced:\n#   VRFs defined in the playbook will be replaced in the target fabric.\n#     - If the VRF does not exist it will be added.\n#     - If the VRF exists but properties managed by the playbook are different\n#       they will be updated if possible.\n#     - Properties that can be managed by the module but are  not specified\n#       in the playbook will be deleted or defaulted if possible.\n#     - VRFs that are not specified in the playbook will be untouched.\n#\n# Overridden:\n#   VRFs defined in the playbook will be overridden in the target fabric.\n#     - If the VRF does not exist it will be added.\n#     - If the VRF exists but properties managed by the playbook are different\n#       they will be updated if possible.\n#     - Properties that can be managed by the module but are not specified\n#       in the playbook will be deleted or defaulted if possible.\n#     - VRFs that are not specified in the playbook will be deleted.\n#\n# Deleted:\n#   VRFs defined in the playbook will be deleted.\n#   If no VRFs are provided in the playbook, all VRFs present on that DCNM fabric will be deleted.\n#\n# Query:\n#   Returns the current DCNM state for the VRFs listed in the playbook.\n#\n# rollback functionality:\n# This module supports task level rollback functionality. If any task runs into failures, as part of failure\n# handling, the module tries to bring the state of the DCNM back to the state captured in have structure at the\n# beginning of the task execution. Following few lines provide a logical description of how this works,\n# if (failure)\n#     want data = have data\n#     have data = get state of DCNM\n#     Run the module in override state with above set of data to produce the required set of diffs\n#     and push the diff payloads to DCNM.\n# If rollback fails, the module does not attempt to rollback again, it just quits with appropriate error messages.\n\n# The two VRFs below will be merged into the target fabric.\n- name: Merge vrfs\n  cisco.dcnm.dcnm_vrf:\n    fabric: vxlan-fabric\n    state: merged\n    config:\n    - vrf_name: ansible-vrf-r1\n      vrf_id: 9008011\n      vrf_template: Default_VRF_Universal\n      vrf_extension_template: Default_VRF_Extension_Universal\n      vlan_id: 2000\n      service_vrf_template: null\n      attach:\n      - ip_address: 192.168.1.224\n      - ip_address: 192.168.1.225\n    - vrf_name: ansible-vrf-r2\n      vrf_id: 9008012\n      vrf_template: Default_VRF_Universal\n      vrf_extension_template: Default_VRF_Extension_Universal\n      service_vrf_template: null\n      attach:\n      - ip_address: 192.168.1.224\n      - ip_address: 192.168.1.225\n\n# VRF LITE Extension attached\n- name: Merge vrfs\n  cisco.dcnm.dcnm_vrf:\n    fabric: vxlan-fabric\n    state: merged\n    config:\n    - vrf_name: ansible-vrf-r1\n      vrf_id: 9008011\n      vrf_template: Default_VRF_Universal\n      vrf_extension_template: Default_VRF_Extension_Universal\n      vlan_id: 2000\n      service_vrf_template: null\n      attach:\n      - ip_address: 192.168.1.224\n      - ip_address: 192.168.1.225\n        vrf_lite:\n          - peer_vrf: test_vrf_1 # optional\n            interface: Ethernet1/16 # mandatory\n            ipv4_addr: 10.33.0.2/30 # optional\n            neighbor_ipv4: 10.33.0.1 # optional\n            ipv6_addr: 2010::10:34:0:7/64 # optional\n            neighbor_ipv6: 2010::10:34:0:3 # optional\n            dot1q: 2 # dot1q can be got from dcnm/optional\n          - peer_vrf: test_vrf_2 # optional\n            interface: Ethernet1/17 # mandatory\n            ipv4_addr: 20.33.0.2/30 # optional\n            neighbor_ipv4: 20.33.0.1 # optional\n            ipv6_addr: 3010::10:34:0:7/64 # optional\n            neighbor_ipv6: 3010::10:34:0:3 # optional\n            dot1q: 3 # dot1q can be got from dcnm/optional\n\n# The two VRFs below will be replaced in the target fabric.\n- name: Replace vrfs\n  cisco.dcnm.dcnm_vrf:\n    fabric: vxlan-fabric\n    state: replaced\n    config:\n    - vrf_name: ansible-vrf-r1\n      vrf_id: 9008011\n      vrf_template: Default_VRF_Universal\n      vrf_extension_template: Default_VRF_Extension_Universal\n      vlan_id: 2000\n      service_vrf_template: null\n      attach:\n      - ip_address: 192.168.1.224\n      # Delete this attachment\n      # - ip_address: 192.168.1.225\n      # Create the following attachment\n      - ip_address: 192.168.1.226\n    # Dont touch this if its present on DCNM\n    # - vrf_name: ansible-vrf-r2\n    #   vrf_id: 9008012\n    #   vrf_template: Default_VRF_Universal\n    #   vrf_extension_template: Default_VRF_Extension_Universal\n    #   attach:\n    #   - ip_address: 192.168.1.224\n    #   - ip_address: 192.168.1.225\n\n# The two VRFs below will be overridden in the target fabric.\n- name: Override vrfs\n  cisco.dcnm.dcnm_vrf:\n    fabric: vxlan-fabric\n    state: overridden\n    config:\n    - vrf_name: ansible-vrf-r1\n      vrf_id: 9008011\n      vrf_template: Default_VRF_Universal\n      vrf_extension_template: Default_VRF_Extension_Universal\n      vlan_id: 2000\n      service_vrf_template: null\n      attach:\n      - ip_address: 192.168.1.224\n      # Delete this attachment\n      # - ip_address: 192.168.1.225\n      # Create the following attachment\n      - ip_address: 192.168.1.226\n    # Delete this vrf\n    # - vrf_name: ansible-vrf-r2\n    #   vrf_id: 9008012\n    #   vrf_template: Default_VRF_Universal\n    #   vrf_extension_template: Default_VRF_Extension_Universal\n    #   vlan_id: 2000\n    #   service_vrf_template: null\n    #   attach:\n    #   - ip_address: 192.168.1.224\n    #   - ip_address: 192.168.1.225\n\n- name: Delete selected vrfs\n  cisco.dcnm.dcnm_vrf:\n    fabric: vxlan-fabric\n    state: deleted\n    config:\n    - vrf_name: ansible-vrf-r1\n      vrf_id: 9008011\n      vrf_template: Default_VRF_Universal\n      vrf_extension_template: Default_VRF_Extension_Universal\n      vlan_id: 2000\n      service_vrf_template: null\n    - vrf_name: ansible-vrf-r2\n      vrf_id: 9008012\n      vrf_template: Default_VRF_Universal\n      vrf_extension_template: Default_VRF_Extension_Universal\n      vlan_id: 2000\n      service_vrf_template: null\n\n- name: Delete all the vrfs\n  cisco.dcnm.dcnm_vrf:\n    fabric: vxlan-fabric\n    state: deleted\n\n- name: Query vrfs\n  cisco.dcnm.dcnm_vrf:\n    fabric: vxlan-fabric\n    state: query\n    config:\n    - vrf_name: ansible-vrf-r1\n    - vrf_name: ansible-vrf-r2\n</code></pre>"},{"location":"plugins/action/","title":"Action plugins","text":""},{"location":"plugins/action/#dcnm_image_upgradepy","title":"dcnm_image_upgrade.py","text":""},{"location":"plugins/httpapi/","title":"dcnm.py","text":""},{"location":"plugins/httpapi/#author","title":"author","text":"<p>Mike Wiebe (@mikewiebe)</p>"},{"location":"plugins/httpapi/#name","title":"name","text":"<p>dcnm</p>"},{"location":"plugins/httpapi/#short_description","title":"short_description","text":"<p>Ansible DCNM HTTPAPI Plugin.</p>"},{"location":"plugins/httpapi/#description","title":"description","text":"<p>This DCNM plugin provides the HTTPAPI transport methods needed to initiate a connection to the DCNM controller, send API requests and process the respsonse from the controller.</p>"},{"location":"plugins/httpapi/#version_added","title":"version_added","text":"<p><code>0.9.0</code></p>"},{"location":"plugins/httpapi/#options","title":"options","text":""},{"location":"plugins/httpapi/#login_domain","title":"login_domain","text":""},{"location":"plugins/httpapi/#description_1","title":"description","text":"<p>The login domain name to use for user authentication</p> <p>Only needed for NDFC</p>"},{"location":"plugins/httpapi/#type","title":"type","text":"<p>string</p>"},{"location":"plugins/httpapi/#default","title":"default","text":"<p>local</p>"},{"location":"plugins/httpapi/#env","title":"env","text":""},{"location":"plugins/httpapi/#name_1","title":"name","text":"<p><code>ANSIBLE_HTTPAPI_LOGIN_DOMAIN</code></p>"},{"location":"plugins/httpapi/#vars","title":"vars","text":""},{"location":"plugins/httpapi/#name_2","title":"name","text":"<p><code>ansible_httpapi_login_domain</code></p>"}]}