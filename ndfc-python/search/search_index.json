{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>ndfc-python contains Python classes and example scripts for interacting with Cisco's Nexus Dashboard Fabric Controller (NDFC) via its REST API.</p>"},{"location":"classes/Log/","title":"Log","text":""},{"location":"classes/Log/#description","title":"Description","text":"<p>Create the base ndfc_python logging object</p>"},{"location":"classes/Log/#see-also","title":"See also","text":"<p>NdfcPythonLogger()</p>"},{"location":"classes/Log/#raises","title":"Raises","text":"<ul> <li> <p><code>ValueError</code></p> <ul> <li>An error is encountered reading the logging config file.</li> <li>An error is encountered parsing the logging config file.</li> <li>No formatters are found in the logging config file that are associated with the configured handlers.</li> </ul> </li> <li> <p><code>TypeError</code></p> <ul> <li><code>develop</code> is not a boolean.</li> </ul> </li> </ul>"},{"location":"classes/Log/#methods","title":"Methods","text":"<code>commit()</code> <p>If <code>config</code> is None, disable logging.</p> <p>If <code>config</code> is a JSON file conformant with <code>logging.config.dictConfig</code> read the file and configure the base logger instance from the file's contents.</p>"},{"location":"classes/Log/#properties","title":"Properties","text":"<code>config</code> <p>Override the <code>NDFC_LOGGING_CONFIG</code> environment variable.  Value is an absolute path to a JSON file from which logging config is read.  The JSON file must conform to <code>logging.config.dictConfig</code> from Python's standard library.</p> <p>Type: str()</p> <p>Default: None</p> <p>Raises: None</p> <code>develop</code> <p>Disable or enable exceptions raised by the logging module.</p> <p>Type: bool()</p> <p>Default: False</p> <p>Raises: TypeError if value is not a bool()</p>"},{"location":"classes/Log/#usage","title":"Usage","text":"<p>By default, Log() does the following:</p> <ol> <li>Reads the environment variable <code>NDFC_LOGGING_CONFIG</code> to determine the path    to the logging config file.  If the environment variable is not set, then    logging is disabled.</li> <li>Sets <code>develop</code> to False.  This disables exceptions raised by the logging    module itself.</li> </ol>"},{"location":"classes/Log/#set-environment-variable","title":"Set environment variable","text":"<p>Set the environment variable <code>NDFC_LOGGING_CONFIG</code> to the path of the logging config file.  <code>bash</code> shell is used in the example below.</p> set NDFC_LOGGING_CONFIG<pre><code>export NDFC_LOGGING_CONFIG=\"/path/to/logging_config.json\"\n</code></pre>"},{"location":"classes/Log/#instantiate-log","title":"Instantiate <code>Log()</code>","text":"<p>Instantiate <code>Log()</code> and call <code>commit()</code> on the instance.</p> instantiate Log()<pre><code>import logging\nfrom ndfc_python.log_v2 import Log\n\ntry:\n    logger = Log()\n    logger.commit()\nexcept (TypeError, ValueError) as error:\n    print(f\"Opps! {error}\")\n    # handle error\n</code></pre> <p>At this point, a base/parent logger (<code>ndfc_python</code>) is created.  This loggerr is defined in the example logging config file further below.</p>"},{"location":"classes/Log/#create-a-logger-under-ndfc_python","title":"Create a logger under <code>ndfc_python</code>","text":"Create log instance<pre><code>log = logging.getLogger(\"ndfc_python.myLogger\")\n</code></pre>"},{"location":"classes/Log/#start-logging","title":"Start logging","text":"Start logging<pre><code>log.info(\"Logger created.\")\n</code></pre>"},{"location":"classes/Log/#disable-logging","title":"Disable logging","text":"<p>To disable for all children, unset the environment variable.</p> <pre><code>unset NDFC_LOGGING_CONFIG\n</code></pre>"},{"location":"classes/Log/#enable-exceptions","title":"Enable exceptions","text":"<p>To enable exceptions from the logging module (not recommended, unless needed for development), set <code>develop</code> to True.</p> set log.develop<pre><code>from ndfc_python.log_v2 import Log\ntry:\n    log = Log()\n    log.develop = True\n    log.commit()\nexcept (TypeError, ValueError) as error:\n    # handle error\n</code></pre>"},{"location":"classes/Log/#override-ndfc_logging_config","title":"Override NDFC_LOGGING_CONFIG","text":"<p>To directly set the path to the logging config file, overriding the <code>NDFC_LOGGING_CONFIG</code> environment variable, set the <code>config</code> property prior to calling <code>commit()</code>:</p> Override NDFC_LOGGING_CONFIG<pre><code>from ndfc_python.log_v2 import Log\ntry:\n    log = Log()\n    log.config = \"/path/to/logging_config.json\"\n    log.commit()\nexcept (TypeError, ValueError) as error:\n    # handle error\n</code></pre>"},{"location":"classes/Log/#example-use-in-a-script","title":"Example use in a script","text":"<pre><code>import sys\nfrom ndfc_python.log_v2 import Log\n\ndef main():\n    try:\n        log = Log()\n        log.commit()\n    except (TypeError, ValueError) as error:\n        print(f\"Error setting up the logger: {error}\")\n        sys.exit(1)\n\n    log.info(\"Scipt started\")\n</code></pre>"},{"location":"classes/Log/#example-use-in-a-class","title":"Example use in a class","text":"Example use in a class<pre><code>class MyClass:\n    def __init__(self):\n        self.class_name = self.__class__.__name__\n        self.log = logging.getLogger(f\"ndfc_python.{self.class_name}\")\n    def some_method(self):\n        self.log.debug(\"This is a debug message.\")\n</code></pre>"},{"location":"classes/Log/#logging-config-file","title":"Logging Config File","text":"<p>The logging config file must conform to <code>logging.config.dictConfig</code> from Python's standard library.</p> <p>An example logging config file is shown below.</p> $HOME/repos/ndfc-python/lib/ndfc_python/logging_config.json<pre><code>{\n  \"version\": 1,\n  \"formatters\": {\n    \"standard\": {\n      \"class\": \"logging.Formatter\",\n      \"format\": \"%(asctime)s - %(levelname)s - [%(name)s.%(funcName)s.%(lineno)d] %(message)s\"\n    }\n  },\n  \"handlers\": {\n    \"console\": {\n        \"class\": \"logging.StreamHandler\",\n        \"formatter\": \"standard\",\n        \"stream\"  : \"ext://sys.stdout\"\n      },\n    \"file\": {\n      \"class\": \"logging.handlers.RotatingFileHandler\",\n      \"formatter\": \"standard\",\n      \"filename\": \"/tmp/ndfc-python.log\",\n      \"mode\": \"a\",\n      \"encoding\": \"utf-8\",\n      \"maxBytes\": 50000000,\n      \"backupCount\": 4\n    }\n  },\n  \"loggers\": {\n        \"ndfc_python\": {\n        \"handlers\": [\n            \"console\",\n            \"file\"\n        ],\n        \"level\": \"DEBUG\",\n        \"propagate\": false\n        },\n        \"dcnm\": {\n            \"handlers\": [\n            \"file\"\n            ],\n            \"level\": \"DEBUG\",\n            \"propagate\": false\n        },\n        \"root\": {\n            \"level\": \"INFO\",\n            \"handlers\": [\n            \"file\"\n            ]\n        }\n    }\n}\n</code></pre>"},{"location":"classes/NetworkCreate/","title":"NetworkCreate","text":""},{"location":"classes/NetworkCreate/#description","title":"Description","text":"<p>Create a network</p>"},{"location":"classes/NetworkCreate/#raises","title":"Raises","text":"<ul> <li> <p><code>ValueError</code></p> <ul> <li><code>rest_send</code> is not set prior to calling <code>commit</code>.</li> <li><code>results</code> is not set prior to calling <code>commit</code>.</li> <li><code>network_name</code> is not set prior to calling <code>commit</code>.</li> <li><code>fabric_name</code> is not set prior to calling <code>commit</code>.</li> <li><code>network_id</code> is not set prior to calling <code>commit</code>.</li> <li><code>vlan_id</code> is not set prior to calling <code>commit</code>.</li> <li><code>vrf_name</code> is not set prior to calling <code>commit</code>.</li> <li><code>fabric_name</code> does not exist on the controller.</li> <li><code>vrf_name</code> does not exist in fabric <code>fabric_name</code>.</li> <li><code>network_name</code> already exists in fabric <code>fabric_name</code>.</li> <li>An error occurred when sending the <code>POST</code> request to the controller.</li> </ul> </li> </ul>"},{"location":"classes/NetworkCreate/#properties","title":"Properties","text":""},{"location":"classes/NetworkCreate/#mandatory","title":"Mandatory","text":""},{"location":"classes/NetworkCreate/#fabric_name","title":"fabric_name","text":"<p>The name of the fabric containing the network to be created.</p> <ul> <li>default: None</li> <li>example: MyFabric</li> <li>type: str</li> </ul>"},{"location":"classes/NetworkCreate/#network_id","title":"network_id","text":"<p>The ID the controller should assign to <code>network_name</code>.</p> <ul> <li>default: None</li> <li>example: 30000</li> <li>type: int</li> </ul>"},{"location":"classes/NetworkCreate/#vrf_name","title":"vrf_name","text":"<p>The VRF associated with <code>network_name</code>.</p> <ul> <li>default: None</li> <li>example: MyVrf</li> <li>type: str</li> </ul>"},{"location":"classes/NetworkCreate/#optional","title":"Optional","text":""},{"location":"classes/NetworkCreate/#dhcp_server_addr_1","title":"dhcp_server_addr_1","text":"<p>Set's the value of <code>dhcpServerAddr1</code> in the <code>Default_Network_Universal</code> template.</p> <p>The first DHCP server associated with <code>network_name</code>.</p> <ul> <li>default: None</li> <li>example: 10.1.1.2</li> <li>type: str</li> </ul>"},{"location":"classes/NetworkCreate/#dhcp_server_addr_2","title":"dhcp_server_addr_2","text":"<p>Set's the value of <code>dhcpServerAddr2</code> in the <code>Default_Network_Universal</code> template.</p> <p>The second DHCP server associated with <code>network_name</code>.</p> <ul> <li>default: None</li> <li>example: 10.1.1.3</li> <li>type: str</li> </ul>"},{"location":"classes/NetworkCreate/#dhcp_server_addr_3","title":"dhcp_server_addr_3","text":"<p>Set's the value of <code>dhcpServerAddr3</code> in the <code>Default_Network_Universal</code> template.</p> <p>The third DHCP server associated with <code>network_name</code>.</p> <ul> <li>default: None</li> <li>example: 10.1.1.4</li> <li>type: str</li> </ul>"},{"location":"classes/NetworkCreate/#enable_netflow","title":"enable_netflow","text":"<p>Set's the value of <code>ENABLE_NETFLOW</code> in the <code>Default_Network_Universal</code> template.</p> <p>Netflow is supported only if it is enabled on fabric. For NX-OS only</p> <ul> <li>default: False</li> <li>example: True</li> <li>type: bool</li> </ul>"},{"location":"classes/NetworkCreate/#enable_l3_on_border","title":"enable_l3_on_border","text":"<p>Set's the value of <code>enableL3OnBorder</code> in the <code>Default_Network_Universal</code> template.</p> <p>Create SVI on borders and border gateways, including vPC border gateways and anycast border gateways.</p> <ul> <li>default: False</li> <li>example: True</li> <li>type: bool</li> </ul>"},{"location":"classes/NetworkCreate/#enable_l3_on_border_vpc_bgw","title":"enable_l3_on_border_vpc_bgw","text":"<p>Set's the value of <code>enableL3OnBorderVpcBgw</code> in the <code>Default_Network_Universal</code> template.</p> <p>Create SVI on borders and vPC border gateways. Not applicable to anycast border gateways.</p> <ul> <li>default: False</li> <li>example: True</li> <li>type: bool</li> </ul>"},{"location":"classes/NetworkCreate/#gateway_ip_address","title":"gateway_ip_address","text":"<p>Set's the value of <code>gatewayIpAddress</code> in the <code>Default_Network_Universal</code> template.</p> <p>IPv4 Gateway/NetMask.</p> <ul> <li>default: None</li> <li>example: 192.0.2.1/24</li> <li>type: str</li> </ul>"},{"location":"classes/NetworkCreate/#gateway_ipv6_address","title":"gateway_ipv6_address","text":"<p>Set's the value of <code>gatewayIpV6Address</code> in the <code>Default_Network_Universal</code> template.</p> <p>Comma-separated list of IPv6/Prefix.</p> <ul> <li>default: None</li> <li>example: 2001:db8::1/64,2001:db9::1/64</li> <li>type: str</li> </ul>"},{"location":"classes/NetworkCreate/#igmp_version","title":"igmp_version","text":"<p>If set to non-default value (1 or 3), the <code>ip igmp version</code> command is generated on NX-OS and IOS-XE devices in <code>network_name</code>.</p> <p>See note below for NX-OS.</p> <ul> <li>default: 2</li> <li>example: 3</li> <li>type: str</li> <li>min: 1</li> <li>max: 3</li> <li>note: min is 2 for NX-OS</li> </ul>"},{"location":"classes/NetworkCreate/#intf_description","title":"intf_description","text":"<p>Set's the value of <code>intfDescription</code> in the <code>Default_Network_Universal</code> template.</p> <p>Interface Description.</p> <ul> <li>default: None</li> <li>example: Interface in MyNet</li> <li>type: str</li> </ul>"},{"location":"classes/NetworkCreate/#is_layer2_only","title":"is_layer2_only","text":"<p>Set's the value of <code>isLayer2Only</code> in the <code>Default_Network_Universal</code> template.</p> <p>If True, <code>network_name</code> will be a Layer 2 network. If False, <code>network_name</code> will be a Layer 3 network.</p> <ul> <li>default: False</li> <li>example: True</li> <li>type: bool</li> </ul>"},{"location":"classes/NetworkCreate/#loopback_id","title":"loopback_id","text":"<p>Set's the value of <code>loopbackId</code> in the <code>Default_Network_Universal</code> template.</p> <p>Loopback ID for DHCP Relay interface</p> <ul> <li>default: None</li> <li>example: 10</li> <li>max: 1023</li> <li>min: 0</li> <li>type: int</li> </ul>"},{"location":"classes/NetworkCreate/#mcast_group","title":"mcast_group","text":"<p>Set's the value of <code>mcastGroup</code> in the <code>Default_Network_Universal</code> template.</p> <ul> <li>default: \"\"</li> <li>example: 225.1.1.1</li> <li>type: str</li> </ul>"},{"location":"classes/NetworkCreate/#mtu","title":"mtu","text":"<p>Set's the value of <code>mtu</code> in the <code>Default_Network_Universal</code> template.</p> <p>NX-OS Specific</p> <ul> <li>default: 9216</li> <li>example: 1500</li> <li>type: int</li> <li>min: 68</li> <li>max: 9216</li> </ul>"},{"location":"classes/NetworkCreate/#network_name","title":"network_name","text":"<p>The name of the network to create.</p> <ul> <li>default: MyNetwork_<code>network_id</code></li> <li>example: MyNet</li> <li>type: str</li> </ul>"},{"location":"classes/NetworkCreate/#nve_id","title":"nve_id","text":"<p>Set's the value of <code>nveId</code> in the <code>Default_Network_Universal</code> template.</p> <ul> <li>default: 1</li> <li>example: 1</li> <li>type: int</li> <li>min: 1</li> <li>max: 1</li> </ul>"},{"location":"classes/NetworkCreate/#rt_both_auto","title":"rt_both_auto","text":"<p>Set's the value of <code>rtBothAuto</code> in the <code>Default_Network_Universal</code> template.</p> <p>Might be set in the fabric config and be read-only here? NX-OS Specific.</p> <ul> <li>default: False</li> <li>example: True</li> <li>type: bool</li> </ul>"},{"location":"classes/NetworkCreate/#secondary_gw_1","title":"secondary_gw_1","text":"<p>Set's the value of <code>secondaryGW1</code> in the <code>Default_Network_Universal</code> template.</p> <ul> <li>default: \"\"</li> <li>example: 192.0.2.1/24</li> <li>type: str</li> </ul>"},{"location":"classes/NetworkCreate/#secondary_gw_2","title":"secondary_gw_2","text":"<p>Set's the value of <code>secondaryGW2</code> in the <code>Default_Network_Universal</code> template.</p> <ul> <li>default: \"\"</li> <li>example: 192.0.2.2/24</li> <li>type: str</li> </ul>"},{"location":"classes/NetworkCreate/#secondary_gw_3","title":"secondary_gw_3","text":"<p>Set's the value of <code>secondaryGW3</code> in the <code>Default_Network_Universal</code> template.</p> <ul> <li>default: \"\"</li> <li>example: 192.0.2.3/24</li> <li>type: str</li> </ul>"},{"location":"classes/NetworkCreate/#secondary_gw_4","title":"secondary_gw_4","text":"<p>Set's the value of <code>secondaryGW4</code> in the <code>Default_Network_Universal</code> template.</p> <ul> <li>default: \"\"</li> <li>example: 192.0.2.4/24</li> <li>type: str</li> </ul>"},{"location":"classes/NetworkCreate/#segment_id","title":"segment_id","text":"<p>Set's the value of <code>segmentId</code> in the <code>Default_Network_Universal</code> template.</p> <ul> <li>default: \"\"</li> <li>example: 30000</li> <li>type: int</li> </ul>"},{"location":"classes/NetworkCreate/#suppress_arp","title":"suppress_arp","text":"<p>Set's the value of <code>suppressArp</code> in the <code>Default_Network_Universal</code> template.</p> <p>ARP suppression is only supported if SVI is present when <code>is_layer2_only</code> is set to False.</p> <p>NX-OS Specific</p> <ul> <li>default: False</li> <li>example: NA</li> <li>type: bool</li> </ul>"},{"location":"classes/NetworkCreate/#svi_netflow_monitor","title":"svi_netflow_monitor","text":"<p>Set's the value of <code>SVI_NETFLOW_MONITOR</code> in the <code>Default_Network_Universal</code> template.</p> <p>Applicable only if <code>is_layer2_only</code> is False and <code>enable_netflow</code> is True. Value must be a monitor name defined in fabric setting for Layer 3 Record. For NX-OS only.</p> <ul> <li>default: \"\"</li> <li>example: NA</li> <li>type: str</li> </ul>"},{"location":"classes/NetworkCreate/#tag","title":"tag","text":"<p>Set's the value of <code>tag</code> in the <code>Default_Network_Universal</code> template. NX-OS Specific</p> <p>Routing tag.</p> <ul> <li>default: 12345</li> <li>example: 54321</li> <li>type: int</li> <li>min: 0</li> <li>max: 4294967295</li> </ul>"},{"location":"classes/NetworkCreate/#trm_enabled","title":"trm_enabled","text":"<p>Set's the value of <code>trmEnabled</code> in the <code>Default_Network_Universal</code> template.</p> <p>If True, enable IPv4 Tenant Routed Multicast.</p> <ul> <li>default: False</li> <li>example: True</li> <li>type: bool</li> </ul>"},{"location":"classes/NetworkCreate/#trm_v6_enabled","title":"trm_v6_enabled","text":"<p>Set's the value of <code>trmV6Enabled</code> in the <code>Default_Network_Universal</code> template.</p> <p>If True, enable IPv6 Tenant Routed Multicast.</p> <ul> <li>default: False</li> <li>example: True</li> <li>type: bool</li> </ul>"},{"location":"classes/NetworkCreate/#vrf_dhcp","title":"vrf_dhcp","text":"<p>Set's the value of <code>vrfDhcp</code> in the <code>Default_Network_Universal</code> template.</p> <ul> <li>default: \"\"</li> <li>example: NA</li> <li>type: str</li> </ul>"},{"location":"classes/NetworkCreate/#vlan_name","title":"vlan_name","text":"<p>Set's the value of <code>vlanName</code> in the <code>Default_Network_Universal</code> template.</p> <p>If greater than 32 chars, enable <code>system vlan long-name</code> for NX-OS. Disable <code>VTPv1</code> and <code>VTPv2</code> or switch to <code>VTPv3</code> for IOS-XE.</p> <ul> <li>default: \"\"</li> <li>example: MyVlan</li> <li>type: str</li> </ul>"},{"location":"classes/NetworkCreate/#vlan_id","title":"vlan_id","text":"<p>Set's the value of <code>vlanId</code> in the <code>Default_Network_Universal</code> template.</p> <ul> <li>default: \"\"</li> <li>example: 1111</li> <li>type: int</li> <li>min: 1</li> <li>max: 4094</li> </ul>"},{"location":"classes/NetworkCreate/#vlan_netflow_monitor","title":"vlan_netflow_monitor","text":"<p>Set's the value of <code>VLAN_NETFLOW_MONITOR</code> in the <code>Default_Network_Universal</code> template.</p> <p>Applicable only if <code>enable_netflow</code> is True.</p> <p>Value must be a monitor name defined in fabric setting for Layer 3 Record. For NX-OS only</p> <ul> <li>default: \"\"</li> <li>example: NA</li> <li>type: str</li> </ul>"},{"location":"classes/NetworkCreate/#example-script","title":"Example script","text":"Example Script<pre><code>import argparse\nimport logging\nimport sys\n\n# We are using our local copy of log_v2.py which is modified to allow\n# console logging.  The copy in the DCNM Ansible Collection specifically\n# disallows console logging.\nfrom ndfc_python.ndfc_python_config import NdfcPythonConfig\nfrom ndfc_python.ndfc_python_logger import NdfcPythonLogger\nfrom ndfc_python.ndfc_python_sender import NdfcPythonSender\nfrom ndfc_python.network_create import NetworkCreate\nfrom ndfc_python.parsers.parser_config import parser_config\nfrom ndfc_python.parsers.parser_controller_domain import parser_controller_domain\nfrom ndfc_python.parsers.parser_controller_ip4 import parser_controller_ip4\nfrom ndfc_python.parsers.parser_controller_password import parser_controller_password\nfrom ndfc_python.parsers.parser_controller_username import parser_controller_username\nfrom ndfc_python.parsers.parser_loglevel import parser_loglevel\nfrom plugins.module_utils.common.response_handler import ResponseHandler\nfrom plugins.module_utils.common.rest_send_v2 import RestSend\nfrom plugins.module_utils.common.results import Results\n\n\ndef setup_parser() -&gt; argparse.Namespace:\n    \"\"\"\n    ### Summary\n\n    Setup script-specific parser\n\n    Returns:\n        argparse.Namespace\n    \"\"\"\n    parser = argparse.ArgumentParser(\n        parents=[\n            parser_config,\n            parser_loglevel,\n            parser_controller_domain,\n            parser_controller_ip4,\n            parser_controller_password,\n            parser_controller_username,\n        ],\n        description=\"DESCRIPTION: Create a network.\",\n    )\n    return parser.parse_args()\n\nargs = setup_parser()\nNdfcPythonLogger()\nlog = logging.getLogger(\"ndfc_python.main\")\nlog.setLevel = args.loglevel\n\ntry:\n    ndfc_sender = NdfcPythonSender()\n    ndfc_sender.args = args\n    ndfc_sender.commit()\nexcept ValueError as error:\n    msg = f\"Exiting.  Error detail: {error}\"\n    log.error(msg)\n    sys.exit(1)\n\ntry:\n    ndfc_config = NdfcPythonConfig()\n    ndfc_config.filename = args.config\n    ndfc_config.commit()\n    config = ndfc_config.contents[\"config\"]\nexcept ValueError as error:\n    msg = f\"Exiting: Error detail: {error}\"\n    log.error(msg)\n    print(msg)\n    sys.exit()\n\nrest_send = RestSend({})\nrest_send.sender = ndfc_sender.sender\nrest_send.response_handler = ResponseHandler()\n\ntry:\n    instance = NetworkCreate()\n    instance.rest_send = rest_send\n    instance.results = Results()\n    instance.fabric_name = config.get(\"fabric_name\")\n    instance.network_name = config.get(\"network_name\")\n    instance.enable_ir = config.get(\"enable_ir\")\n    instance.gateway_ip_address = config.get(\"gateway_ip_address\")\n    instance.network_id = config.get(\"network_id\")\n    instance.vlan_id = config.get(\"vlan_id\")\n    instance.vrf_name = config.get(\"vrf_name\")\n    instance.commit()\nexcept ValueError as error:\n    msg = \"Error creating network. \"\n    msg += f\"Error detail: {error}\"\n    log.error(msg)\n    print(msg)\n    sys.exit(1)\n\nmsg = f\"Network {config.get('network_name')} \"\nmsg += f\"created in fabric {config.get('fabric_name')}\"\nprint(msg)\n</code></pre>"},{"location":"classes/NetworkDelete/","title":"NetworkDelete","text":""},{"location":"classes/NetworkDelete/#description","title":"Description","text":"<p>Delete a network</p>"},{"location":"classes/NetworkDelete/#raises","title":"Raises","text":"<ul> <li> <p><code>ValueError</code></p> <ul> <li><code>rest_send</code> is not set prior to calling <code>commit</code>.</li> <li><code>results</code> is not set prior to calling <code>commit</code>.</li> <li><code>network_name</code> is not set prior to calling <code>commit</code>.</li> <li><code>fabric_name</code> is not set prior to calling <code>commit</code>.</li> <li><code>fabric_name</code> does not exist on the controller.</li> <li><code>network_name</code> does not exist in fabric <code>fabric_name</code>.</li> <li>An error occurred when sending the <code>DELETE</code> request to the controller.</li> </ul> </li> </ul>"},{"location":"classes/NetworkDelete/#properties","title":"Properties","text":""},{"location":"classes/NetworkDelete/#mandatory","title":"Mandatory","text":""},{"location":"classes/NetworkDelete/#fabric_name","title":"fabric_name","text":"<p>The name of the fabric containing the network to be deleted.</p> <ul> <li>default: None</li> <li>example: MyFabric</li> <li>type: str</li> </ul>"},{"location":"classes/NetworkDelete/#network_name","title":"network_name","text":"<p>The name of the network to delete.</p> <ul> <li>default: None</li> <li>example: MyNet</li> <li>type: str</li> </ul>"},{"location":"classes/NetworkDelete/#optional","title":"Optional","text":"<p>None</p>"},{"location":"classes/NetworkDelete/#example-script","title":"Example script","text":"Example Script<pre><code>import argparse\nimport logging\nimport sys\n\n# We are using our local copy of log_v2.py which is modified to allow\n# console logging.  The copy in the DCNM Ansible Collection specifically\n# disallows console logging.\nfrom ndfc_python.ndfc_python_config import NdfcPythonConfig\nfrom ndfc_python.ndfc_python_logger import NdfcPythonLogger\nfrom ndfc_python.ndfc_python_sender import NdfcPythonSender\nfrom ndfc_python.network_delete import NetworkDelete\nfrom ndfc_python.parsers.parser_config import parser_config\nfrom ndfc_python.parsers.parser_controller_domain import parser_controller_domain\nfrom ndfc_python.parsers.parser_controller_ip4 import parser_controller_ip4\nfrom ndfc_python.parsers.parser_controller_password import parser_controller_password\nfrom ndfc_python.parsers.parser_controller_username import parser_controller_username\nfrom ndfc_python.parsers.parser_loglevel import parser_loglevel\nfrom plugins.module_utils.common.response_handler import ResponseHandler\nfrom plugins.module_utils.common.rest_send_v2 import RestSend\nfrom plugins.module_utils.common.results import Results\n\n\ndef setup_parser() -&gt; argparse.Namespace:\n    \"\"\"\n    ### Summary\n\n    Setup script-specific parser\n\n    Returns:\n        argparse.Namespace\n    \"\"\"\n    parser = argparse.ArgumentParser(\n        parents=[\n            parser_config,\n            parser_loglevel,\n            parser_controller_domain,\n            parser_controller_ip4,\n            parser_controller_password,\n            parser_controller_username,\n        ],\n        description=\"DESCRIPTION: Delete a network.\",\n    )\n    return parser.parse_args()\n\n\nargs = setup_parser()\n\n\nNdfcPythonLogger()\nlog = logging.getLogger(\"ndfc_python.main\")\nlog.setLevel = args.loglevel\n\ntry:\n    ndfc_sender = NdfcPythonSender()\n    ndfc_sender.args = args\n    ndfc_sender.commit()\nexcept ValueError as error:\n    msg = f\"Exiting.  Error detail: {error}\"\n    log.error(msg)\n    print(msg)\n    sys.exit(1)\n\ntry:\n    ndfc_config = NdfcPythonConfig()\n    ndfc_config.filename = args.config\n    ndfc_config.commit()\n    config = ndfc_config.contents[\"config\"]\nexcept ValueError as error:\n    msg = f\"Exiting: Error detail: {error}\"\n    log.error(msg)\n    print(msg)\n    sys.exit(1)\n\nrest_send = RestSend({})\nrest_send.sender = ndfc_sender.sender\nrest_send.response_handler = ResponseHandler()\n\ntry:\n    instance = NetworkDelete()\n    instance.rest_send = rest_send\n    instance.results = Results()\n    instance.fabric_name = config.get(\"fabric_name\")\n    instance.network_name = config.get(\"network_name\")\n    instance.commit()\nexcept ValueError as error:\n    msg = \"Error deleting network. \"\n    msg += f\"Error detail: {error}\"\n    log.error(msg)\n    print(msg)\n    sys.exit(1)\n\nmsg = f\"Network {config.get('network_name')} \"\nmsg += f\"deleted from fabric {config.get('fabric_name')}\"\nprint(msg)\n</code></pre>"},{"location":"classes/overview/","title":"Classes","text":"<p><code>*</code> indicates that a class has not yet been updated to work with RestSend().</p> Library Description Log Create the base ndfc_python logging object NdfcCredentials Read the caller's Ansible Vault and provides the credentials therein to the other libraries NdfcDeviceInfo <code>*</code> Retrieve information about a switch NdfcDiscover Discover device NdfcPolicy <code>*</code> Create / delete policies NdfcPythonConfig Returns the contents of a YAML file as a dictionary, given a path to the file NdfcPythonLogger Configure logging for <code>ndfc-python</code> scripts NdfcPythonSender Instantiate and configure the Sender() class NdfcReachability <code>*</code> Test switch reachability (from NDFC controller perspective). NetworkCreate Create networks NetworkDelete Delete networks VrfCreate Create VRFs Validations Validation methods used by the other classes (deprecated) YamlReader Read a YAML file and return its contents as a python dict"},{"location":"scripts/device_info/","title":"device_info.py","text":""},{"location":"scripts/device_info/#description","title":"Description","text":"<p>Returns switch information.</p>"},{"location":"scripts/device_info/#usage","title":"Usage","text":"<pre><code>./device_info.py --config config_device_info.yaml\n</code></pre>"},{"location":"scripts/device_info/#example-config-file","title":"Example Config File","text":"config_device_info.yaml<pre><code>---\nconfig:\n  switch_ip4: 10.1.1.1\n</code></pre>"},{"location":"scripts/device_info/#sample-output","title":"Sample output","text":""},{"location":"scripts/device_info/#success","title":"Success","text":"<pre><code>(.venv) AROBEL-M-G793% ./device_info.py --config prod/config_device_info.yaml\nfabric_name: f1\nserial_number: FDO211229AH\nstatus: ok\nmodel: N9K-C93180YC-EX\n(.venv) AROBEL-M-G793%\n</code></pre>"},{"location":"scripts/device_info/#failure","title":"Failure","text":"<pre><code>(.venv) AROBEL-M-G793% ./device_info.py --config prod/config_device_info.yaml\nUnable to get switch details. Error details: SwitchDetails._get: Switch with ip_address 172.22.150.10 does not exist on the controller.\n(.venv) AROBEL-M-G793%\n</code></pre>"},{"location":"scripts/fabric_details/","title":"fabric_details.py","text":""},{"location":"scripts/fabric_details/#description","title":"Description","text":"<p>Returns fabric details.</p>"},{"location":"scripts/fabric_details/#usage","title":"Usage","text":"<pre><code>export NDFC_DOMAIN=local\nexport NDFC_IP4=10.1.1.1\nexport NDFC_PASSWORD=MySecret\nexport NDFC_USERNAME=admin\n./fabric_details.py --config config_fabric_details.yaml\n</code></pre> <p>Environment variables (all, or a subset) can be overridden on the command line.</p> <pre><code>./fabric_details.py --config config_fabric_details.yaml --username admin --password MySecret --domain local --ip4 10.1.1.1\n</code></pre>"},{"location":"scripts/fabric_details/#example-config-file","title":"Example Config File","text":"config_fabric_details.yaml<pre><code>---\nconfig:\n  fabric_name: MyFabric\n</code></pre>"},{"location":"scripts/fabric_details/#sample-output","title":"Sample output","text":""},{"location":"scripts/fabric_details/#success","title":"Success","text":"<pre><code>(.venv) AROBEL-M-G793% ./fabric_details.py --config prod/config_fabric_details.yaml\n{\n    \"asn\": \"65001\",\n    \"createdOn\": 1722963281113,\n    \"deviceType\": \"n9k\",\n    \"fabricId\": \"FABRIC-3\",\n    \"fabricName\": \"f1\",\n    \"fabricTechnology\": \"VXLANFabric\",\n    \"fabricTechnologyFriendly\": \"VXLAN EVPN\",\n    \"fabricType\": \"Switch_Fabric\",\n    \"fabricTypeFriendly\": \"Switch Fabric\",\n    \"id\": 3,\n    \"modifiedOn\": 1727463769187,\n    \"networkExtensionTemplate\": \"Default_Network_Extension_Universal\",\n    \"networkTemplate\": \"Default_Network_Universal\",\n    \"nvPairs\": {\n        \"AAA_REMOTE_IP_ENABLED\": \"false\",\n        \"AAA_SERVER_CONF\": \"\",\n        \"ACTIVE_MIGRATION\": \"false\",\n        \"ADVERTISE_PIP_BGP\": \"true\",\n        \"ADVERTISE_PIP_ON_BORDER\": \"false\",\n        \"AGENT_INTF\": \"eth0\",\n        \"AGG_ACC_VPC_PO_ID_RANGE\": \"\",\n        \"AI_ML_QOS_POLICY\": \"AI_Fabric_QOS_400G\",\n        \"ALLOW_L3VNI_NO_VLAN\": \"true\",\n        \"ALLOW_L3VNI_NO_VLAN_PREV\": \"true\",\n        \"ALLOW_NXC\": \"true\",\n        \"ALLOW_NXC_PREV\": \"true\",\n        \"ANYCAST_BGW_ADVERTISE_PIP\": \"false\",\n        \"ANYCAST_GW_MAC\": \"2020.0000.00aa\",\n        \"ANYCAST_LB_ID\": \"\",\n        \"ANYCAST_RP_IP_RANGE\": \"\",\n        \"ANYCAST_RP_IP_RANGE_INTERNAL\": \"\",\n        \"AUTO_SYMMETRIC_DEFAULT_VRF\": \"false\",\n        \"AUTO_SYMMETRIC_VRF_LITE\": \"false\",\n        \"AUTO_UNIQUE_VRF_LITE_IP_PREFIX\": \"false\",\n        \"AUTO_UNIQUE_VRF_LITE_IP_PREFIX_PREV\": \"false\",\n        \"AUTO_VRFLITE_IFC_DEFAULT_VRF\": \"false\",\n        \"BANNER\": \"\",\n        \"BFD_AUTH_ENABLE\": \"false\",\n        \"BFD_AUTH_KEY\": \"\",\n        \"BFD_AUTH_KEY_ID\": \"\",\n        \"BFD_ENABLE\": \"false\",\n        \"BFD_ENABLE_PREV\": \"false\",\n        \"BFD_IBGP_ENABLE\": \"false\",\n        \"BFD_ISIS_ENABLE\": \"false\",\n        \"BFD_OSPF_ENABLE\": \"false\",\n        \"BFD_PIM_ENABLE\": \"false\",\n        \"BGP_AS\": \"65001\",\n        \"BGP_AS_PREV\": \"65001\",\n        \"BGP_AUTH_ENABLE\": \"false\",\n        \"BGP_AUTH_KEY\": \"\",\n        \"BGP_AUTH_KEY_TYPE\": \"3\",\n        \"BGP_LB_ID\": \"0\",\n        \"BOOTSTRAP_CONF\": \"\",\n        \"BOOTSTRAP_ENABLE\": \"false\",\n        \"BOOTSTRAP_ENABLE_PREV\": \"false\",\n        \"BOOTSTRAP_MULTISUBNET\": \"#Scope_Start_IP, Scope_End_IP, Scope_Default_Gateway, Scope_Subnet_Prefix\",\n        \"BOOTSTRAP_MULTISUBNET_INTERNAL\": \"\",\n        \"BRFIELD_DEBUG_FLAG\": \"Disable\",\n        \"BROWNFIELD_NETWORK_NAME_FORMAT\": \"Auto_Net_VNI$$VNI$$_VLAN$$VLAN_ID$$\",\n        \"BROWNFIELD_SKIP_OVERLAY_NETWORK_ATTACHMENTS\": \"false\",\n        \"CDP_ENABLE\": \"false\",\n        \"COPP_POLICY\": \"strict\",\n        \"DCI_MACSEC_ALGORITHM\": \"\",\n        \"DCI_MACSEC_CIPHER_SUITE\": \"\",\n        \"DCI_MACSEC_FALLBACK_ALGORITHM\": \"\",\n        \"DCI_MACSEC_FALLBACK_KEY_STRING\": \"\",\n        \"DCI_MACSEC_KEY_STRING\": \"\",\n        \"DCI_SUBNET_RANGE\": \"10.13.0.0/16\",\n        \"DCI_SUBNET_TARGET_MASK\": \"31\",\n        \"DEAFULT_QUEUING_POLICY_CLOUDSCALE\": \"queuing_policy_default_8q_cloudscale\",\n        \"DEAFULT_QUEUING_POLICY_OTHER\": \"queuing_policy_default_other\",\n        \"DEAFULT_QUEUING_POLICY_R_SERIES\": \"queuing_policy_default_r_series\",\n        \"DEFAULT_VRF_REDIS_BGP_RMAP\": \"\",\n        \"DEPLOYMENT_FREEZE\": \"false\",\n        \"DHCP_ENABLE\": \"false\",\n        \"DHCP_END\": \"\",\n        \"DHCP_END_INTERNAL\": \"\",\n        \"DHCP_IPV6_ENABLE\": \"\",\n        \"DHCP_IPV6_ENABLE_INTERNAL\": \"\",\n        \"DHCP_START\": \"\",\n        \"DHCP_START_INTERNAL\": \"\",\n        \"DNS_SERVER_IP_LIST\": \"\",\n        \"DNS_SERVER_VRF\": \"\",\n        \"DOMAIN_NAME_INTERNAL\": \"\",\n        \"ENABLE_AAA\": \"false\",\n        \"ENABLE_AGENT\": \"false\",\n        \"ENABLE_AGG_ACC_ID_RANGE\": \"false\",\n        \"ENABLE_AI_ML_QOS_POLICY\": \"false\",\n        \"ENABLE_AI_ML_QOS_POLICY_FLAP\": \"false\",\n        \"ENABLE_DCI_MACSEC\": \"false\",\n        \"ENABLE_DCI_MACSEC_PREV\": \"false\",\n        \"ENABLE_DEFAULT_QUEUING_POLICY\": \"false\",\n        \"ENABLE_EVPN\": \"true\",\n        \"ENABLE_FABRIC_VPC_DOMAIN_ID\": \"false\",\n        \"ENABLE_FABRIC_VPC_DOMAIN_ID_PREV\": \"false\",\n        \"ENABLE_L3VNI_NO_VLAN\": \"false\",\n        \"ENABLE_MACSEC\": \"false\",\n        \"ENABLE_MACSEC_PREV\": \"false\",\n        \"ENABLE_NETFLOW\": \"false\",\n        \"ENABLE_NETFLOW_PREV\": \"false\",\n        \"ENABLE_NGOAM\": \"true\",\n        \"ENABLE_NXAPI\": \"true\",\n        \"ENABLE_NXAPI_HTTP\": \"true\",\n        \"ENABLE_PBR\": \"false\",\n        \"ENABLE_PVLAN\": \"false\",\n        \"ENABLE_PVLAN_PREV\": \"false\",\n        \"ENABLE_QKD\": \"false\",\n        \"ENABLE_RT_INTF_STATS\": \"false\",\n        \"ENABLE_SGT\": \"false\",\n        \"ENABLE_SGT_PREV\": \"false\",\n        \"ENABLE_TENANT_DHCP\": \"true\",\n        \"ENABLE_TRM\": \"false\",\n        \"ENABLE_TRMv6\": \"false\",\n        \"ENABLE_VPC_PEER_LINK_NATIVE_VLAN\": \"false\",\n        \"ENABLE_VRI_ID_REALLOC\": \"false\",\n        \"EXTRA_CONF_INTRA_LINKS\": \"\",\n        \"EXTRA_CONF_LEAF\": \"\",\n        \"EXTRA_CONF_SPINE\": \"\",\n        \"EXTRA_CONF_TOR\": \"\",\n        \"EXT_FABRIC_TYPE\": \"\",\n        \"FABRIC_INTERFACE_TYPE\": \"p2p\",\n        \"FABRIC_MTU\": \"9216\",\n        \"FABRIC_MTU_PREV\": \"9216\",\n        \"FABRIC_NAME\": \"f1\",\n        \"FABRIC_TYPE\": \"Switch_Fabric\",\n        \"FABRIC_VPC_DOMAIN_ID\": \"\",\n        \"FABRIC_VPC_DOMAIN_ID_PREV\": \"\",\n        \"FABRIC_VPC_QOS\": \"false\",\n        \"FABRIC_VPC_QOS_POLICY_NAME\": \"spine_qos_for_fabric_vpc_peering\",\n        \"FEATURE_PTP\": \"false\",\n        \"FEATURE_PTP_INTERNAL\": \"false\",\n        \"FF\": \"Easy_Fabric\",\n        \"GRFIELD_DEBUG_FLAG\": \"Disable\",\n        \"HD_TIME\": \"180\",\n        \"HOST_INTF_ADMIN_STATE\": \"true\",\n        \"IBGP_PEER_TEMPLATE\": \"\",\n        \"IBGP_PEER_TEMPLATE_LEAF\": \"\",\n        \"IGNORE_CERT\": \"false\",\n        \"INBAND_DHCP_SERVERS\": \"\",\n        \"INBAND_MGMT\": \"false\",\n        \"INBAND_MGMT_PREV\": \"false\",\n        \"INTF_STAT_LOAD_INTERVAL\": \"\",\n        \"IPv6_ANYCAST_RP_IP_RANGE\": \"\",\n        \"IPv6_ANYCAST_RP_IP_RANGE_INTERNAL\": \"\",\n        \"IPv6_MULTICAST_GROUP_SUBNET\": \"\",\n        \"ISIS_AREA_NUM\": \"0001\",\n        \"ISIS_AREA_NUM_PREV\": \"\",\n        \"ISIS_AUTH_ENABLE\": \"false\",\n        \"ISIS_AUTH_KEY\": \"\",\n        \"ISIS_AUTH_KEYCHAIN_KEY_ID\": \"\",\n        \"ISIS_AUTH_KEYCHAIN_NAME\": \"\",\n        \"ISIS_LEVEL\": \"level-2\",\n        \"ISIS_OVERLOAD_ELAPSE_TIME\": \"\",\n        \"ISIS_OVERLOAD_ENABLE\": \"false\",\n        \"ISIS_P2P_ENABLE\": \"false\",\n        \"KME_SERVER_IP\": \"\",\n        \"KME_SERVER_PORT\": \"\",\n        \"L2_HOST_INTF_MTU\": \"9216\",\n        \"L2_HOST_INTF_MTU_PREV\": \"9216\",\n        \"L2_SEGMENT_ID_RANGE\": \"30000-49000\",\n        \"L3VNI_IPv6_MCAST_GROUP\": \"\",\n        \"L3VNI_MCAST_GROUP\": \"\",\n        \"L3_PARTITION_ID_RANGE\": \"50000-59000\",\n        \"LINK_STATE_ROUTING\": \"ospf\",\n        \"LINK_STATE_ROUTING_TAG\": \"UNDERLAY\",\n        \"LINK_STATE_ROUTING_TAG_PREV\": \"UNDERLAY\",\n        \"LOOPBACK0_IPV6_RANGE\": \"\",\n        \"LOOPBACK0_IP_RANGE\": \"10.10.0.0/22\",\n        \"LOOPBACK1_IPV6_RANGE\": \"\",\n        \"LOOPBACK1_IP_RANGE\": \"10.11.0.0/22\",\n        \"MACSEC_ALGORITHM\": \"\",\n        \"MACSEC_CIPHER_SUITE\": \"\",\n        \"MACSEC_FALLBACK_ALGORITHM\": \"\",\n        \"MACSEC_FALLBACK_KEY_STRING\": \"\",\n        \"MACSEC_KEY_STRING\": \"\",\n        \"MACSEC_REPORT_TIMER\": \"\",\n        \"MGMT_GW\": \"\",\n        \"MGMT_GW_INTERNAL\": \"\",\n        \"MGMT_PREFIX\": \"\",\n        \"MGMT_PREFIX_INTERNAL\": \"\",\n        \"MGMT_V6PREFIX\": \"\",\n        \"MGMT_V6PREFIX_INTERNAL\": \"\",\n        \"MPLS_HANDOFF\": \"false\",\n        \"MPLS_ISIS_AREA_NUM\": \"0001\",\n        \"MPLS_ISIS_AREA_NUM_PREV\": \"\",\n        \"MPLS_LB_ID\": \"\",\n        \"MPLS_LOOPBACK_IP_RANGE\": \"\",\n        \"MSO_CONNECTIVITY_DEPLOYED\": \"\",\n        \"MSO_CONTROLER_ID\": \"\",\n        \"MSO_SITE_GROUP_NAME\": \"\",\n        \"MSO_SITE_ID\": \"\",\n        \"MST_INSTANCE_RANGE\": \"\",\n        \"MULTICAST_GROUP_SUBNET\": \"\",\n        \"MVPN_VRI_ID_RANGE\": \"\",\n        \"NETFLOW_EXPORTER_LIST\": \"\",\n        \"NETFLOW_MONITOR_LIST\": \"\",\n        \"NETFLOW_RECORD_LIST\": \"\",\n        \"NETWORK_VLAN_RANGE\": \"2300-2999\",\n        \"NTP_SERVER_IP_LIST\": \"\",\n        \"NTP_SERVER_VRF\": \"\",\n        \"NVE_LB_ID\": \"1\",\n        \"NXAPI_HTTPS_PORT\": \"443\",\n        \"NXAPI_HTTP_PORT\": \"80\",\n        \"NXC_DEST_VRF\": \"management\",\n        \"NXC_PROXY_PORT\": \"8080\",\n        \"NXC_PROXY_SERVER\": \"\",\n        \"NXC_SRC_INTF\": \"\",\n        \"OBJECT_TRACKING_NUMBER_RANGE\": \"100-299\",\n        \"OSPF_AREA_ID\": \"0.0.0.0\",\n        \"OSPF_AUTH_ENABLE\": \"false\",\n        \"OSPF_AUTH_KEY\": \"\",\n        \"OSPF_AUTH_KEY_ID\": \"\",\n        \"OVERLAY_MODE\": \"config-profile\",\n        \"OVERLAY_MODE_PREV\": \"config-profile\",\n        \"OVERWRITE_GLOBAL_NXC\": \"false\",\n        \"PER_VRF_LOOPBACK_AUTO_PROVISION\": \"false\",\n        \"PER_VRF_LOOPBACK_AUTO_PROVISION_PREV\": \"false\",\n        \"PER_VRF_LOOPBACK_AUTO_PROVISION_V6\": \"false\",\n        \"PER_VRF_LOOPBACK_AUTO_PROVISION_V6_PREV\": \"false\",\n        \"PER_VRF_LOOPBACK_IP_RANGE\": \"\",\n        \"PER_VRF_LOOPBACK_IP_RANGE_V6\": \"\",\n        \"PFC_WATCH_INT\": \"\",\n        \"PFC_WATCH_INT_PREV\": \"\",\n        \"PHANTOM_RP_LB_ID1\": \"\",\n        \"PHANTOM_RP_LB_ID2\": \"\",\n        \"PHANTOM_RP_LB_ID3\": \"\",\n        \"PHANTOM_RP_LB_ID4\": \"\",\n        \"PIM_HELLO_AUTH_ENABLE\": \"false\",\n        \"PIM_HELLO_AUTH_KEY\": \"\",\n        \"PM_ENABLE\": \"false\",\n        \"PM_ENABLE_PREV\": \"false\",\n        \"PNP_ENABLE_INTERNAL\": \"\",\n        \"POWER_REDUNDANCY_MODE\": \"ps-redundant\",\n        \"PREMSO_PARENT_FABRIC\": \"\",\n        \"PTP_DOMAIN_ID\": \"\",\n        \"PTP_LB_ID\": \"\",\n        \"PTP_VLAN_ID\": \"\",\n        \"QKD_PROFILE_NAME\": \"\",\n        \"QKD_PROFILE_NAME_PREV\": \"\",\n        \"REPLICATION_MODE\": \"Ingress\",\n        \"ROUTER_ID_RANGE\": \"\",\n        \"ROUTE_MAP_SEQUENCE_NUMBER_RANGE\": \"1-65534\",\n        \"RP_COUNT\": \"2\",\n        \"RP_LB_ID\": \"\",\n        \"RP_MODE\": \"asm\",\n        \"RR_COUNT\": \"2\",\n        \"SEED_SWITCH_CORE_INTERFACES\": \"\",\n        \"SERVICE_NETWORK_VLAN_RANGE\": \"3000-3199\",\n        \"SGT_ID_RANGE\": \"\",\n        \"SGT_NAME_PREFIX\": \"\",\n        \"SGT_OPER_STATUS\": \"off\",\n        \"SGT_PREPROVISION\": \"false\",\n        \"SGT_PREPROVISION_PREV\": \"false\",\n        \"SGT_PREPROV_RECALC_STATUS\": \"empty\",\n        \"SGT_RECALC_STATUS\": \"empty\",\n        \"SITE_ID\": \"65001\",\n        \"SITE_ID_POLICY_ID\": \"\",\n        \"SLA_ID_RANGE\": \"10000-19999\",\n        \"SNMP_SERVER_HOST_TRAP\": \"true\",\n        \"SPINE_COUNT\": \"2\",\n        \"SPINE_SWITCH_CORE_INTERFACES\": \"\",\n        \"SSPINE_ADD_DEL_DEBUG_FLAG\": \"Disable\",\n        \"SSPINE_COUNT\": \"0\",\n        \"STATIC_UNDERLAY_IP_ALLOC\": \"false\",\n        \"STP_BRIDGE_PRIORITY\": \"\",\n        \"STP_ROOT_OPTION\": \"unmanaged\",\n        \"STP_VLAN_RANGE\": \"\",\n        \"STRICT_CC_MODE\": \"false\",\n        \"SUBINTERFACE_RANGE\": \"2-511\",\n        \"SUBNET_RANGE\": \"10.12.0.0/16\",\n        \"SUBNET_TARGET_MASK\": \"31\",\n        \"SYSLOG_SERVER_IP_LIST\": \"\",\n        \"SYSLOG_SERVER_VRF\": \"\",\n        \"SYSLOG_SEV\": \"\",\n        \"TCAM_ALLOCATION\": \"true\",\n        \"TOPDOWN_CONFIG_RM_TRACKING\": \"notstarted\",\n        \"TRUSTPOINT_LABEL\": \"\",\n        \"UNDERLAY_IS_V6\": \"false\",\n        \"UNDERLAY_IS_V6_PREV\": \"false\",\n        \"UNNUM_BOOTSTRAP_LB_ID\": \"\",\n        \"UNNUM_DHCP_END\": \"\",\n        \"UNNUM_DHCP_END_INTERNAL\": \"\",\n        \"UNNUM_DHCP_START\": \"\",\n        \"UNNUM_DHCP_START_INTERNAL\": \"\",\n        \"UPGRADE_FROM_VERSION\": \"\",\n        \"USE_LINK_LOCAL\": \"false\",\n        \"V6_SUBNET_RANGE\": \"\",\n        \"V6_SUBNET_TARGET_MASK\": \"126\",\n        \"VPC_AUTO_RECOVERY_TIME\": \"360\",\n        \"VPC_DELAY_RESTORE\": \"150\",\n        \"VPC_DELAY_RESTORE_TIME\": \"60\",\n        \"VPC_DOMAIN_ID_RANGE\": \"1-1000\",\n        \"VPC_ENABLE_IPv6_ND_SYNC\": \"true\",\n        \"VPC_PEER_KEEP_ALIVE_OPTION\": \"management\",\n        \"VPC_PEER_LINK_PO\": \"500\",\n        \"VPC_PEER_LINK_VLAN\": \"3600\",\n        \"VRF_LITE_AUTOCONFIG\": \"Manual\",\n        \"VRF_VLAN_RANGE\": \"2000-2299\",\n        \"abstract_anycast_rp\": \"anycast_rp\",\n        \"abstract_bgp\": \"base_bgp\",\n        \"abstract_bgp_neighbor\": \"evpn_bgp_rr_neighbor\",\n        \"abstract_bgp_rr\": \"evpn_bgp_rr\",\n        \"abstract_dhcp\": \"base_dhcp\",\n        \"abstract_extra_config_bootstrap\": \"extra_config_bootstrap_11_1\",\n        \"abstract_extra_config_leaf\": \"extra_config_leaf\",\n        \"abstract_extra_config_spine\": \"extra_config_spine\",\n        \"abstract_extra_config_tor\": \"extra_config_tor\",\n        \"abstract_feature_leaf\": \"base_feature_leaf_upg\",\n        \"abstract_feature_spine\": \"base_feature_spine_upg\",\n        \"abstract_isis\": \"base_isis_level2\",\n        \"abstract_isis_interface\": \"isis_interface\",\n        \"abstract_loopback_interface\": \"int_fabric_loopback_11_1\",\n        \"abstract_multicast\": \"base_multicast_11_1\",\n        \"abstract_ospf\": \"base_ospf\",\n        \"abstract_ospf_interface\": \"ospf_interface_11_1\",\n        \"abstract_pim_interface\": \"pim_interface\",\n        \"abstract_route_map\": \"route_map\",\n        \"abstract_routed_host\": \"int_routed_host\",\n        \"abstract_trunk_host\": \"int_trunk_host\",\n        \"abstract_vlan_interface\": \"int_fabric_vlan_11_1\",\n        \"abstract_vpc_domain\": \"base_vpc_domain_11_1\",\n        \"dcnmUser\": \"admin\",\n        \"default_network\": \"Default_Network_Universal\",\n        \"default_pvlan_sec_network\": \"\",\n        \"default_vrf\": \"Default_VRF_Universal\",\n        \"enableRealTimeBackup\": \"\",\n        \"enableScheduledBackup\": \"\",\n        \"network_extension_template\": \"Default_Network_Extension_Universal\",\n        \"scheduledTime\": \"\",\n        \"temp_anycast_gateway\": \"anycast_gateway\",\n        \"temp_vpc_domain_mgmt\": \"vpc_domain_mgmt\",\n        \"temp_vpc_peer_link\": \"int_vpc_peer_link_po\",\n        \"vrf_extension_template\": \"Default_VRF_Extension_Universal\"\n    },\n    \"operStatus\": \"CRITICAL\",\n    \"provisionMode\": \"DCNMTopDown\",\n    \"replicationMode\": \"Ingress\",\n    \"siteId\": \"65001\",\n    \"templateFabricType\": \"Data Center VXLAN EVPN\",\n    \"templateName\": \"Easy_Fabric\",\n    \"vrfExtensionTemplate\": \"Default_VRF_Extension_Universal\",\n    \"vrfTemplate\": \"Default_VRF_Universal\"\n}\n(.venv) AROBEL-M-G793%\n</code></pre>"},{"location":"scripts/fabric_details/#failure","title":"Failure","text":""},{"location":"scripts/fabric_details/#fabric-does-not-exist","title":"Fabric does not exist","text":"<pre><code>(.venv) AROBEL-M-G793% ./fabric_details.py --config prod/config_fabric_details.yaml\nFabric MyFabric does not exist on the controller\n(.venv) AROBEL-M-G793%\n</code></pre>"},{"location":"scripts/fabric_details/#invalid-credentials","title":"Invalid credentials","text":"<pre><code>(.venv) AROBEL-M-G793% ./fabric_details.py --config prod/config_fabric_details.yaml --username SomeRandomDude\nExiting.  Error detail: NdfcPythonSender.commit: Unable to login to the controller. Error detail: Sender.update_token: Unable to parse token from response: {'RETURN_CODE': 401, 'DATA': {'error': 'Invalid Username/Password'}, 'MESSAGE': 'Unauthorized', 'METHOD': 'POST', 'REQUEST_PATH': 'https://10.1.1.1/login'}\n(.venv) AROBEL-M-G793%\n</code></pre>"},{"location":"scripts/network_create/","title":"network_create.py","text":""},{"location":"scripts/network_create/#description","title":"Description","text":"<p>Create a network.</p>"},{"location":"scripts/network_create/#usage","title":"Usage","text":"<pre><code>./network_create.py --config config_network_create.yaml\n</code></pre>"},{"location":"scripts/network_create/#example-config-file","title":"Example Config File","text":"config_network_create.yaml<pre><code>---\nconfig:\n  fabric_name: MyFabric\n  network_name: MyNet\n  enable_ir: True\n  gateway_ip_address: 10.1.1.1/24\n  network_id: 30005\n  vlan_id: 3005\n  vrf_name: MyVrf\n</code></pre>"},{"location":"scripts/network_create/#example-output","title":"Example output","text":""},{"location":"scripts/network_create/#success","title":"Success","text":"<pre><code>(.venv) AROBEL-M-G793% ./network_create.py --config prod/config_network_create.yaml\nNetwork MyNet with id 30005 created in fabric MyFabric\n(.venv) AROBEL-M-G793%\n</code></pre>"},{"location":"scripts/network_create/#failure","title":"Failure","text":"<pre><code>(.venv) AROBEL-M-G793% ./network_create.py --config prod/config_network_create.yaml\nError creating network. Error detail: NetworkCreate.commit: networkId 30005 already exists in fabric MyFabric. Delete it before calling NetworkCreate.commit\n(.venv) AROBEL-M-G793%\n</code></pre>"},{"location":"scripts/network_delete/","title":"network_delete.py","text":""},{"location":"scripts/network_delete/#description","title":"Description","text":"<p>Delete a network.</p>"},{"location":"scripts/network_delete/#usage","title":"Usage","text":"<pre><code>./network_delete.py --config config_network_delete.yaml\n</code></pre>"},{"location":"scripts/network_delete/#example-config-file","title":"Example Config File","text":"config_network_delete.yaml<pre><code>---\nconfig:\n  fabric_name: MyFabric\n  network_name: MyNet\n</code></pre>"},{"location":"scripts/network_delete/#example-output","title":"Example output","text":""},{"location":"scripts/network_delete/#success","title":"Success","text":"<pre><code>(.venv) AROBEL-M-G793% ./network_delete.py --config prod/config_network_delete.yaml\nNetwork MyNet deleted from fabric MyFabric\n(.venv) AROBEL-M-G793%\n</code></pre>"},{"location":"scripts/network_delete/#failure-network-does-not-exist-in-fabric","title":"Failure - Network does not exist in fabric","text":"<pre><code>(.venv) AROBEL-M-G793% ./network_delete.py --config prod/config_network_delete.yaml\nError deleting network. Error detail: NetworkDelete.commit: networkName MyNet does not exist in fabric MyFabric.\n(.venv) AROBEL-M-G793%\n</code></pre>"},{"location":"scripts/network_delete/#failure-fabric-does-not-exist","title":"Failure - Fabric does not exist","text":"<pre><code>(.venv) AROBEL-M-G793% ./network_delete.py --config config_network_delete.yaml\nError deleting network. Error detail: NetworkDelete.commit: fabric_name MyFabric does not exist on the controller.\n(.venv) AROBEL-M-G793%\n</code></pre>"},{"location":"setup/clone-the-repositories/","title":"Clone the repositories","text":"<p>We'll need to clone two repositories.</p> <ul> <li>ndfc-python</li> <li>ansible-dcnm</li> </ul> <p>It's recommended to clone the repositories side-by-side in the directory where you keep your repositories.  We'll use <code>$HOME/repos</code> in our examples.</p>"},{"location":"setup/clone-the-repositories/#ndfc-python","title":"<code>ndfc-python</code>","text":"<pre><code>cd $HOME/repos\ngit clone https://github.com/allenrobel/ndfc-python.git\n</code></pre>"},{"location":"setup/clone-the-repositories/#ansible-dcnm","title":"<code>ansible-dcnm</code>","text":"<pre><code>cd $HOME/repos\ngit clone https://github.com/CiscoDevNet/ansible-dcnm.git\n</code></pre> <p>Until relative-imports are integrated into the <code>ansible-dcnm</code> repository, you'll need to switch branches.</p> <pre><code>cd $HOME/repos/ansible-dcnm\ngit switch relative-imports\n</code></pre>"},{"location":"setup/enable-logging/","title":"Enable logging","text":"<p>If you want to enable script logging (optional), set the following environment variable.</p> <pre><code>export NDFC_LOGGING_CONFIG=$HOME/repos/ndfc-python/lib/ndfc_python/logging_config.json\n</code></pre> <p>This is a standard Pyton logging configuration file.  There is an example file in this repository at <code>lib/ndfc_python/logging_config.json</code></p>"},{"location":"setup/running-the-example-scripts/","title":"Running the example scripts","text":"<pre><code>export PYTHONPATH=${PYTHONPATH}:/path/to/this/repo/ndfc-python/lib\n# optional - for Ansible Vault\n# export NDFC_PYTHON_CONFIG=/path/to/ndfc-python-settings.yaml\n# optional - to enable logging\n# export NDFC_LOGGING_CONFIG=/path/to/ndfc-python-logging-config.json\n\npy311) ~ % cd $HOME/ndfc-python/examples\n(py311) examples % ./device_info.py --config config_device_info.yaml\n</code></pre>"},{"location":"setup/update-your-pythonpath/","title":"Update your PYTHONPATH","text":"<p>Update your PYTHONPATH to include both <code>ndfc-python</code> and <code>ansible-dcnm</code> repositories.</p> <pre><code>export PYTHONPATH=$PYTHONPATH:$HOME/repos/ndfc-python/lib:$HOME/repos/ansible-dcnm\n</code></pre> <p>With the above in place, imports from the repository will look like the following in your scripts.</p> Example imports<pre><code>from plugins.module_utils.common.rest_send import RestSend\nfrom plugins.module_utils.common.sender_requests import Sender\n</code></pre>"},{"location":"setup/using-ansible-vault/","title":"Using Ansible Vault","text":"<p>ndfc-python can be modified to work with Ansible Vault, per below.</p>"},{"location":"setup/using-ansible-vault/#ansible-python-libraries","title":"Ansible Python Libraries","text":"<p>If you want to use Ansible Vault with <code>ndfc-python</code>, install Ansible.</p>"},{"location":"setup/using-ansible-vault/#example","title":"Example","text":"<pre><code>pip install ansible\n</code></pre>"},{"location":"setup/using-ansible-vault/#config-file","title":"Config File","text":"<p>To use these scripts and libraries with Ansible Vault, you'll need to update a common settings file and set the environment variable <code>NDFC_PYTHON_CONFIG</code> to point to it.  For example, if you want your settings to be located in $HOME/ndfc-python-settings.yaml, then set:</p> <pre><code>export NDFC_PYTHON_CONFIG=$HOME/ndfc-python-settings.yaml\n</code></pre> <p>And edit this file to contain:</p> <pre><code>---\nansible_vault: '/path/to/your/ansible/vault/file'\n</code></pre>"},{"location":"setup/using-ansible-vault/#update-your-vault-with-keyvalues-specific-to-ndfc-python","title":"Update your Vault with key/values specific to ndfc-python","text":"<p>Next, you'll need to edit your Ansible Vault file to add your Nexus Dashboard Controller credentials (username, password, and login domain) and ip address.</p> <p>We may also require the username and password for your switches in the future, so you might want to add this as well.</p> <pre><code>/path/to/your/ansible/vault/file \n</code></pre> <p>It is recommended (but not mandatory) that you encrypt all passwords.  Below is one way to do this.</p>"},{"location":"setup/using-ansible-vault/#modify-pathtoyouransiblevaultfile","title":"Modify /path/to/your/ansible/vault/file","text":""},{"location":"setup/using-ansible-vault/#edit-ansible_password-password-for-ndfc-controller-and-device_password-password-for-nx-os-switches","title":"Edit <code>ansible_password</code> (password for NDFC controller) and <code>device_password</code> (password for NX-OS switches)","text":"<p>Add <code>ansible_password</code> and <code>device_password</code> in encrypted format (or non-encrypted, if you don't care about security).  These are the passwords you use to login to your ND/NDFC Controller, and NX-OS switches, respectively.</p> <p>To add encrypted passwords for the ND/NDFC controller and NX-OS devices, issue the following from this repository's top-level directory.</p> <pre><code>ansible-vault encrypt_string 'mySuperSecretNdfcPassword' --name 'ansible_password' &gt;&gt; /path/to/your/ansible/vault/file\necho \"\" &gt;&gt; /path/to/your/ansible/vault/file\nansible-vault encrypt_string 'mySuperSecretNxosPassword' --name 'device_password' &gt;&gt; /path/to/your/ansible/vault/file\necho \"\" &gt;&gt; /path/to/your/ansible/vault/file\n</code></pre> <p>ansible-vault will prompt you for a vault password, which you'll use to decrypt these passwords when running the example scripts.</p> <p>Example:</p> <pre><code>% ansible-vault encrypt_string 'mySuperSecretNdfcPassword' --name 'ansible_password' &gt;&gt; /path/to/your/ansible/vault/file\nNew Vault password: \nConfirm New Vault password: \n%\n% echo \"\" &gt;&gt; /path/to/your/ansible/vault/file\n% cat /path/to/your/ansible/vault/file\nansible_password: !vault |\n          $ANSIBLE_VAULT;1.1;AES256\n          35313565343034623966323832303764633165386439663133323832383336366362663431366565\n          6238373030393562363831616266336464353963393566300a316564663135323263653165393330\n          33353935396462663531323437336366653937326234313866623535313431366534363938633834\n          6563336634653963320a376364323430316134623430636265383561663631343763646465626365\n          36666366333438373537343033393939653830663061623362613439376161626439\n% \n</code></pre> <p>If you don't care about security, you can add a non-encrypted password by editing the file directly. The following are example unencrypted passwords for the ND/NDFC controller and NX-OS devices added to this file:</p> <pre><code>ansible_password: mySuperSecretNdfcPassword\ndevice_password: mySuperSecretNxosPassword\n</code></pre>"},{"location":"setup/using-ansible-vault/#add-the-domain-for-nexus-dashboard-controller-login","title":"Add the domain for Nexus Dashboard Controller login","text":"<p>Change <code>nd_domain</code> in the same file to the domain associated with the above password that you're using on ND/NDFC.  If the \"domain\" field is not displayed when you login to the GUI, then use local, as shown below.</p> <pre><code>nd_domain: local\n</code></pre>"},{"location":"setup/using-ansible-vault/#add-usernames-for-nexus-dashboard-controller-and-switches","title":"Add usernames for Nexus Dashboard Controller and switches","text":"<p>Change <code>ansible_user</code> in the same file to the username associated with the above password that you're using on ND/NDFC.</p> <p>Change <code>device_username</code> in the same file to the username used to login to your NX-OS switches.</p> <p>Example:</p> <pre><code>ansible_user: voldomort\ndevice_username: admin\n</code></pre>"},{"location":"setup/using-ansible-vault/#add-the-ip-address-of-your-nexus-dashboard-controller","title":"Add the ip address of your Nexus Dashboard Controller","text":"<pre><code>ndfc_ip: 192.168.1.1\n</code></pre>"}]}